{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { ref, isRef, nextTick } from 'vue';\nimport '../../../utils/index.mjs';\nimport { parseHeight } from './util.mjs';\nimport { hasOwn } from '@vue/shared';\nimport { isClient } from '@vueuse/core';\nvar TableLayout = /*#__PURE__*/function () {\n  function TableLayout(options) {\n    _classCallCheck(this, TableLayout);\n    this.observers = [];\n    this.table = null;\n    this.store = null;\n    this.columns = [];\n    this.fit = true;\n    this.showHeader = true;\n    this.height = ref(null);\n    this.scrollX = ref(false);\n    this.scrollY = ref(false);\n    this.bodyWidth = ref(null);\n    this.fixedWidth = ref(null);\n    this.rightFixedWidth = ref(null);\n    this.gutterWidth = 0;\n    for (var name in options) {\n      if (hasOwn(options, name)) {\n        if (isRef(this[name])) {\n          this[name].value = options[name];\n        } else {\n          this[name] = options[name];\n        }\n      }\n    }\n    if (!this.table) {\n      throw new Error(\"Table is required for Table Layout\");\n    }\n    if (!this.store) {\n      throw new Error(\"Store is required for Table Layout\");\n    }\n  }\n  _createClass(TableLayout, [{\n    key: \"updateScrollY\",\n    value: function updateScrollY() {\n      var height = this.height.value;\n      if (height === null) return false;\n      var scrollBarRef = this.table.refs.scrollBarRef;\n      if (this.table.vnode.el && (scrollBarRef == null ? void 0 : scrollBarRef.wrapRef)) {\n        var scrollY = true;\n        var prevScrollY = this.scrollY.value;\n        scrollY = scrollBarRef.wrapRef.scrollHeight > scrollBarRef.wrapRef.clientHeight;\n        this.scrollY.value = scrollY;\n        return prevScrollY !== scrollY;\n      }\n      return false;\n    }\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(value) {\n      var _this = this;\n      var prop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"height\";\n      if (!isClient) return;\n      var el = this.table.vnode.el;\n      value = parseHeight(value);\n      this.height.value = Number(value);\n      if (!el && (value || value === 0)) return nextTick(function () {\n        return _this.setHeight(value, prop);\n      });\n      if (typeof value === \"number\") {\n        el.style[prop] = \"\".concat(value, \"px\");\n        this.updateElsHeight();\n      } else if (typeof value === \"string\") {\n        el.style[prop] = value;\n        this.updateElsHeight();\n      }\n    }\n  }, {\n    key: \"setMaxHeight\",\n    value: function setMaxHeight(value) {\n      this.setHeight(value, \"max-height\");\n    }\n  }, {\n    key: \"getFlattenColumns\",\n    value: function getFlattenColumns() {\n      var flattenColumns = [];\n      var columns = this.table.store.states.columns.value;\n      columns.forEach(function (column) {\n        if (column.isColumnGroup) {\n          flattenColumns.push.apply(flattenColumns, column.columns);\n        } else {\n          flattenColumns.push(column);\n        }\n      });\n      return flattenColumns;\n    }\n  }, {\n    key: \"updateElsHeight\",\n    value: function updateElsHeight() {\n      this.updateScrollY();\n      this.notifyObservers(\"scrollable\");\n    }\n  }, {\n    key: \"headerDisplayNone\",\n    value: function headerDisplayNone(elm) {\n      if (!elm) return true;\n      var headerChild = elm;\n      while (headerChild.tagName !== \"DIV\") {\n        if (getComputedStyle(headerChild).display === \"none\") {\n          return true;\n        }\n        headerChild = headerChild.parentElement;\n      }\n      return false;\n    }\n  }, {\n    key: \"updateColumnsWidth\",\n    value: function updateColumnsWidth() {\n      if (!isClient) return;\n      var fit = this.fit;\n      var bodyWidth = this.table.vnode.el.clientWidth;\n      var bodyMinWidth = 0;\n      var flattenColumns = this.getFlattenColumns();\n      var flexColumns = flattenColumns.filter(function (column) {\n        return typeof column.width !== \"number\";\n      });\n      flattenColumns.forEach(function (column) {\n        if (typeof column.width === \"number\" && column.realWidth) column.realWidth = null;\n      });\n      if (flexColumns.length > 0 && fit) {\n        flattenColumns.forEach(function (column) {\n          bodyMinWidth += Number(column.width || column.minWidth || 80);\n        });\n        if (bodyMinWidth <= bodyWidth) {\n          this.scrollX.value = false;\n          var totalFlexWidth = bodyWidth - bodyMinWidth;\n          if (flexColumns.length === 1) {\n            flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth;\n          } else {\n            var allColumnsWidth = flexColumns.reduce(function (prev, column) {\n              return prev + Number(column.minWidth || 80);\n            }, 0);\n            var flexWidthPerPixel = totalFlexWidth / allColumnsWidth;\n            var noneFirstWidth = 0;\n            flexColumns.forEach(function (column, index) {\n              if (index === 0) return;\n              var flexWidth = Math.floor(Number(column.minWidth || 80) * flexWidthPerPixel);\n              noneFirstWidth += flexWidth;\n              column.realWidth = Number(column.minWidth || 80) + flexWidth;\n            });\n            flexColumns[0].realWidth = Number(flexColumns[0].minWidth || 80) + totalFlexWidth - noneFirstWidth;\n          }\n        } else {\n          this.scrollX.value = true;\n          flexColumns.forEach(function (column) {\n            column.realWidth = Number(column.minWidth);\n          });\n        }\n        this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth);\n        this.table.state.resizeState.value.width = this.bodyWidth.value;\n      } else {\n        flattenColumns.forEach(function (column) {\n          if (!column.width && !column.minWidth) {\n            column.realWidth = 80;\n          } else {\n            column.realWidth = Number(column.width || column.minWidth);\n          }\n          bodyMinWidth += column.realWidth;\n        });\n        this.scrollX.value = bodyMinWidth > bodyWidth;\n        this.bodyWidth.value = bodyMinWidth;\n      }\n      var fixedColumns = this.store.states.fixedColumns.value;\n      if (fixedColumns.length > 0) {\n        var fixedWidth = 0;\n        fixedColumns.forEach(function (column) {\n          fixedWidth += Number(column.realWidth || column.width);\n        });\n        this.fixedWidth.value = fixedWidth;\n      }\n      var rightFixedColumns = this.store.states.rightFixedColumns.value;\n      if (rightFixedColumns.length > 0) {\n        var rightFixedWidth = 0;\n        rightFixedColumns.forEach(function (column) {\n          rightFixedWidth += Number(column.realWidth || column.width);\n        });\n        this.rightFixedWidth.value = rightFixedWidth;\n      }\n      this.notifyObservers(\"columns\");\n    }\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(observer) {\n      this.observers.push(observer);\n    }\n  }, {\n    key: \"removeObserver\",\n    value: function removeObserver(observer) {\n      var index = this.observers.indexOf(observer);\n      if (index !== -1) {\n        this.observers.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"notifyObservers\",\n    value: function notifyObservers(event) {\n      var _this2 = this;\n      var observers = this.observers;\n      observers.forEach(function (observer) {\n        var _a, _b;\n        switch (event) {\n          case \"columns\":\n            (_a = observer.state) == null ? void 0 : _a.onColumnsChange(_this2);\n            break;\n          case \"scrollable\":\n            (_b = observer.state) == null ? void 0 : _b.onScrollableChange(_this2);\n            break;\n          default:\n            throw new Error(\"Table Layout don't have event \".concat(event, \".\"));\n        }\n      });\n    }\n  }]);\n  return TableLayout;\n}();\nexport { TableLayout as default };","map":{"version":3,"names":["TableLayout","options","_classCallCheck","observers","table","store","columns","fit","showHeader","height","ref","scrollX","scrollY","bodyWidth","fixedWidth","rightFixedWidth","gutterWidth","name","hasOwn","isRef","value","Error","_createClass","key","updateScrollY","scrollBarRef","refs","vnode","el","wrapRef","prevScrollY","scrollHeight","clientHeight","setHeight","_this","prop","arguments","length","undefined","isClient","parseHeight","Number","nextTick","style","concat","updateElsHeight","setMaxHeight","getFlattenColumns","flattenColumns","states","forEach","column","isColumnGroup","push","apply","notifyObservers","headerDisplayNone","elm","headerChild","tagName","getComputedStyle","display","parentElement","updateColumnsWidth","clientWidth","bodyMinWidth","flexColumns","filter","width","realWidth","minWidth","totalFlexWidth","allColumnsWidth","reduce","prev","flexWidthPerPixel","noneFirstWidth","index","flexWidth","Math","floor","max","state","resizeState","fixedColumns","rightFixedColumns","addObserver","observer","removeObserver","indexOf","splice","event","_this2","_a","_b","onColumnsChange","onScrollableChange"],"sources":["../../../../../../packages/components/table/src/table-layout.ts"],"sourcesContent":["// @ts-nocheck\nimport { isRef, nextTick, ref } from 'vue'\nimport { hasOwn, isClient } from '@element-plus/utils'\nimport { parseHeight } from './util'\nimport type { Ref } from 'vue'\n\nimport type { TableColumnCtx } from './table-column/defaults'\nimport type { TableHeader } from './table-header'\nimport type { Table } from './table/defaults'\nimport type { Store } from './store'\nclass TableLayout<T> {\n  observers: TableHeader[]\n  table: Table<T>\n  store: Store<T>\n  columns: TableColumnCtx<T>[]\n  fit: boolean\n  showHeader: boolean\n\n  height: Ref<null | number>\n  scrollX: Ref<boolean>\n  scrollY: Ref<boolean>\n  bodyWidth: Ref<null | number>\n  fixedWidth: Ref<null | number>\n  rightFixedWidth: Ref<null | number>\n  tableHeight: Ref<null | number>\n  headerHeight: Ref<null | number> // Table Header Height\n  appendHeight: Ref<null | number> // Append Slot Height\n  footerHeight: Ref<null | number> // Table Footer Height\n  gutterWidth: number\n  constructor(options: Record<string, any>) {\n    this.observers = []\n    this.table = null\n    this.store = null\n    this.columns = []\n    this.fit = true\n    this.showHeader = true\n    this.height = ref(null)\n    this.scrollX = ref(false)\n    this.scrollY = ref(false)\n    this.bodyWidth = ref(null)\n    this.fixedWidth = ref(null)\n    this.rightFixedWidth = ref(null)\n    this.gutterWidth = 0\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        if (isRef(this[name])) {\n          this[name as string].value = options[name]\n        } else {\n          this[name as string] = options[name]\n        }\n      }\n    }\n    if (!this.table) {\n      throw new Error('Table is required for Table Layout')\n    }\n    if (!this.store) {\n      throw new Error('Store is required for Table Layout')\n    }\n  }\n\n  updateScrollY() {\n    const height = this.height.value\n    /**\n     * When the height is not initialized, it is null.\n     * After the table is initialized, when the height is not configured, the height is 0.\n     */\n    if (height === null) return false\n    const scrollBarRef = this.table.refs.scrollBarRef\n    if (this.table.vnode.el && scrollBarRef?.wrapRef) {\n      let scrollY = true\n      const prevScrollY = this.scrollY.value\n      scrollY =\n        scrollBarRef.wrapRef.scrollHeight > scrollBarRef.wrapRef.clientHeight\n      this.scrollY.value = scrollY\n      return prevScrollY !== scrollY\n    }\n    return false\n  }\n\n  setHeight(value: string | number, prop = 'height') {\n    if (!isClient) return\n    const el = this.table.vnode.el\n    value = parseHeight(value)\n    this.height.value = Number(value)\n\n    if (!el && (value || value === 0))\n      return nextTick(() => this.setHeight(value, prop))\n\n    if (typeof value === 'number') {\n      el.style[prop] = `${value}px`\n      this.updateElsHeight()\n    } else if (typeof value === 'string') {\n      el.style[prop] = value\n      this.updateElsHeight()\n    }\n  }\n\n  setMaxHeight(value: string | number) {\n    this.setHeight(value, 'max-height')\n  }\n\n  getFlattenColumns(): TableColumnCtx<T>[] {\n    const flattenColumns = []\n    const columns = this.table.store.states.columns.value\n    columns.forEach((column) => {\n      if (column.isColumnGroup) {\n        // eslint-disable-next-line prefer-spread\n        flattenColumns.push.apply(flattenColumns, column.columns)\n      } else {\n        flattenColumns.push(column)\n      }\n    })\n\n    return flattenColumns\n  }\n\n  updateElsHeight() {\n    this.updateScrollY()\n    this.notifyObservers('scrollable')\n  }\n\n  headerDisplayNone(elm: HTMLElement) {\n    if (!elm) return true\n    let headerChild = elm\n    while (headerChild.tagName !== 'DIV') {\n      if (getComputedStyle(headerChild).display === 'none') {\n        return true\n      }\n      headerChild = headerChild.parentElement\n    }\n    return false\n  }\n\n  updateColumnsWidth() {\n    if (!isClient) return\n    const fit = this.fit\n    const bodyWidth = this.table.vnode.el.clientWidth\n    let bodyMinWidth = 0\n\n    const flattenColumns = this.getFlattenColumns()\n    const flexColumns = flattenColumns.filter(\n      (column) => typeof column.width !== 'number'\n    )\n    flattenColumns.forEach((column) => {\n      // Clean those columns whose width changed from flex to unflex\n      if (typeof column.width === 'number' && column.realWidth)\n        column.realWidth = null\n    })\n    if (flexColumns.length > 0 && fit) {\n      flattenColumns.forEach((column) => {\n        bodyMinWidth += Number(column.width || column.minWidth || 80)\n      })\n      if (bodyMinWidth <= bodyWidth) {\n        // DON'T HAVE SCROLL BAR\n        this.scrollX.value = false\n\n        const totalFlexWidth = bodyWidth - bodyMinWidth\n\n        if (flexColumns.length === 1) {\n          flexColumns[0].realWidth =\n            Number(flexColumns[0].minWidth || 80) + totalFlexWidth\n        } else {\n          const allColumnsWidth = flexColumns.reduce(\n            (prev, column) => prev + Number(column.minWidth || 80),\n            0\n          )\n          const flexWidthPerPixel = totalFlexWidth / allColumnsWidth\n          let noneFirstWidth = 0\n\n          flexColumns.forEach((column, index) => {\n            if (index === 0) return\n            const flexWidth = Math.floor(\n              Number(column.minWidth || 80) * flexWidthPerPixel\n            )\n            noneFirstWidth += flexWidth\n            column.realWidth = Number(column.minWidth || 80) + flexWidth\n          })\n\n          flexColumns[0].realWidth =\n            Number(flexColumns[0].minWidth || 80) +\n            totalFlexWidth -\n            noneFirstWidth\n        }\n      } else {\n        // HAVE HORIZONTAL SCROLL BAR\n        this.scrollX.value = true\n        flexColumns.forEach((column) => {\n          column.realWidth = Number(column.minWidth)\n        })\n      }\n\n      this.bodyWidth.value = Math.max(bodyMinWidth, bodyWidth)\n      this.table.state.resizeState.value.width = this.bodyWidth.value\n    } else {\n      flattenColumns.forEach((column) => {\n        if (!column.width && !column.minWidth) {\n          column.realWidth = 80\n        } else {\n          column.realWidth = Number(column.width || column.minWidth)\n        }\n        bodyMinWidth += column.realWidth\n      })\n      this.scrollX.value = bodyMinWidth > bodyWidth\n\n      this.bodyWidth.value = bodyMinWidth\n    }\n\n    const fixedColumns = this.store.states.fixedColumns.value\n\n    if (fixedColumns.length > 0) {\n      let fixedWidth = 0\n      fixedColumns.forEach((column) => {\n        fixedWidth += Number(column.realWidth || column.width)\n      })\n\n      this.fixedWidth.value = fixedWidth\n    }\n\n    const rightFixedColumns = this.store.states.rightFixedColumns.value\n    if (rightFixedColumns.length > 0) {\n      let rightFixedWidth = 0\n      rightFixedColumns.forEach((column) => {\n        rightFixedWidth += Number(column.realWidth || column.width)\n      })\n\n      this.rightFixedWidth.value = rightFixedWidth\n    }\n    this.notifyObservers('columns')\n  }\n\n  addObserver(observer: TableHeader) {\n    this.observers.push(observer)\n  }\n\n  removeObserver(observer: TableHeader) {\n    const index = this.observers.indexOf(observer)\n    if (index !== -1) {\n      this.observers.splice(index, 1)\n    }\n  }\n\n  notifyObservers(event: string) {\n    const observers = this.observers\n    observers.forEach((observer) => {\n      switch (event) {\n        case 'columns':\n          observer.state?.onColumnsChange(this)\n          break\n        case 'scrollable':\n          observer.state?.onScrollableChange(this)\n          break\n        default:\n          throw new Error(`Table Layout don't have event ${event}.`)\n      }\n    })\n  }\n}\n\nexport default TableLayout\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}