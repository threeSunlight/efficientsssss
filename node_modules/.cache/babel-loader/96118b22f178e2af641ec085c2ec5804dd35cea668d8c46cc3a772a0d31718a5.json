{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, useAttrs, ref, computed, nextTick, watch, onMounted, openBlock, createBlock, unref, withCtx, withDirectives, createElementBlock, normalizeClass, normalizeStyle, createVNode, withModifiers, Fragment, renderList, toDisplayString, createElementVNode, withKeys, vModelText, createCommentVNode, isRef, vShow, renderSlot } from 'vue';\nimport { isPromise } from '@vue/shared';\nimport { cloneDeep, debounce } from 'lodash-unified';\nimport { isClient, useCssVar, useResizeObserver } from '@vueuse/core';\nimport _CascaderPanel from '../../cascader-panel/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../form/index.mjs';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { CircleClose, ArrowDown, Check } from '@element-plus/icons-vue';\nimport { cascaderProps, cascaderEmits } from './cascader.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useFormItem } from '../../form/src/hooks/use-form-item.mjs';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nimport { isKorean } from '../../../utils/i18n.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { focusNode, getSibling } from '../../../utils/dom/aria.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nvar _hoisted_1 = {\n  key: 0\n};\nvar _hoisted_2 = [\"placeholder\", \"onKeydown\"];\nvar _hoisted_3 = [\"onClick\"];\nvar COMPONENT_NAME = \"ElCascader\";\nvar __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: cascaderProps,\n  emits: cascaderEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var popperOptions = {\n      modifiers: [{\n        name: \"arrowPosition\",\n        enabled: true,\n        phase: \"main\",\n        fn: function fn(_ref2) {\n          var state = _ref2.state;\n          var modifiersData = state.modifiersData,\n            placement = state.placement;\n          if ([\"right\", \"left\", \"bottom\", \"top\"].includes(placement)) return;\n          modifiersData.arrow.x = 35;\n        },\n        requires: [\"arrow\"]\n      }]\n    };\n    var attrs = useAttrs();\n    var inputInitialHeight = 0;\n    var pressDeleteCount = 0;\n    var nsCascader = useNamespace(\"cascader\");\n    var nsInput = useNamespace(\"input\");\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var _useFormItem = useFormItem(),\n      form = _useFormItem.form,\n      formItem = _useFormItem.formItem;\n    var tooltipRef = ref(null);\n    var input = ref(null);\n    var tagWrapper = ref(null);\n    var cascaderPanelRef = ref(null);\n    var suggestionPanel = ref(null);\n    var popperVisible = ref(false);\n    var inputHover = ref(false);\n    var filtering = ref(false);\n    var filterFocus = ref(false);\n    var inputValue = ref(\"\");\n    var searchInputValue = ref(\"\");\n    var presentTags = ref([]);\n    var allPresentTags = ref([]);\n    var suggestions = ref([]);\n    var isOnComposition = ref(false);\n    var cascaderStyle = computed(function () {\n      return attrs.style;\n    });\n    var isDisabled = computed(function () {\n      return props.disabled || (form == null ? void 0 : form.disabled);\n    });\n    var inputPlaceholder = computed(function () {\n      return props.placeholder || t(\"el.cascader.placeholder\");\n    });\n    var currentPlaceholder = computed(function () {\n      return searchInputValue.value || presentTags.value.length > 0 || isOnComposition.value ? \"\" : inputPlaceholder.value;\n    });\n    var realSize = useFormSize();\n    var tagSize = computed(function () {\n      return [\"small\"].includes(realSize.value) ? \"small\" : \"default\";\n    });\n    var multiple = computed(function () {\n      return !!props.props.multiple;\n    });\n    var readonly = computed(function () {\n      return !props.filterable || multiple.value;\n    });\n    var searchKeyword = computed(function () {\n      return multiple.value ? searchInputValue.value : inputValue.value;\n    });\n    var checkedNodes = computed(function () {\n      var _a;\n      return ((_a = cascaderPanelRef.value) == null ? void 0 : _a.checkedNodes) || [];\n    });\n    var clearBtnVisible = computed(function () {\n      if (!props.clearable || isDisabled.value || filtering.value || !inputHover.value) return false;\n      return !!checkedNodes.value.length;\n    });\n    var presentText = computed(function () {\n      var showAllLevels = props.showAllLevels,\n        separator = props.separator;\n      var nodes = checkedNodes.value;\n      return nodes.length ? multiple.value ? \"\" : nodes[0].calcText(showAllLevels, separator) : \"\";\n    });\n    var checkedValue = computed({\n      get: function get() {\n        return cloneDeep(props.modelValue);\n      },\n      set: function set(val) {\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n        if (props.validateEvent) {\n          formItem == null ? void 0 : formItem.validate(\"change\")[\"catch\"](function (err) {\n            return debugWarn(err);\n          });\n        }\n      }\n    });\n    var cascaderKls = computed(function () {\n      return [nsCascader.b(), nsCascader.m(realSize.value), nsCascader.is(\"disabled\", isDisabled.value), attrs[\"class\"]];\n    });\n    var cascaderIconKls = computed(function () {\n      return [nsInput.e(\"icon\"), \"icon-arrow-down\", nsCascader.is(\"reverse\", popperVisible.value)];\n    });\n    var inputClass = computed(function () {\n      return nsCascader.is(\"focus\", popperVisible.value || filterFocus.value);\n    });\n    var contentRef = computed(function () {\n      var _a, _b;\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    var togglePopperVisible = function togglePopperVisible(visible) {\n      var _a, _b, _c;\n      if (isDisabled.value) return;\n      visible = visible != null ? visible : !popperVisible.value;\n      if (visible !== popperVisible.value) {\n        popperVisible.value = visible;\n        (_b = (_a = input.value) == null ? void 0 : _a.input) == null ? void 0 : _b.setAttribute(\"aria-expanded\", \"\".concat(visible));\n        if (visible) {\n          updatePopperPosition();\n          nextTick((_c = cascaderPanelRef.value) == null ? void 0 : _c.scrollToExpandingNode);\n        } else if (props.filterable) {\n          syncPresentTextValue();\n        }\n        emit(\"visibleChange\", visible);\n      }\n    };\n    var updatePopperPosition = function updatePopperPosition() {\n      nextTick(function () {\n        var _a;\n        (_a = tooltipRef.value) == null ? void 0 : _a.updatePopper();\n      });\n    };\n    var hideSuggestionPanel = function hideSuggestionPanel() {\n      filtering.value = false;\n    };\n    var genTag = function genTag(node) {\n      var showAllLevels = props.showAllLevels,\n        separator = props.separator;\n      return {\n        node: node,\n        key: node.uid,\n        text: node.calcText(showAllLevels, separator),\n        hitState: false,\n        closable: !isDisabled.value && !node.isDisabled,\n        isCollapseTag: false\n      };\n    };\n    var deleteTag = function deleteTag(tag) {\n      var _a;\n      var node = tag.node;\n      node.doCheck(false);\n      (_a = cascaderPanelRef.value) == null ? void 0 : _a.calculateCheckedValue();\n      emit(\"removeTag\", node.valueByOption);\n    };\n    var calculatePresentTags = function calculatePresentTags() {\n      if (!multiple.value) return;\n      var nodes = checkedNodes.value;\n      var tags = [];\n      var allTags = [];\n      nodes.forEach(function (node) {\n        return allTags.push(genTag(node));\n      });\n      allPresentTags.value = allTags;\n      if (nodes.length) {\n        var _nodes = _toArray(nodes),\n          first = _nodes[0],\n          rest = _nodes.slice(1);\n        var restCount = rest.length;\n        tags.push(genTag(first));\n        if (restCount) {\n          if (props.collapseTags) {\n            tags.push({\n              key: -1,\n              text: \"+ \".concat(restCount),\n              closable: false,\n              isCollapseTag: true\n            });\n          } else {\n            rest.forEach(function (node) {\n              return tags.push(genTag(node));\n            });\n          }\n        }\n      }\n      presentTags.value = tags;\n    };\n    var calculateSuggestions = function calculateSuggestions() {\n      var _a, _b;\n      var filterMethod = props.filterMethod,\n        showAllLevels = props.showAllLevels,\n        separator = props.separator;\n      var res = (_b = (_a = cascaderPanelRef.value) == null ? void 0 : _a.getFlattedNodes(!props.props.checkStrictly)) == null ? void 0 : _b.filter(function (node) {\n        if (node.isDisabled) return false;\n        node.calcText(showAllLevels, separator);\n        return filterMethod(node, searchKeyword.value);\n      });\n      if (multiple.value) {\n        presentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n        allPresentTags.value.forEach(function (tag) {\n          tag.hitState = false;\n        });\n      }\n      filtering.value = true;\n      suggestions.value = res;\n      updatePopperPosition();\n    };\n    var focusFirstNode = function focusFirstNode() {\n      var _a;\n      var firstNode;\n      if (filtering.value && suggestionPanel.value) {\n        firstNode = suggestionPanel.value.$el.querySelector(\".\".concat(nsCascader.e(\"suggestion-item\")));\n      } else {\n        firstNode = (_a = cascaderPanelRef.value) == null ? void 0 : _a.$el.querySelector(\".\".concat(nsCascader.b(\"node\"), \"[tabindex=\\\"-1\\\"]\"));\n      }\n      if (firstNode) {\n        firstNode.focus();\n        !filtering.value && firstNode.click();\n      }\n    };\n    var updateStyle = function updateStyle() {\n      var _a, _b;\n      var inputInner = (_a = input.value) == null ? void 0 : _a.input;\n      var tagWrapperEl = tagWrapper.value;\n      var suggestionPanelEl = (_b = suggestionPanel.value) == null ? void 0 : _b.$el;\n      if (!isClient || !inputInner) return;\n      if (suggestionPanelEl) {\n        var suggestionList = suggestionPanelEl.querySelector(\".\".concat(nsCascader.e(\"suggestion-list\")));\n        suggestionList.style.minWidth = \"\".concat(inputInner.offsetWidth, \"px\");\n      }\n      if (tagWrapperEl) {\n        var offsetHeight = tagWrapperEl.offsetHeight;\n        var height = presentTags.value.length > 0 ? \"\".concat(Math.max(offsetHeight + 6, inputInitialHeight), \"px\") : \"\".concat(inputInitialHeight, \"px\");\n        inputInner.style.height = height;\n        updatePopperPosition();\n      }\n    };\n    var getCheckedNodes = function getCheckedNodes(leafOnly) {\n      var _a;\n      return (_a = cascaderPanelRef.value) == null ? void 0 : _a.getCheckedNodes(leafOnly);\n    };\n    var handleExpandChange = function handleExpandChange(value) {\n      updatePopperPosition();\n      emit(\"expandChange\", value);\n    };\n    var handleComposition = function handleComposition(event) {\n      var _a;\n      var text = (_a = event.target) == null ? void 0 : _a.value;\n      if (event.type === \"compositionend\") {\n        isOnComposition.value = false;\n        nextTick(function () {\n          return handleInput(text);\n        });\n      } else {\n        var lastCharacter = text[text.length - 1] || \"\";\n        isOnComposition.value = !isKorean(lastCharacter);\n      }\n    };\n    var handleKeyDown = function handleKeyDown(e) {\n      if (isOnComposition.value) return;\n      switch (e.code) {\n        case EVENT_CODE.enter:\n          togglePopperVisible();\n          break;\n        case EVENT_CODE.down:\n          togglePopperVisible(true);\n          nextTick(focusFirstNode);\n          e.preventDefault();\n          break;\n        case EVENT_CODE.esc:\n          if (popperVisible.value === true) {\n            e.preventDefault();\n            e.stopPropagation();\n            togglePopperVisible(false);\n          }\n          break;\n        case EVENT_CODE.tab:\n          togglePopperVisible(false);\n          break;\n      }\n    };\n    var handleClear = function handleClear() {\n      var _a;\n      (_a = cascaderPanelRef.value) == null ? void 0 : _a.clearCheckedNodes();\n      if (!popperVisible.value && props.filterable) {\n        syncPresentTextValue();\n      }\n      togglePopperVisible(false);\n    };\n    var syncPresentTextValue = function syncPresentTextValue() {\n      var value = presentText.value;\n      inputValue.value = value;\n      searchInputValue.value = value;\n    };\n    var handleSuggestionClick = function handleSuggestionClick(node) {\n      var _a, _b;\n      var checked = node.checked;\n      if (multiple.value) {\n        (_a = cascaderPanelRef.value) == null ? void 0 : _a.handleCheckChange(node, !checked, false);\n      } else {\n        !checked && ((_b = cascaderPanelRef.value) == null ? void 0 : _b.handleCheckChange(node, true, false));\n        togglePopperVisible(false);\n      }\n    };\n    var handleSuggestionKeyDown = function handleSuggestionKeyDown(e) {\n      var target = e.target;\n      var code = e.code;\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          {\n            var distance = code === EVENT_CODE.up ? -1 : 1;\n            focusNode(getSibling(target, distance, \".\".concat(nsCascader.e(\"suggestion-item\"), \"[tabindex=\\\"-1\\\"]\")));\n            break;\n          }\n        case EVENT_CODE.enter:\n          target.click();\n          break;\n      }\n    };\n    var handleDelete = function handleDelete() {\n      var tags = presentTags.value;\n      var lastTag = tags[tags.length - 1];\n      pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1;\n      if (!lastTag || !pressDeleteCount || props.collapseTags && tags.length > 1) return;\n      if (lastTag.hitState) {\n        deleteTag(lastTag);\n      } else {\n        lastTag.hitState = true;\n      }\n    };\n    var handleFocus = function handleFocus(e) {\n      var el = e.target;\n      var name = nsCascader.e(\"search-input\");\n      if (el.className === name) {\n        filterFocus.value = true;\n      }\n      emit(\"focus\", e);\n    };\n    var handleBlur = function handleBlur(e) {\n      filterFocus.value = false;\n      emit(\"blur\", e);\n    };\n    var handleFilter = debounce(function () {\n      var value = searchKeyword.value;\n      if (!value) return;\n      var passed = props.beforeFilter(value);\n      if (isPromise(passed)) {\n        passed.then(calculateSuggestions)[\"catch\"](function () {});\n      } else if (passed !== false) {\n        calculateSuggestions();\n      } else {\n        hideSuggestionPanel();\n      }\n    }, props.debounce);\n    var handleInput = function handleInput(val, e) {\n      !popperVisible.value && togglePopperVisible(true);\n      if (e == null ? void 0 : e.isComposing) return;\n      val ? handleFilter() : hideSuggestionPanel();\n    };\n    watch(filtering, updatePopperPosition);\n    watch([checkedNodes, isDisabled], calculatePresentTags);\n    watch(presentTags, function () {\n      nextTick(function () {\n        return updateStyle();\n      });\n    });\n    watch(presentText, syncPresentTextValue, {\n      immediate: true\n    });\n    onMounted(function () {\n      var inputInner = input.value.input;\n      var inputInnerHeight = Number.parseFloat(useCssVar(nsInput.cssVarName(\"input-height\"), inputInner).value) - 2;\n      inputInitialHeight = inputInner.offsetHeight || inputInnerHeight;\n      useResizeObserver(inputInner, updateStyle);\n    });\n    expose({\n      getCheckedNodes: getCheckedNodes,\n      cascaderPanelRef: cascaderPanelRef,\n      togglePopperVisible: togglePopperVisible,\n      contentRef: contentRef\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElTooltip), {\n        ref_key: \"tooltipRef\",\n        ref: tooltipRef,\n        visible: popperVisible.value,\n        teleported: _ctx.teleported,\n        \"popper-class\": [unref(nsCascader).e(\"dropdown\"), _ctx.popperClass],\n        \"popper-options\": popperOptions,\n        \"fallback-placements\": [\"bottom-start\", \"bottom\", \"top-start\", \"top\", \"right\", \"left\"],\n        \"stop-popper-mouse-event\": false,\n        \"gpu-acceleration\": false,\n        placement: \"bottom-start\",\n        transition: \"\".concat(unref(nsCascader).namespace.value, \"-zoom-in-top\"),\n        effect: \"light\",\n        pure: \"\",\n        persistent: \"\",\n        onHide: hideSuggestionPanel\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives((openBlock(), createElementBlock(\"div\", {\n            \"class\": normalizeClass(unref(cascaderKls)),\n            style: normalizeStyle(unref(cascaderStyle)),\n            onClick: _cache[5] || (_cache[5] = function () {\n              return togglePopperVisible(unref(readonly) ? void 0 : true);\n            }),\n            onKeydown: handleKeyDown,\n            onMouseenter: _cache[6] || (_cache[6] = function ($event) {\n              return inputHover.value = true;\n            }),\n            onMouseleave: _cache[7] || (_cache[7] = function ($event) {\n              return inputHover.value = false;\n            })\n          }, [createVNode(unref(ElInput), {\n            ref_key: \"input\",\n            ref: input,\n            modelValue: inputValue.value,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n              return inputValue.value = $event;\n            }),\n            placeholder: unref(currentPlaceholder),\n            readonly: unref(readonly),\n            disabled: unref(isDisabled),\n            \"validate-event\": false,\n            size: unref(realSize),\n            \"class\": normalizeClass(unref(inputClass)),\n            tabindex: unref(multiple) && _ctx.filterable && !unref(isDisabled) ? -1 : void 0,\n            onCompositionstart: handleComposition,\n            onCompositionupdate: handleComposition,\n            onCompositionend: handleComposition,\n            onFocus: handleFocus,\n            onBlur: handleBlur,\n            onInput: handleInput\n          }, {\n            suffix: withCtx(function () {\n              return [unref(clearBtnVisible) ? (openBlock(), createBlock(unref(ElIcon), {\n                key: \"clear\",\n                \"class\": normalizeClass([unref(nsInput).e(\"icon\"), \"icon-circle-close\"]),\n                onClick: withModifiers(handleClear, [\"stop\"])\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(CircleClose))];\n                }),\n                _: 1\n              }, 8, [\"class\", \"onClick\"])) : (openBlock(), createBlock(unref(ElIcon), {\n                key: \"arrow-down\",\n                \"class\": normalizeClass(unref(cascaderIconKls)),\n                onClick: _cache[0] || (_cache[0] = withModifiers(function ($event) {\n                  return togglePopperVisible();\n                }, [\"stop\"]))\n              }, {\n                \"default\": withCtx(function () {\n                  return [createVNode(unref(ArrowDown))];\n                }),\n                _: 1\n              }, 8, [\"class\"]))];\n            }),\n            _: 1\n          }, 8, [\"modelValue\", \"placeholder\", \"readonly\", \"disabled\", \"size\", \"class\", \"tabindex\"]), unref(multiple) ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            ref_key: \"tagWrapper\",\n            ref: tagWrapper,\n            \"class\": normalizeClass(unref(nsCascader).e(\"tags\"))\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(presentTags.value, function (tag) {\n            return openBlock(), createBlock(unref(ElTag), {\n              key: tag.key,\n              type: _ctx.tagType,\n              size: unref(tagSize),\n              hit: tag.hitState,\n              closable: tag.closable,\n              \"disable-transitions\": \"\",\n              onClose: function onClose($event) {\n                return deleteTag(tag);\n              }\n            }, {\n              \"default\": withCtx(function () {\n                return [tag.isCollapseTag === false ? (openBlock(), createElementBlock(\"span\", _hoisted_1, toDisplayString(tag.text), 1)) : (openBlock(), createBlock(unref(ElTooltip), {\n                  key: 1,\n                  disabled: popperVisible.value || !_ctx.collapseTagsTooltip,\n                  \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n                  placement: \"bottom\",\n                  effect: \"light\"\n                }, {\n                  \"default\": withCtx(function () {\n                    return [createElementVNode(\"span\", null, toDisplayString(tag.text), 1)];\n                  }),\n                  content: withCtx(function () {\n                    return [createElementVNode(\"div\", {\n                      \"class\": normalizeClass(unref(nsCascader).e(\"collapse-tags\"))\n                    }, [(openBlock(true), createElementBlock(Fragment, null, renderList(allPresentTags.value.slice(1), function (tag2, idx) {\n                      return openBlock(), createElementBlock(\"div\", {\n                        key: idx,\n                        \"class\": normalizeClass(unref(nsCascader).e(\"collapse-tag\"))\n                      }, [(openBlock(), createBlock(unref(ElTag), {\n                        key: tag2.key,\n                        \"class\": \"in-tooltip\",\n                        type: _ctx.tagType,\n                        size: unref(tagSize),\n                        hit: tag2.hitState,\n                        closable: tag2.closable,\n                        \"disable-transitions\": \"\",\n                        onClose: function onClose($event) {\n                          return deleteTag(tag2);\n                        }\n                      }, {\n                        \"default\": withCtx(function () {\n                          return [createElementVNode(\"span\", null, toDisplayString(tag2.text), 1)];\n                        }),\n                        _: 2\n                      }, 1032, [\"type\", \"size\", \"hit\", \"closable\", \"onClose\"]))], 2);\n                    }), 128))], 2)];\n                  }),\n                  _: 2\n                }, 1032, [\"disabled\"]))];\n              }),\n              _: 2\n            }, 1032, [\"type\", \"size\", \"hit\", \"closable\", \"onClose\"]);\n          }), 128)), _ctx.filterable && !unref(isDisabled) ? withDirectives((openBlock(), createElementBlock(\"input\", {\n            key: 0,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n              return searchInputValue.value = $event;\n            }),\n            type: \"text\",\n            \"class\": normalizeClass(unref(nsCascader).e(\"search-input\")),\n            placeholder: unref(presentText) ? \"\" : unref(inputPlaceholder),\n            onInput: _cache[3] || (_cache[3] = function (e) {\n              return handleInput(searchInputValue.value, e);\n            }),\n            onClick: _cache[4] || (_cache[4] = withModifiers(function ($event) {\n              return togglePopperVisible(true);\n            }, [\"stop\"])),\n            onKeydown: withKeys(handleDelete, [\"delete\"]),\n            onCompositionstart: handleComposition,\n            onCompositionupdate: handleComposition,\n            onCompositionend: handleComposition,\n            onFocus: handleFocus,\n            onBlur: handleBlur\n          }, null, 42, _hoisted_2)), [[vModelText, searchInputValue.value]]) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)], 38)), [[unref(ClickOutside), function () {\n            return togglePopperVisible(false);\n          }, unref(contentRef)]])];\n        }),\n        content: withCtx(function () {\n          return [withDirectives(createVNode(unref(_CascaderPanel), {\n            ref_key: \"cascaderPanelRef\",\n            ref: cascaderPanelRef,\n            modelValue: unref(checkedValue),\n            \"onUpdate:modelValue\": _cache[8] || (_cache[8] = function ($event) {\n              return isRef(checkedValue) ? checkedValue.value = $event : null;\n            }),\n            options: _ctx.options,\n            props: props.props,\n            border: false,\n            \"render-label\": _ctx.$slots[\"default\"],\n            onExpandChange: handleExpandChange,\n            onClose: _cache[9] || (_cache[9] = function ($event) {\n              return _ctx.$nextTick(function () {\n                return togglePopperVisible(false);\n              });\n            })\n          }, null, 8, [\"modelValue\", \"options\", \"props\", \"render-label\"]), [[vShow, !filtering.value]]), _ctx.filterable ? withDirectives((openBlock(), createBlock(unref(ElScrollbar), {\n            key: 0,\n            ref_key: \"suggestionPanel\",\n            ref: suggestionPanel,\n            tag: \"ul\",\n            \"class\": normalizeClass(unref(nsCascader).e(\"suggestion-panel\")),\n            \"view-class\": unref(nsCascader).e(\"suggestion-list\"),\n            onKeydown: handleSuggestionKeyDown\n          }, {\n            \"default\": withCtx(function () {\n              return [suggestions.value.length ? (openBlock(true), createElementBlock(Fragment, {\n                key: 0\n              }, renderList(suggestions.value, function (item) {\n                return openBlock(), createElementBlock(\"li\", {\n                  key: item.uid,\n                  \"class\": normalizeClass([unref(nsCascader).e(\"suggestion-item\"), unref(nsCascader).is(\"checked\", item.checked)]),\n                  tabindex: -1,\n                  onClick: function onClick($event) {\n                    return handleSuggestionClick(item);\n                  }\n                }, [createElementVNode(\"span\", null, toDisplayString(item.text), 1), item.checked ? (openBlock(), createBlock(unref(ElIcon), {\n                  key: 0\n                }, {\n                  \"default\": withCtx(function () {\n                    return [createVNode(unref(Check))];\n                  }),\n                  _: 1\n                })) : createCommentVNode(\"v-if\", true)], 10, _hoisted_3);\n              }), 128)) : renderSlot(_ctx.$slots, \"empty\", {\n                key: 1\n              }, function () {\n                return [createElementVNode(\"li\", {\n                  \"class\": normalizeClass(unref(nsCascader).e(\"empty-text\"))\n                }, toDisplayString(unref(t)(\"el.cascader.noMatch\")), 3)];\n              })];\n            }),\n            _: 3\n          }, 8, [\"class\", \"view-class\"])), [[vShow, filtering.value]]) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"visible\", \"teleported\", \"popper-class\", \"transition\"]);\n    };\n  }\n}));\nvar Cascader = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/cascader/src/cascader.vue\"]]);\nexport { Cascader as default };","map":{"version":3,"names":["name","COMPONENT_NAME","popperOptions","modifiers","enabled","phase","fn","_ref2","state","modifiersData","placement","includes","arrow","x","requires","attrs","useAttrs","inputInitialHeight","pressDeleteCount","nsCascader","useNamespace","nsInput","_useLocale","useLocale","t","_useFormItem","useFormItem","form","formItem","tooltipRef","ref","input","tagWrapper","cascaderPanelRef","suggestionPanel","popperVisible","inputHover","filtering","filterFocus","inputValue","searchInputValue","presentTags","allPresentTags","suggestions","isOnComposition","cascaderStyle","computed","style","isDisabled","props","disabled","inputPlaceholder","placeholder","currentPlaceholder","value","length","realSize","useFormSize","tagSize","multiple","readonly","filterable","searchKeyword","checkedNodes","_a","clearBtnVisible","clearable","presentText","showAllLevels","separator","nodes","calcText","checkedValue","get","cloneDeep","modelValue","set","val","emit","UPDATE_MODEL_EVENT","CHANGE_EVENT","validateEvent","validate","err","debugWarn","cascaderKls","b","m","is","cascaderIconKls","e","inputClass","contentRef","_b","popperRef","togglePopperVisible","visible","_c","setAttribute","concat","updatePopperPosition","nextTick","scrollToExpandingNode","syncPresentTextValue","updatePopper","hideSuggestionPanel","genTag","node","key","uid","text","hitState","closable","isCollapseTag","deleteTag","tag","doCheck","calculateCheckedValue","valueByOption","calculatePresentTags","tags","allTags","forEach","push","_nodes","_toArray","first","rest","slice","restCount","collapseTags","calculateSuggestions","filterMethod","res","getFlattedNodes","checkStrictly","filter","focusFirstNode","firstNode","$el","querySelector","focus","click","updateStyle","inputInner","tagWrapperEl","suggestionPanelEl","isClient","suggestionList","minWidth","offsetWidth","offsetHeight","height","Math","max","getCheckedNodes","leafOnly","handleExpandChange","handleComposition","event","target","type","handleInput","lastCharacter","isKorean","handleKeyDown","code","EVENT_CODE","enter","down","preventDefault","esc","stopPropagation","tab","handleClear","clearCheckedNodes","handleSuggestionClick","checked","handleCheckChange","handleSuggestionKeyDown","up","distance","focusNode","getSibling","handleDelete","lastTag","handleFocus","el","className","handleBlur","handleFilter","debounce","passed","beforeFilter","isPromise","then","isComposing","watch"],"sources":["../../../../../../packages/components/cascader/src/cascader.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"tooltipRef\"\n    :visible=\"popperVisible\"\n    :teleported=\"teleported\"\n    :popper-class=\"[nsCascader.e('dropdown'), popperClass]\"\n    :popper-options=\"popperOptions\"\n    :fallback-placements=\"[\n      'bottom-start',\n      'bottom',\n      'top-start',\n      'top',\n      'right',\n      'left',\n    ]\"\n    :stop-popper-mouse-event=\"false\"\n    :gpu-acceleration=\"false\"\n    placement=\"bottom-start\"\n    :transition=\"`${nsCascader.namespace.value}-zoom-in-top`\"\n    effect=\"light\"\n    pure\n    persistent\n    @hide=\"hideSuggestionPanel\"\n  >\n    <template #default>\n      <div\n        v-clickoutside:[contentRef]=\"() => togglePopperVisible(false)\"\n        :class=\"cascaderKls\"\n        :style=\"cascaderStyle\"\n        @click=\"() => togglePopperVisible(readonly ? undefined : true)\"\n        @keydown=\"handleKeyDown\"\n        @mouseenter=\"inputHover = true\"\n        @mouseleave=\"inputHover = false\"\n      >\n        <el-input\n          ref=\"input\"\n          v-model=\"inputValue\"\n          :placeholder=\"currentPlaceholder\"\n          :readonly=\"readonly\"\n          :disabled=\"isDisabled\"\n          :validate-event=\"false\"\n          :size=\"realSize\"\n          :class=\"inputClass\"\n          :tabindex=\"multiple && filterable && !isDisabled ? -1 : undefined\"\n          @compositionstart=\"handleComposition\"\n          @compositionupdate=\"handleComposition\"\n          @compositionend=\"handleComposition\"\n          @focus=\"handleFocus\"\n          @blur=\"handleBlur\"\n          @input=\"handleInput\"\n        >\n          <template #suffix>\n            <el-icon\n              v-if=\"clearBtnVisible\"\n              key=\"clear\"\n              :class=\"[nsInput.e('icon'), 'icon-circle-close']\"\n              @click.stop=\"handleClear\"\n            >\n              <circle-close />\n            </el-icon>\n            <el-icon\n              v-else\n              key=\"arrow-down\"\n              :class=\"cascaderIconKls\"\n              @click.stop=\"togglePopperVisible()\"\n            >\n              <arrow-down />\n            </el-icon>\n          </template>\n        </el-input>\n\n        <div v-if=\"multiple\" ref=\"tagWrapper\" :class=\"nsCascader.e('tags')\">\n          <el-tag\n            v-for=\"tag in presentTags\"\n            :key=\"tag.key\"\n            :type=\"tagType\"\n            :size=\"tagSize\"\n            :hit=\"tag.hitState\"\n            :closable=\"tag.closable\"\n            disable-transitions\n            @close=\"deleteTag(tag)\"\n          >\n            <template v-if=\"tag.isCollapseTag === false\">\n              <span>{{ tag.text }}</span>\n            </template>\n            <template v-else>\n              <el-tooltip\n                :disabled=\"popperVisible || !collapseTagsTooltip\"\n                :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                placement=\"bottom\"\n                effect=\"light\"\n              >\n                <template #default>\n                  <span>{{ tag.text }}</span>\n                </template>\n                <template #content>\n                  <div :class=\"nsCascader.e('collapse-tags')\">\n                    <div\n                      v-for=\"(tag2, idx) in allPresentTags.slice(1)\"\n                      :key=\"idx\"\n                      :class=\"nsCascader.e('collapse-tag')\"\n                    >\n                      <el-tag\n                        :key=\"tag2.key\"\n                        class=\"in-tooltip\"\n                        :type=\"tagType\"\n                        :size=\"tagSize\"\n                        :hit=\"tag2.hitState\"\n                        :closable=\"tag2.closable\"\n                        disable-transitions\n                        @close=\"deleteTag(tag2)\"\n                      >\n                        <span>{{ tag2.text }}</span>\n                      </el-tag>\n                    </div>\n                  </div>\n                </template>\n              </el-tooltip>\n            </template>\n          </el-tag>\n          <input\n            v-if=\"filterable && !isDisabled\"\n            v-model=\"searchInputValue\"\n            type=\"text\"\n            :class=\"nsCascader.e('search-input')\"\n            :placeholder=\"presentText ? '' : inputPlaceholder\"\n            @input=\"(e) => handleInput(searchInputValue, e as KeyboardEvent)\"\n            @click.stop=\"togglePopperVisible(true)\"\n            @keydown.delete=\"handleDelete\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <template #content>\n      <el-cascader-panel\n        v-show=\"!filtering\"\n        ref=\"cascaderPanelRef\"\n        v-model=\"checkedValue\"\n        :options=\"options\"\n        :props=\"props.props\"\n        :border=\"false\"\n        :render-label=\"$slots.default\"\n        @expand-change=\"handleExpandChange\"\n        @close=\"$nextTick(() => togglePopperVisible(false))\"\n      />\n      <el-scrollbar\n        v-if=\"filterable\"\n        v-show=\"filtering\"\n        ref=\"suggestionPanel\"\n        tag=\"ul\"\n        :class=\"nsCascader.e('suggestion-panel')\"\n        :view-class=\"nsCascader.e('suggestion-list')\"\n        @keydown=\"handleSuggestionKeyDown\"\n      >\n        <template v-if=\"suggestions.length\">\n          <li\n            v-for=\"item in suggestions\"\n            :key=\"item.uid\"\n            :class=\"[\n              nsCascader.e('suggestion-item'),\n              nsCascader.is('checked', item.checked),\n            ]\"\n            :tabindex=\"-1\"\n            @click=\"handleSuggestionClick(item)\"\n          >\n            <span>{{ item.text }}</span>\n            <el-icon v-if=\"item.checked\">\n              <check />\n            </el-icon>\n          </li>\n        </template>\n        <slot v-else name=\"empty\">\n          <li :class=\"nsCascader.e('empty-text')\">\n            {{ t('el.cascader.noMatch') }}\n          </li>\n        </slot>\n      </el-scrollbar>\n    </template>\n  </el-tooltip>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, nextTick, onMounted, ref, useAttrs, watch } from 'vue'\nimport { isPromise } from '@vue/shared'\nimport { cloneDeep, debounce } from 'lodash-unified'\nimport { useCssVar, useResizeObserver } from '@vueuse/core'\nimport ElCascaderPanel from '@element-plus/components/cascader-panel'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useFormItem, useFormSize } from '@element-plus/components/form'\nimport { ClickOutside as vClickoutside } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport {\n  debugWarn,\n  focusNode,\n  getSibling,\n  isClient,\n  isKorean,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  EVENT_CODE,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport { ArrowDown, Check, CircleClose } from '@element-plus/icons-vue'\nimport { cascaderEmits, cascaderProps } from './cascader'\n\nimport type { Options } from '@element-plus/components/popper'\nimport type { ComputedRef, Ref, StyleValue } from 'vue'\nimport type { TooltipInstance } from '@element-plus/components/tooltip'\nimport type { InputInstance } from '@element-plus/components/input'\nimport type { ScrollbarInstance } from '@element-plus/components/scrollbar'\nimport type {\n  CascaderNode,\n  CascaderPanelInstance,\n  CascaderValue,\n  Tag,\n} from '@element-plus/components/cascader-panel'\n\nconst popperOptions: Partial<Options> = {\n  modifiers: [\n    {\n      name: 'arrowPosition',\n      enabled: true,\n      phase: 'main',\n      fn: ({ state }) => {\n        const { modifiersData, placement } = state as any\n        if (['right', 'left', 'bottom', 'top'].includes(placement)) return\n        modifiersData.arrow.x = 35\n      },\n      requires: ['arrow'],\n    },\n  ],\n}\nconst COMPONENT_NAME = 'ElCascader'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\nconst props = defineProps(cascaderProps)\nconst emit = defineEmits(cascaderEmits)\nconst attrs = useAttrs()\n\nlet inputInitialHeight = 0\nlet pressDeleteCount = 0\n\nconst nsCascader = useNamespace('cascader')\nconst nsInput = useNamespace('input')\n\nconst { t } = useLocale()\nconst { form, formItem } = useFormItem()\n\nconst tooltipRef: Ref<TooltipInstance | null> = ref(null)\nconst input: Ref<InputInstance | null> = ref(null)\nconst tagWrapper = ref(null)\nconst cascaderPanelRef: Ref<CascaderPanelInstance | null> = ref(null)\nconst suggestionPanel: Ref<ScrollbarInstance | null> = ref(null)\nconst popperVisible = ref(false)\nconst inputHover = ref(false)\nconst filtering = ref(false)\nconst filterFocus = ref(false)\nconst inputValue = ref('')\nconst searchInputValue = ref('')\nconst presentTags: Ref<Tag[]> = ref([])\nconst allPresentTags: Ref<Tag[]> = ref([])\nconst suggestions: Ref<CascaderNode[]> = ref([])\nconst isOnComposition = ref(false)\n\nconst cascaderStyle = computed<StyleValue>(() => {\n  return attrs.style as StyleValue\n})\n\nconst isDisabled = computed(() => props.disabled || form?.disabled)\nconst inputPlaceholder = computed(\n  () => props.placeholder || t('el.cascader.placeholder')\n)\nconst currentPlaceholder = computed(() =>\n  searchInputValue.value ||\n  presentTags.value.length > 0 ||\n  isOnComposition.value\n    ? ''\n    : inputPlaceholder.value\n)\nconst realSize = useFormSize()\nconst tagSize = computed(() =>\n  ['small'].includes(realSize.value) ? 'small' : 'default'\n)\nconst multiple = computed(() => !!props.props.multiple)\nconst readonly = computed(() => !props.filterable || multiple.value)\nconst searchKeyword = computed(() =>\n  multiple.value ? searchInputValue.value : inputValue.value\n)\nconst checkedNodes: ComputedRef<CascaderNode[]> = computed(\n  () => cascaderPanelRef.value?.checkedNodes || []\n)\nconst clearBtnVisible = computed(() => {\n  if (\n    !props.clearable ||\n    isDisabled.value ||\n    filtering.value ||\n    !inputHover.value\n  )\n    return false\n\n  return !!checkedNodes.value.length\n})\nconst presentText = computed(() => {\n  const { showAllLevels, separator } = props\n  const nodes = checkedNodes.value\n  return nodes.length\n    ? multiple.value\n      ? ''\n      : nodes[0].calcText(showAllLevels, separator)\n    : ''\n})\n\nconst checkedValue = computed<CascaderValue>({\n  get() {\n    return cloneDeep(props.modelValue) as CascaderValue\n  },\n  set(val) {\n    emit(UPDATE_MODEL_EVENT, val)\n    emit(CHANGE_EVENT, val)\n    if (props.validateEvent) {\n      formItem?.validate('change').catch((err) => debugWarn(err))\n    }\n  },\n})\n\nconst cascaderKls = computed(() => {\n  return [\n    nsCascader.b(),\n    nsCascader.m(realSize.value),\n    nsCascader.is('disabled', isDisabled.value),\n    attrs.class,\n  ]\n})\n\nconst cascaderIconKls = computed(() => {\n  return [\n    nsInput.e('icon'),\n    'icon-arrow-down',\n    nsCascader.is('reverse', popperVisible.value),\n  ]\n})\n\nconst inputClass = computed(() => {\n  return nsCascader.is('focus', popperVisible.value || filterFocus.value)\n})\n\nconst contentRef = computed(() => {\n  return tooltipRef.value?.popperRef?.contentRef\n})\n\nconst togglePopperVisible = (visible?: boolean) => {\n  if (isDisabled.value) return\n\n  visible = visible ?? !popperVisible.value\n\n  if (visible !== popperVisible.value) {\n    popperVisible.value = visible\n    input.value?.input?.setAttribute('aria-expanded', `${visible}`)\n\n    if (visible) {\n      updatePopperPosition()\n      nextTick(cascaderPanelRef.value?.scrollToExpandingNode)\n    } else if (props.filterable) {\n      syncPresentTextValue()\n    }\n\n    emit('visibleChange', visible)\n  }\n}\n\nconst updatePopperPosition = () => {\n  nextTick(() => {\n    tooltipRef.value?.updatePopper()\n  })\n}\n\nconst hideSuggestionPanel = () => {\n  filtering.value = false\n}\n\nconst genTag = (node: CascaderNode): Tag => {\n  const { showAllLevels, separator } = props\n  return {\n    node,\n    key: node.uid,\n    text: node.calcText(showAllLevels, separator),\n    hitState: false,\n    closable: !isDisabled.value && !node.isDisabled,\n    isCollapseTag: false,\n  }\n}\n\nconst deleteTag = (tag: Tag) => {\n  const node = tag.node as CascaderNode\n  node.doCheck(false)\n  cascaderPanelRef.value?.calculateCheckedValue()\n  emit('removeTag', node.valueByOption)\n}\n\nconst calculatePresentTags = () => {\n  if (!multiple.value) return\n\n  const nodes = checkedNodes.value\n  const tags: Tag[] = []\n\n  const allTags: Tag[] = []\n  nodes.forEach((node) => allTags.push(genTag(node)))\n  allPresentTags.value = allTags\n\n  if (nodes.length) {\n    const [first, ...rest] = nodes\n    const restCount = rest.length\n\n    tags.push(genTag(first))\n\n    if (restCount) {\n      if (props.collapseTags) {\n        tags.push({\n          key: -1,\n          text: `+ ${restCount}`,\n          closable: false,\n          isCollapseTag: true,\n        })\n      } else {\n        rest.forEach((node) => tags.push(genTag(node)))\n      }\n    }\n  }\n\n  presentTags.value = tags\n}\n\nconst calculateSuggestions = () => {\n  const { filterMethod, showAllLevels, separator } = props\n  const res = cascaderPanelRef.value\n    ?.getFlattedNodes(!props.props.checkStrictly)\n    ?.filter((node) => {\n      if (node.isDisabled) return false\n      node.calcText(showAllLevels, separator)\n      return filterMethod(node, searchKeyword.value)\n    })\n\n  if (multiple.value) {\n    presentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n    allPresentTags.value.forEach((tag) => {\n      tag.hitState = false\n    })\n  }\n\n  filtering.value = true\n  suggestions.value = res!\n  updatePopperPosition()\n}\n\nconst focusFirstNode = () => {\n  let firstNode!: HTMLElement\n\n  if (filtering.value && suggestionPanel.value) {\n    firstNode = suggestionPanel.value.$el.querySelector(\n      `.${nsCascader.e('suggestion-item')}`\n    )\n  } else {\n    firstNode = cascaderPanelRef.value?.$el.querySelector(\n      `.${nsCascader.b('node')}[tabindex=\"-1\"]`\n    )\n  }\n\n  if (firstNode) {\n    firstNode.focus()\n    !filtering.value && firstNode.click()\n  }\n}\n\nconst updateStyle = () => {\n  const inputInner = input.value?.input\n  const tagWrapperEl = tagWrapper.value\n  const suggestionPanelEl = suggestionPanel.value?.$el\n\n  if (!isClient || !inputInner) return\n\n  if (suggestionPanelEl) {\n    const suggestionList = suggestionPanelEl.querySelector(\n      `.${nsCascader.e('suggestion-list')}`\n    )\n    suggestionList.style.minWidth = `${inputInner.offsetWidth}px`\n  }\n\n  if (tagWrapperEl) {\n    const { offsetHeight } = tagWrapperEl\n    const height =\n      presentTags.value.length > 0\n        ? `${Math.max(offsetHeight + 6, inputInitialHeight)}px`\n        : `${inputInitialHeight}px`\n    inputInner.style.height = height\n    updatePopperPosition()\n  }\n}\n\nconst getCheckedNodes = (leafOnly: boolean) => {\n  return cascaderPanelRef.value?.getCheckedNodes(leafOnly)\n}\n\nconst handleExpandChange = (value: CascaderValue) => {\n  updatePopperPosition()\n  emit('expandChange', value)\n}\n\nconst handleComposition = (event: CompositionEvent) => {\n  const text = (event.target as HTMLInputElement)?.value\n  if (event.type === 'compositionend') {\n    isOnComposition.value = false\n    nextTick(() => handleInput(text))\n  } else {\n    const lastCharacter = text[text.length - 1] || ''\n    isOnComposition.value = !isKorean(lastCharacter)\n  }\n}\n\nconst handleKeyDown = (e: KeyboardEvent) => {\n  if (isOnComposition.value) return\n\n  switch (e.code) {\n    case EVENT_CODE.enter:\n      togglePopperVisible()\n      break\n    case EVENT_CODE.down:\n      togglePopperVisible(true)\n      nextTick(focusFirstNode)\n      e.preventDefault()\n      break\n    case EVENT_CODE.esc:\n      if (popperVisible.value === true) {\n        e.preventDefault()\n        e.stopPropagation()\n        togglePopperVisible(false)\n      }\n      break\n    case EVENT_CODE.tab:\n      togglePopperVisible(false)\n      break\n  }\n}\n\nconst handleClear = () => {\n  cascaderPanelRef.value?.clearCheckedNodes()\n  if (!popperVisible.value && props.filterable) {\n    syncPresentTextValue()\n  }\n  togglePopperVisible(false)\n}\n\nconst syncPresentTextValue = () => {\n  const { value } = presentText\n  inputValue.value = value\n  searchInputValue.value = value\n}\n\nconst handleSuggestionClick = (node: CascaderNode) => {\n  const { checked } = node\n\n  if (multiple.value) {\n    cascaderPanelRef.value?.handleCheckChange(node, !checked, false)\n  } else {\n    !checked && cascaderPanelRef.value?.handleCheckChange(node, true, false)\n    togglePopperVisible(false)\n  }\n}\n\nconst handleSuggestionKeyDown = (e: KeyboardEvent) => {\n  const target = e.target as HTMLElement\n  const { code } = e\n\n  switch (code) {\n    case EVENT_CODE.up:\n    case EVENT_CODE.down: {\n      const distance = code === EVENT_CODE.up ? -1 : 1\n      focusNode(\n        getSibling(\n          target,\n          distance,\n          `.${nsCascader.e('suggestion-item')}[tabindex=\"-1\"]`\n        ) as HTMLElement\n      )\n      break\n    }\n    case EVENT_CODE.enter:\n      target.click()\n      break\n  }\n}\n\nconst handleDelete = () => {\n  const tags = presentTags.value\n  const lastTag = tags[tags.length - 1]\n  pressDeleteCount = searchInputValue.value ? 0 : pressDeleteCount + 1\n\n  if (!lastTag || !pressDeleteCount || (props.collapseTags && tags.length > 1))\n    return\n\n  if (lastTag.hitState) {\n    deleteTag(lastTag)\n  } else {\n    lastTag.hitState = true\n  }\n}\n\nconst handleFocus = (e: FocusEvent) => {\n  const el = e.target as HTMLInputElement\n  const name = nsCascader.e('search-input')\n  if (el.className === name) {\n    filterFocus.value = true\n  }\n  emit('focus', e)\n}\n\nconst handleBlur = (e: FocusEvent) => {\n  filterFocus.value = false\n  emit('blur', e)\n}\n\nconst handleFilter = debounce(() => {\n  const { value } = searchKeyword\n\n  if (!value) return\n\n  const passed = props.beforeFilter(value)\n\n  if (isPromise(passed)) {\n    passed.then(calculateSuggestions).catch(() => {\n      /* prevent log error */\n    })\n  } else if (passed !== false) {\n    calculateSuggestions()\n  } else {\n    hideSuggestionPanel()\n  }\n}, props.debounce)\n\nconst handleInput = (val: string, e?: KeyboardEvent) => {\n  !popperVisible.value && togglePopperVisible(true)\n\n  if (e?.isComposing) return\n\n  val ? handleFilter() : hideSuggestionPanel()\n}\n\nwatch(filtering, updatePopperPosition)\n\nwatch([checkedNodes, isDisabled], calculatePresentTags)\n\nwatch(presentTags, () => {\n  nextTick(() => updateStyle())\n})\n\nwatch(presentText, syncPresentTextValue, { immediate: true })\n\nonMounted(() => {\n  const inputInner = input.value!.input!\n\n  const inputInnerHeight =\n    Number.parseFloat(\n      useCssVar(nsInput.cssVarName('input-height'), inputInner).value\n    ) - 2\n\n  inputInitialHeight = inputInner.offsetHeight || inputInnerHeight\n  useResizeObserver(inputInner, updateStyle)\n})\n\ndefineExpose({\n  /**\n   * @description get an array of currently selected node,(leafOnly) whether only return the leaf checked nodes, default is `false`\n   */\n  getCheckedNodes,\n  /**\n   * @description cascader panel ref\n   */\n  cascaderPanelRef,\n  /**\n   * @description toggle the visible of popper\n   */\n  togglePopperVisible,\n  /**\n   * @description cascader content ref\n   */\n  contentRef,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}