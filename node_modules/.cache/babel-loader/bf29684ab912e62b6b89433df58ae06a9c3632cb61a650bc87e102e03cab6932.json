{"ast":null,"code":"import { defineComponent, ref, openBlock, createElementBlock, Fragment, createVNode } from 'vue';\nimport { GAP } from './util.mjs';\nimport Thumb from './thumb2.mjs';\nimport { barProps } from './bar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nvar _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"bar\",\n  props: barProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var moveX = ref(0);\n    var moveY = ref(0);\n    var handleScroll = function handleScroll(wrap) {\n      if (wrap) {\n        var offsetHeight = wrap.offsetHeight - GAP;\n        var offsetWidth = wrap.offsetWidth - GAP;\n        moveY.value = wrap.scrollTop * 100 / offsetHeight * props.ratioY;\n        moveX.value = wrap.scrollLeft * 100 / offsetWidth * props.ratioX;\n      }\n    };\n    expose({\n      handleScroll: handleScroll\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(Fragment, null, [createVNode(Thumb, {\n        move: moveX.value,\n        ratio: _ctx.ratioX,\n        size: _ctx.width,\n        always: _ctx.always\n      }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"]), createVNode(Thumb, {\n        move: moveY.value,\n        ratio: _ctx.ratioY,\n        size: _ctx.height,\n        vertical: \"\",\n        always: _ctx.always\n      }, null, 8, [\"move\", \"ratio\", \"size\", \"always\"])], 64);\n    };\n  }\n});\nvar Bar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/scrollbar/src/bar.vue\"]]);\nexport { Bar as default };","map":{"version":3,"names":["moveX","ref","moveY","handleScroll","wrap","offsetHeight","GAP","offsetWidth","value","scrollTop","props","ratioY","scrollLeft","ratioX","expose"],"sources":["../../../../../../packages/components/scrollbar/src/bar.vue"],"sourcesContent":["<template>\n  <thumb :move=\"moveX\" :ratio=\"ratioX\" :size=\"width\" :always=\"always\" />\n  <thumb\n    :move=\"moveY\"\n    :ratio=\"ratioY\"\n    :size=\"height\"\n    vertical\n    :always=\"always\"\n  />\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { GAP } from './util'\nimport Thumb from './thumb.vue'\nimport { barProps } from './bar'\n\nconst props = defineProps(barProps)\n\nconst moveX = ref(0)\nconst moveY = ref(0)\n\nconst handleScroll = (wrap: HTMLDivElement) => {\n  if (wrap) {\n    const offsetHeight = wrap.offsetHeight - GAP\n    const offsetWidth = wrap.offsetWidth - GAP\n\n    moveY.value = ((wrap.scrollTop * 100) / offsetHeight) * props.ratioY\n    moveX.value = ((wrap.scrollLeft * 100) / offsetWidth) * props.ratioX\n  }\n}\n\ndefineExpose({\n  handleScroll,\n})\n</script>\n"],"mappings":";;;;;;;;;;;IAkBM,IAAAA,KAAA,GAAQC,GAAA,CAAI,CAAC;IACb,IAAAC,KAAA,GAAQD,GAAA,CAAI,CAAC;IAEb,IAAAE,YAAA,GAAe,SAAfA,aAAgBC,IAAyB;MAC7C,IAAIA,IAAM;QACF,IAAAC,YAAA,GAAeD,IAAA,CAAKC,YAAe,GAAAC,GAAA;QACnC,IAAAC,WAAA,GAAcH,IAAA,CAAKG,WAAc,GAAAD,GAAA;QAEvCJ,KAAA,CAAMM,KAAU,GAAAJ,IAAA,CAAKK,SAAY,SAAOJ,YAAA,GAAgBK,KAAM,CAAAC,MAAA;QAC9DX,KAAA,CAAMQ,KAAU,GAAAJ,IAAA,CAAKQ,UAAa,SAAOL,WAAA,GAAeG,KAAM,CAAAG,MAAA;MAAA;IAChE,CACF;IAEaC,MAAA;MACXX,YAAA,EAAAA;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}