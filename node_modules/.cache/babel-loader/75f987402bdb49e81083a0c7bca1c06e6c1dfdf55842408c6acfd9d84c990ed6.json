{"ast":null,"code":"var _tooltipV2OppositeSid, _tooltipV2ArrowBorder;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport '../../../utils/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nvar tooltipV2CommonProps = buildProps({\n  nowrap: Boolean\n});\nvar TooltipV2Sides = /* @__PURE__ */function (TooltipV2Sides2) {\n  TooltipV2Sides2[\"top\"] = \"top\";\n  TooltipV2Sides2[\"bottom\"] = \"bottom\";\n  TooltipV2Sides2[\"left\"] = \"left\";\n  TooltipV2Sides2[\"right\"] = \"right\";\n  return TooltipV2Sides2;\n}(TooltipV2Sides || {});\nvar tooltipV2Sides = Object.values(TooltipV2Sides);\nvar tooltipV2OppositeSide = (_tooltipV2OppositeSid = {}, _defineProperty(_tooltipV2OppositeSid, \"top\" /* top */, \"bottom\"), _defineProperty(_tooltipV2OppositeSid, \"bottom\" /* bottom */, \"top\"), _defineProperty(_tooltipV2OppositeSid, \"left\" /* left */, \"right\"), _defineProperty(_tooltipV2OppositeSid, \"right\" /* right */, \"left\"), _tooltipV2OppositeSid);\nvar tooltipV2ArrowBorders = (_tooltipV2ArrowBorder = {}, _defineProperty(_tooltipV2ArrowBorder, \"top\" /* top */, [\"left\" /* left */, \"top\" /* top */]), _defineProperty(_tooltipV2ArrowBorder, \"bottom\" /* bottom */, [\"bottom\" /* bottom */, \"right\" /* right */]), _defineProperty(_tooltipV2ArrowBorder, \"left\" /* left */, [\"bottom\" /* bottom */, \"left\" /* left */]), _defineProperty(_tooltipV2ArrowBorder, \"right\" /* right */, [\"top\" /* top */, \"right\" /* right */]), _tooltipV2ArrowBorder);\nexport { TooltipV2Sides, tooltipV2ArrowBorders, tooltipV2CommonProps, tooltipV2OppositeSide, tooltipV2Sides };","map":{"version":3,"names":["tooltipV2CommonProps","buildProps","nowrap","Boolean","TooltipV2Sides","TooltipV2Sides2","tooltipV2Sides","Object","values","tooltipV2OppositeSide","_tooltipV2OppositeSid","_defineProperty","tooltipV2ArrowBorders","_tooltipV2ArrowBorder"],"sources":["../../../../../../packages/components/tooltip-v2/src/common.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\n\n/**\n * TODO: make this under constants or tokens\n */\nexport const tooltipV2CommonProps = buildProps({\n  nowrap: Boolean,\n} as const)\n\nexport type TooltipV2CommonProps = ExtractPropTypes<typeof tooltipV2CommonProps>\n\nexport enum TooltipV2Sides {\n  top = 'top',\n  bottom = 'bottom',\n  left = 'left',\n  right = 'right',\n}\n\nexport const tooltipV2Sides = Object.values(TooltipV2Sides)\n\nexport const tooltipV2OppositeSide = {\n  [TooltipV2Sides.top]: TooltipV2Sides.bottom,\n  [TooltipV2Sides.bottom]: TooltipV2Sides.top,\n  [TooltipV2Sides.left]: TooltipV2Sides.right,\n  [TooltipV2Sides.right]: TooltipV2Sides.left,\n} as const\n\nexport const tooltipV2ArrowBorders = {\n  [TooltipV2Sides.top]: [TooltipV2Sides.left, TooltipV2Sides.top],\n  [TooltipV2Sides.bottom]: [TooltipV2Sides.bottom, TooltipV2Sides.right],\n  [TooltipV2Sides.left]: [TooltipV2Sides.bottom, TooltipV2Sides.left],\n  [TooltipV2Sides.right]: [TooltipV2Sides.top, TooltipV2Sides.right],\n} as const\n"],"mappings":";;;;;;;AACY,IAACA,oBAAoB,GAAGC,UAAU,CAAC;EAC7CC,MAAM,EAAEC;AACV,CAAC;AACS,IAACC,cAAc,kBAAoB,UAACC,eAAe,EAAK;EAChEA,eAAe,CAAC,KAAK,CAAC,GAAG,KAAK;EAC9BA,eAAe,CAAC,QAAQ,CAAC,GAAG,QAAQ;EACpCA,eAAe,CAAC,MAAM,CAAC,GAAG,MAAM;EAChCA,eAAe,CAAC,OAAO,CAAC,GAAG,OAAO;EAClC,OAAOA,eAAe;AACxB,CAAC,CAAED,cAAc,IAAI,EAAE;AACX,IAACE,cAAc,GAAGC,MAAM,CAACC,MAAM,CAACJ,cAAc;AAC9C,IAACK,qBAAqB,IAAAC,qBAAA,OAAAC,eAAA,CAAAD,qBAAA,EAC/B,KAAK,YAAa,QAAQ,GAAAC,eAAA,CAAAD,qBAAA,EAC1B,QAAQ,eAAgB,KAAK,GAAAC,eAAA,CAAAD,qBAAA,EAC7B,MAAM,aAAc,OAAO,GAAAC,eAAA,CAAAD,qBAAA,EAC3B,OAAO,cAAe,MAAM,GAAAA,qBAAA,CAC/B;AACY,IAACE,qBAAqB,IAAAC,qBAAA,OAAAF,eAAA,CAAAE,qBAAA,EAC/B,KAAK,YAAa,CAAC,MAAM,aAAa,KAAK,WAAW,GAAAF,eAAA,CAAAE,qBAAA,EACtD,QAAQ,eAAgB,CAAC,QAAQ,eAAe,OAAO,aAAa,GAAAF,eAAA,CAAAE,qBAAA,EACpE,MAAM,aAAc,CAAC,QAAQ,eAAe,MAAM,YAAY,GAAAF,eAAA,CAAAE,qBAAA,EAC9D,OAAO,cAAe,CAAC,KAAK,YAAY,OAAO,aAAa,GAAAA,qBAAA,CAC/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}