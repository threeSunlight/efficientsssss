{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { watch, nextTick, computed, toRefs } from 'vue';\nimport { isEqual, pick } from 'lodash-unified';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport _Tree from '../../tree/index.mjs';\nimport component from './tree-select-option.mjs';\nimport { toValidArray, treeFind, isValidValue, treeEach, isValidArray } from './utils.mjs';\nimport { isFunction } from '@vue/shared';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar useTree = function useTree(props, _ref, _ref2) {\n  var attrs = _ref.attrs,\n    slots = _ref.slots,\n    emit = _ref.emit;\n  var select = _ref2.select,\n    tree = _ref2.tree,\n    key = _ref2.key;\n  watch(function () {\n    return props.modelValue;\n  }, function () {\n    if (props.showCheckbox) {\n      nextTick(function () {\n        var treeInstance = tree.value;\n        if (treeInstance && !isEqual(treeInstance.getCheckedKeys(), toValidArray(props.modelValue))) {\n          treeInstance.setCheckedKeys(toValidArray(props.modelValue));\n        }\n      });\n    }\n  }, {\n    immediate: true,\n    deep: true\n  });\n  var propsMap = computed(function () {\n    return _objectSpread({\n      value: key.value,\n      label: \"label\",\n      children: \"children\",\n      disabled: \"disabled\",\n      isLeaf: \"isLeaf\"\n    }, props.props);\n  });\n  var getNodeValByProp = function getNodeValByProp(prop, data) {\n    var _a;\n    var propVal = propsMap.value[prop];\n    if (isFunction(propVal)) {\n      return propVal(data, (_a = tree.value) == null ? void 0 : _a.getNode(getNodeValByProp(\"value\", data)));\n    } else {\n      return data[propVal];\n    }\n  };\n  var defaultExpandedParentKeys = toValidArray(props.modelValue).map(function (value) {\n    return treeFind(props.data || [], function (data) {\n      return getNodeValByProp(\"value\", data) === value;\n    }, function (data) {\n      return getNodeValByProp(\"children\", data);\n    }, function (data, index, array, parent) {\n      return parent && getNodeValByProp(\"value\", parent);\n    });\n  }).filter(function (item) {\n    return isValidValue(item);\n  });\n  var cacheOptions = computed(function () {\n    if (!props.renderAfterExpand && !props.lazy) return [];\n    var options = [];\n    treeEach(props.data.concat(props.cacheData), function (node) {\n      var value = getNodeValByProp(\"value\", node);\n      options.push({\n        value: value,\n        currentLabel: getNodeValByProp(\"label\", node),\n        isDisabled: getNodeValByProp(\"disabled\", node)\n      });\n    }, function (data) {\n      return getNodeValByProp(\"children\", data);\n    });\n    return options;\n  });\n  var cacheOptionsMap = computed(function () {\n    return cacheOptions.value.reduce(function (prev, next) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, next.value, next));\n    }, {});\n  });\n  return _objectSpread(_objectSpread(_objectSpread({}, pick(toRefs(props), Object.keys(_Tree.props))), attrs), {}, {\n    nodeKey: key,\n    expandOnClickNode: computed(function () {\n      return !props.checkStrictly && props.expandOnClickNode;\n    }),\n    defaultExpandedKeys: computed(function () {\n      return props.defaultExpandedKeys ? props.defaultExpandedKeys.concat(defaultExpandedParentKeys) : defaultExpandedParentKeys;\n    }),\n    renderContent: function renderContent(h, _ref3) {\n      var node = _ref3.node,\n        data = _ref3.data,\n        store = _ref3.store;\n      return h(component, {\n        value: getNodeValByProp(\"value\", data),\n        label: getNodeValByProp(\"label\", data),\n        disabled: getNodeValByProp(\"disabled\", data)\n      }, props.renderContent ? function () {\n        return props.renderContent(h, {\n          node: node,\n          data: data,\n          store: store\n        });\n      } : slots[\"default\"] ? function () {\n        return slots[\"default\"]({\n          node: node,\n          data: data,\n          store: store\n        });\n      } : void 0);\n    },\n    filterNodeMethod: function filterNodeMethod(value, data, node) {\n      var _a;\n      if (props.filterNodeMethod) return props.filterNodeMethod(value, data, node);\n      if (!value) return true;\n      return (_a = getNodeValByProp(\"label\", data)) == null ? void 0 : _a.includes(value);\n    },\n    onNodeClick: function onNodeClick(data, node, e) {\n      var _a, _b, _c;\n      (_a = attrs.onNodeClick) == null ? void 0 : _a.call(attrs, data, node, e);\n      if (props.showCheckbox && props.checkOnClickNode) return;\n      if (!props.showCheckbox && (props.checkStrictly || node.isLeaf)) {\n        if (!getNodeValByProp(\"disabled\", data)) {\n          var option = (_b = select.value) == null ? void 0 : _b.options.get(getNodeValByProp(\"value\", data));\n          (_c = select.value) == null ? void 0 : _c.handleOptionSelect(option);\n        }\n      } else if (props.expandOnClickNode) {\n        e.proxy.handleExpandIconClick();\n      }\n    },\n    onCheck: function onCheck(data, params) {\n      if (!props.showCheckbox) return;\n      var dataValue = getNodeValByProp(\"value\", data);\n      var uncachedCheckedKeys = params.checkedKeys;\n      var cachedKeys = props.multiple ? toValidArray(props.modelValue).filter(function (item) {\n        return item in cacheOptionsMap.value && !tree.value.getNode(item) && !uncachedCheckedKeys.includes(item);\n      }) : [];\n      var checkedKeys = uncachedCheckedKeys.concat(cachedKeys);\n      if (props.checkStrictly) {\n        emit(UPDATE_MODEL_EVENT, props.multiple ? checkedKeys : checkedKeys.includes(dataValue) ? dataValue : void 0);\n      } else {\n        if (props.multiple) {\n          emit(UPDATE_MODEL_EVENT, tree.value.getCheckedKeys(true));\n        } else {\n          var firstLeaf = treeFind([data], function (data2) {\n            return !isValidArray(getNodeValByProp(\"children\", data2)) && !getNodeValByProp(\"disabled\", data2);\n          }, function (data2) {\n            return getNodeValByProp(\"children\", data2);\n          });\n          var firstLeafKey = firstLeaf ? getNodeValByProp(\"value\", firstLeaf) : void 0;\n          var hasCheckedChild = isValidValue(props.modelValue) && !!treeFind([data], function (data2) {\n            return getNodeValByProp(\"value\", data2) === props.modelValue;\n          }, function (data2) {\n            return getNodeValByProp(\"children\", data2);\n          });\n          emit(UPDATE_MODEL_EVENT, firstLeafKey === props.modelValue || hasCheckedChild ? void 0 : firstLeafKey);\n        }\n      }\n      nextTick(function () {\n        var _a;\n        var checkedKeys2 = toValidArray(props.modelValue);\n        tree.value.setCheckedKeys(checkedKeys2);\n        (_a = attrs.onCheck) == null ? void 0 : _a.call(attrs, data, {\n          checkedKeys: tree.value.getCheckedKeys(),\n          checkedNodes: tree.value.getCheckedNodes(),\n          halfCheckedKeys: tree.value.getHalfCheckedKeys(),\n          halfCheckedNodes: tree.value.getHalfCheckedNodes()\n        });\n      });\n    },\n    cacheOptions: cacheOptions\n  });\n};\nexport { useTree };","map":{"version":3,"names":["useTree","props","_ref","_ref2","attrs","slots","emit","select","tree","key","watch","modelValue","showCheckbox","nextTick","treeInstance","value","isEqual","getCheckedKeys","toValidArray","setCheckedKeys","immediate","deep","propsMap","computed","_objectSpread","label","children","disabled","isLeaf","getNodeValByProp","prop","data","_a","propVal","isFunction","getNode","defaultExpandedParentKeys","map","treeFind","index","array","parent","filter","item","isValidValue","cacheOptions","renderAfterExpand","lazy","options","treeEach","concat","cacheData","node","push","currentLabel","isDisabled","cacheOptionsMap","reduce","prev","next","_defineProperty","pick","toRefs","Object","keys","_Tree","nodeKey","expandOnClickNode","checkStrictly","defaultExpandedKeys","renderContent","h","_ref3","store","component","filterNodeMethod","includes","onNodeClick","e","_b","_c","call","checkOnClickNode","option","get","handleOptionSelect","proxy","handleExpandIconClick","onCheck","params","dataValue","uncachedCheckedKeys","checkedKeys","cachedKeys","multiple","UPDATE_MODEL_EVENT","firstLeaf","data2","isValidArray","firstLeafKey","hasCheckedChild","checkedKeys2","checkedNodes","getCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","halfCheckedNodes","getHalfCheckedNodes"],"sources":["../../../../../../packages/components/tree-select/src/tree.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, nextTick, toRefs, watch } from 'vue'\nimport { isEqual, pick } from 'lodash-unified'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { isFunction } from '@element-plus/utils'\nimport ElTree from '@element-plus/components/tree'\nimport TreeSelectOption from './tree-select-option'\nimport {\n  isValidArray,\n  isValidValue,\n  toValidArray,\n  treeEach,\n  treeFind,\n} from './utils'\nimport type { CacheOption } from './cache-options'\nimport type { Ref } from 'vue'\nimport type ElSelect from '@element-plus/components/select'\nimport type Node from '@element-plus/components/tree/src/model/node'\nimport type { TreeNodeData } from '@element-plus/components/tree/src/tree.type'\n\nexport const useTree = (\n  props,\n  { attrs, slots, emit },\n  {\n    select,\n    tree,\n    key,\n  }: {\n    select: Ref<InstanceType<typeof ElSelect> | undefined>\n    tree: Ref<InstanceType<typeof ElTree> | undefined>\n    key: Ref<string>\n  }\n) => {\n  watch(\n    () => props.modelValue,\n    () => {\n      if (props.showCheckbox) {\n        nextTick(() => {\n          const treeInstance = tree.value\n          if (\n            treeInstance &&\n            !isEqual(\n              treeInstance.getCheckedKeys(),\n              toValidArray(props.modelValue)\n            )\n          ) {\n            treeInstance.setCheckedKeys(toValidArray(props.modelValue))\n          }\n        })\n      }\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n\n  const propsMap = computed(() => ({\n    value: key.value,\n    label: 'label',\n    children: 'children',\n    disabled: 'disabled',\n    isLeaf: 'isLeaf',\n    ...props.props,\n  }))\n\n  const getNodeValByProp = (\n    prop: 'value' | 'label' | 'children' | 'disabled' | 'isLeaf',\n    data: TreeNodeData\n  ) => {\n    const propVal = propsMap.value[prop]\n    if (isFunction(propVal)) {\n      return propVal(\n        data,\n        tree.value?.getNode(getNodeValByProp('value', data)) as Node\n      )\n    } else {\n      return data[propVal as string]\n    }\n  }\n\n  const defaultExpandedParentKeys = toValidArray(props.modelValue)\n    .map((value) => {\n      return treeFind(\n        props.data || [],\n        (data) => getNodeValByProp('value', data) === value,\n        (data) => getNodeValByProp('children', data),\n        (data, index, array, parent) =>\n          parent && getNodeValByProp('value', parent)\n      )\n    })\n    .filter((item) => isValidValue(item))\n\n  const cacheOptions = computed(() => {\n    if (!props.renderAfterExpand && !props.lazy) return []\n\n    const options: CacheOption[] = []\n\n    treeEach(\n      props.data.concat(props.cacheData),\n      (node) => {\n        const value = getNodeValByProp('value', node)\n        options.push({\n          value,\n          currentLabel: getNodeValByProp('label', node),\n          isDisabled: getNodeValByProp('disabled', node),\n        })\n      },\n      (data) => getNodeValByProp('children', data)\n    )\n\n    return options\n  })\n\n  const cacheOptionsMap = computed(() => {\n    return cacheOptions.value.reduce(\n      (prev, next) => ({ ...prev, [next.value]: next }),\n      {}\n    )\n  })\n\n  return {\n    ...pick(toRefs(props), Object.keys(ElTree.props)),\n    ...attrs,\n    nodeKey: key,\n\n    // only expand on click node when the `check-strictly` is false\n    expandOnClickNode: computed(() => {\n      return !props.checkStrictly && props.expandOnClickNode\n    }),\n\n    // show current selected node only first time,\n    // fix the problem of expanding multiple nodes when checking multiple nodes\n    defaultExpandedKeys: computed(() => {\n      return props.defaultExpandedKeys\n        ? props.defaultExpandedKeys.concat(defaultExpandedParentKeys)\n        : defaultExpandedParentKeys\n    }),\n\n    renderContent: (h, { node, data, store }) => {\n      return h(\n        TreeSelectOption,\n        {\n          value: getNodeValByProp('value', data),\n          label: getNodeValByProp('label', data),\n          disabled: getNodeValByProp('disabled', data),\n        },\n        props.renderContent\n          ? () => props.renderContent(h, { node, data, store })\n          : slots.default\n          ? () => slots.default({ node, data, store })\n          : undefined\n      )\n    },\n    filterNodeMethod: (value, data, node) => {\n      if (props.filterNodeMethod)\n        return props.filterNodeMethod(value, data, node)\n      if (!value) return true\n      return getNodeValByProp('label', data)?.includes(value)\n    },\n    onNodeClick: (data, node, e) => {\n      attrs.onNodeClick?.(data, node, e)\n\n      // `onCheck` is trigger when `checkOnClickNode`\n      if (props.showCheckbox && props.checkOnClickNode) return\n\n      // now `checkOnClickNode` is false, only no checkbox and `checkStrictly` or `isLeaf`\n      if (!props.showCheckbox && (props.checkStrictly || node.isLeaf)) {\n        if (!getNodeValByProp('disabled', data)) {\n          const option = select.value?.options.get(\n            getNodeValByProp('value', data)\n          )\n          select.value?.handleOptionSelect(option)\n        }\n      } else if (props.expandOnClickNode) {\n        e.proxy.handleExpandIconClick()\n      }\n    },\n    onCheck: (data, params) => {\n      // ignore when no checkbox, like only `checkOnClickNode` is true\n      if (!props.showCheckbox) return\n\n      const dataValue = getNodeValByProp('value', data)\n\n      // fix: checkedKeys has not cached keys\n      const uncachedCheckedKeys = params.checkedKeys\n      const cachedKeys = props.multiple\n        ? toValidArray(props.modelValue).filter(\n            (item) =>\n              item in cacheOptionsMap.value &&\n              !tree.value.getNode(item) &&\n              !uncachedCheckedKeys.includes(item)\n          )\n        : []\n      const checkedKeys = uncachedCheckedKeys.concat(cachedKeys)\n\n      if (props.checkStrictly) {\n        emit(\n          UPDATE_MODEL_EVENT,\n          // Checking for changes may come from `check-on-node-click`\n          props.multiple\n            ? checkedKeys\n            : checkedKeys.includes(dataValue)\n            ? dataValue\n            : undefined\n        )\n      }\n      // only can select leaf node\n      else {\n        if (props.multiple) {\n          emit(\n            UPDATE_MODEL_EVENT,\n            (tree.value as InstanceType<typeof ElTree>).getCheckedKeys(true)\n          )\n        } else {\n          // select first leaf node when check parent\n          const firstLeaf = treeFind(\n            [data],\n            (data) =>\n              !isValidArray(getNodeValByProp('children', data)) &&\n              !getNodeValByProp('disabled', data),\n            (data) => getNodeValByProp('children', data)\n          )\n          const firstLeafKey = firstLeaf\n            ? getNodeValByProp('value', firstLeaf)\n            : undefined\n\n          // unselect when any child checked\n          const hasCheckedChild =\n            isValidValue(props.modelValue) &&\n            !!treeFind(\n              [data],\n              (data) => getNodeValByProp('value', data) === props.modelValue,\n              (data) => getNodeValByProp('children', data)\n            )\n\n          emit(\n            UPDATE_MODEL_EVENT,\n            firstLeafKey === props.modelValue || hasCheckedChild\n              ? undefined\n              : firstLeafKey\n          )\n        }\n      }\n\n      nextTick(() => {\n        const checkedKeys = toValidArray(props.modelValue)\n        tree.value.setCheckedKeys(checkedKeys)\n\n        attrs.onCheck?.(data, {\n          checkedKeys: tree.value.getCheckedKeys(),\n          checkedNodes: tree.value.getCheckedNodes(),\n          halfCheckedKeys: tree.value.getHalfCheckedKeys(),\n          halfCheckedNodes: tree.value.getHalfCheckedNodes(),\n        })\n      })\n    },\n\n    // else\n    cacheOptions,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AAaY,IAACA,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAAC,IAAA,EAAAC,KAAA,EAIvB;EAAA,IAJ2BC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;EAAA,IACjDC,MAAM,GAAAJ,KAAA,CAANI,MAAM;IACNC,IAAI,GAAAL,KAAA,CAAJK,IAAI;IACJC,GAAG,GAAAN,KAAA,CAAHM,GAAG;EAEHC,KAAK,CAAC;IAAA,OAAMT,KAAK,CAACU,UAAU;EAAA,GAAE,YAAM;IAClC,IAAIV,KAAK,CAACW,YAAY,EAAE;MACtBC,QAAQ,CAAC,YAAM;QACb,IAAMC,YAAY,GAAGN,IAAI,CAACO,KAAK;QAC/B,IAAID,YAAY,IAAI,CAACE,OAAO,CAACF,YAAY,CAACG,cAAc,EAAE,EAAEC,YAAY,CAACjB,KAAK,CAACU,UAAU,CAAC,CAAC,EAAE;UAC3FG,YAAY,CAACK,cAAc,CAACD,YAAY,CAACjB,KAAK,CAACU,UAAU,CAAC,CAAC;QACrE;MACA,CAAO,CAAC;IACR;EACA,CAAG,EAAE;IACDS,SAAS,EAAE,IAAI;IACfC,IAAI,EAAE;EACV,CAAG,CAAC;EACF,IAAMC,QAAQ,GAAGC,QAAQ,CAAC;IAAA,OAAAC,aAAA;MACxBT,KAAK,EAAEN,GAAG,CAACM,KAAK;MAChBU,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,UAAU;MACpBC,MAAM,EAAE;IAAQ,GACb3B,KAAK,CAACA,KAAK;EAAA,CACd,CAAC;EACH,IAAM4B,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,IAAI,EAAEC,IAAI,EAAK;IACvC,IAAIC,EAAE;IACN,IAAMC,OAAO,GAAGX,QAAQ,CAACP,KAAK,CAACe,IAAI,CAAC;IACpC,IAAII,UAAU,CAACD,OAAO,CAAC,EAAE;MACvB,OAAOA,OAAO,CAACF,IAAI,EAAE,CAACC,EAAE,GAAGxB,IAAI,CAACO,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGiB,EAAE,CAACG,OAAO,CAACN,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC,CAAC,CAAC;IAC5G,CAAK,MAAM;MACL,OAAOA,IAAI,CAACE,OAAO,CAAC;IAC1B;EACA,CAAG;EACD,IAAMG,yBAAyB,GAAGlB,YAAY,CAACjB,KAAK,CAACU,UAAU,CAAC,CAAC0B,GAAG,CAAC,UAACtB,KAAK,EAAK;IAC9E,OAAOuB,QAAQ,CAACrC,KAAK,CAAC8B,IAAI,IAAI,EAAE,EAAE,UAACA,IAAI;MAAA,OAAKF,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC,KAAKhB,KAAK;IAAA,GAAE,UAACgB,IAAI;MAAA,OAAKF,gBAAgB,CAAC,UAAU,EAAEE,IAAI,CAAC;IAAA,GAAE,UAACA,IAAI,EAAEQ,KAAK,EAAEC,KAAK,EAAEC,MAAM;MAAA,OAAKA,MAAM,IAAIZ,gBAAgB,CAAC,OAAO,EAAEY,MAAM,CAAC;IAAA,EAAC;EACrN,CAAG,CAAC,CAACC,MAAM,CAAC,UAACC,IAAI;IAAA,OAAKC,YAAY,CAACD,IAAI,CAAC;EAAA,EAAC;EACvC,IAAME,YAAY,GAAGtB,QAAQ,CAAC,YAAM;IAClC,IAAI,CAACtB,KAAK,CAAC6C,iBAAiB,IAAI,CAAC7C,KAAK,CAAC8C,IAAI,EACzC,OAAO,EAAE;IACX,IAAMC,OAAO,GAAG,EAAE;IAClBC,QAAQ,CAAChD,KAAK,CAAC8B,IAAI,CAACmB,MAAM,CAACjD,KAAK,CAACkD,SAAS,CAAC,EAAE,UAACC,IAAI,EAAK;MACrD,IAAMrC,KAAK,GAAGc,gBAAgB,CAAC,OAAO,EAAEuB,IAAI,CAAC;MAC7CJ,OAAO,CAACK,IAAI,CAAC;QACXtC,KAAK,EAALA,KAAK;QACLuC,YAAY,EAAEzB,gBAAgB,CAAC,OAAO,EAAEuB,IAAI,CAAC;QAC7CG,UAAU,EAAE1B,gBAAgB,CAAC,UAAU,EAAEuB,IAAI;MACrD,CAAO,CAAC;IACR,CAAK,EAAE,UAACrB,IAAI;MAAA,OAAKF,gBAAgB,CAAC,UAAU,EAAEE,IAAI,CAAC;IAAA,EAAC;IAChD,OAAOiB,OAAO;EAClB,CAAG,CAAC;EACF,IAAMQ,eAAe,GAAGjC,QAAQ,CAAC,YAAM;IACrC,OAAOsB,YAAY,CAAC9B,KAAK,CAAC0C,MAAM,CAAC,UAACC,IAAI,EAAEC,IAAI;MAAA,OAAAnC,aAAA,CAAAA,aAAA,KAAWkC,IAAI,OAAAE,eAAA,KAAGD,IAAI,CAAC5C,KAAK,EAAG4C,IAAI;IAAA,CAAG,EAAE,EAAE,CAAC;EAC3F,CAAG,CAAC;EACF,OAAAnC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACKqC,IAAI,CAACC,MAAM,CAAC7D,KAAK,CAAC,EAAE8D,MAAM,CAACC,IAAI,CAACC,KAAM,CAAChE,KAAK,CAAC,CAAC,GAC9CG,KAAK;IACR8D,OAAO,EAAEzD,GAAG;IACZ0D,iBAAiB,EAAE5C,QAAQ,CAAC,YAAM;MAChC,OAAO,CAACtB,KAAK,CAACmE,aAAa,IAAInE,KAAK,CAACkE,iBAAiB;IAC5D,CAAK,CAAC;IACFE,mBAAmB,EAAE9C,QAAQ,CAAC,YAAM;MAClC,OAAOtB,KAAK,CAACoE,mBAAmB,GAAGpE,KAAK,CAACoE,mBAAmB,CAACnB,MAAM,CAACd,yBAAyB,CAAC,GAAGA,yBAAyB;IAChI,CAAK,CAAC;IACFkC,aAAa,EAAE,SAAAA,cAACC,CAAC,EAAAC,KAAA,EAA4B;MAAA,IAAxBpB,IAAI,GAAAoB,KAAA,CAAJpB,IAAI;QAAErB,IAAI,GAAAyC,KAAA,CAAJzC,IAAI;QAAE0C,KAAK,GAAAD,KAAA,CAALC,KAAK;MACpC,OAAOF,CAAC,CAACG,SAAgB,EAAE;QACzB3D,KAAK,EAAEc,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC;QACtCN,KAAK,EAAEI,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC;QACtCJ,QAAQ,EAAEE,gBAAgB,CAAC,UAAU,EAAEE,IAAI;MACnD,CAAO,EAAE9B,KAAK,CAACqE,aAAa,GAAG;QAAA,OAAMrE,KAAK,CAACqE,aAAa,CAACC,CAAC,EAAE;UAAEnB,IAAI,EAAJA,IAAI;UAAErB,IAAI,EAAJA,IAAI;UAAE0C,KAAK,EAALA;QAAK,CAAE,CAAC;MAAA,IAAGpE,KAAK,WAAQ,GAAG;QAAA,OAAMA,KAAK,WAAQ,CAAC;UAAE+C,IAAI,EAAJA,IAAI;UAAErB,IAAI,EAAJA,IAAI;UAAE0C,KAAK,EAALA;QAAK,CAAE,CAAC;MAAA,IAAG,KAAK,CAAC,CAAC;IACzJ,CAAK;IACDE,gBAAgB,EAAE,SAAAA,iBAAC5D,KAAK,EAAEgB,IAAI,EAAEqB,IAAI,EAAK;MACvC,IAAIpB,EAAE;MACN,IAAI/B,KAAK,CAAC0E,gBAAgB,EACxB,OAAO1E,KAAK,CAAC0E,gBAAgB,CAAC5D,KAAK,EAAEgB,IAAI,EAAEqB,IAAI,CAAC;MAClD,IAAI,CAACrC,KAAK,EACR,OAAO,IAAI;MACb,OAAO,CAACiB,EAAE,GAAGH,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGC,EAAE,CAAC4C,QAAQ,CAAC7D,KAAK,CAAC;IACzF,CAAK;IACD8D,WAAW,EAAE,SAAAA,YAAC9C,IAAI,EAAEqB,IAAI,EAAE0B,CAAC,EAAK;MAC9B,IAAI9C,EAAE,EAAE+C,EAAE,EAAEC,EAAE;MACd,CAAChD,EAAE,GAAG5B,KAAK,CAACyE,WAAW,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG7C,EAAE,CAACiD,IAAI,CAAC7E,KAAK,EAAE2B,IAAI,EAAEqB,IAAI,EAAE0B,CAAC,CAAC;MACzE,IAAI7E,KAAK,CAACW,YAAY,IAAIX,KAAK,CAACiF,gBAAgB,EAC9C;MACF,IAAI,CAACjF,KAAK,CAACW,YAAY,KAAKX,KAAK,CAACmE,aAAa,IAAIhB,IAAI,CAACxB,MAAM,CAAC,EAAE;QAC/D,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAEE,IAAI,CAAC,EAAE;UACvC,IAAMoD,MAAM,GAAG,CAACJ,EAAE,GAAGxE,MAAM,CAACQ,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGgE,EAAE,CAAC/B,OAAO,CAACoC,GAAG,CAACvD,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC,CAAC;UACrG,CAACiD,EAAE,GAAGzE,MAAM,CAACQ,KAAK,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGiE,EAAE,CAACK,kBAAkB,CAACF,MAAM,CAAC;QAC9E;MACA,CAAO,MAAM,IAAIlF,KAAK,CAACkE,iBAAiB,EAAE;QAClCW,CAAC,CAACQ,KAAK,CAACC,qBAAqB,EAAE;MACvC;IACA,CAAK;IACDC,OAAO,EAAE,SAAAA,QAACzD,IAAI,EAAE0D,MAAM,EAAK;MACzB,IAAI,CAACxF,KAAK,CAACW,YAAY,EACrB;MACF,IAAM8E,SAAS,GAAG7D,gBAAgB,CAAC,OAAO,EAAEE,IAAI,CAAC;MACjD,IAAM4D,mBAAmB,GAAGF,MAAM,CAACG,WAAW;MAC9C,IAAMC,UAAU,GAAG5F,KAAK,CAAC6F,QAAQ,GAAG5E,YAAY,CAACjB,KAAK,CAACU,UAAU,CAAC,CAAC+B,MAAM,CAAC,UAACC,IAAI;QAAA,OAAKA,IAAI,IAAIa,eAAe,CAACzC,KAAK,IAAI,CAACP,IAAI,CAACO,KAAK,CAACoB,OAAO,CAACQ,IAAI,CAAC,IAAI,CAACgD,mBAAmB,CAACf,QAAQ,CAACjC,IAAI,CAAC;MAAA,EAAC,GAAG,EAAE;MAC3L,IAAMiD,WAAW,GAAGD,mBAAmB,CAACzC,MAAM,CAAC2C,UAAU,CAAC;MAC1D,IAAI5F,KAAK,CAACmE,aAAa,EAAE;QACvB9D,IAAI,CAACyF,kBAAkB,EAAE9F,KAAK,CAAC6F,QAAQ,GAAGF,WAAW,GAAGA,WAAW,CAAChB,QAAQ,CAACc,SAAS,CAAC,GAAGA,SAAS,GAAG,KAAK,CAAC,CAAC;MACrH,CAAO,MAAM;QACL,IAAIzF,KAAK,CAAC6F,QAAQ,EAAE;UAClBxF,IAAI,CAACyF,kBAAkB,EAAEvF,IAAI,CAACO,KAAK,CAACE,cAAc,CAAC,IAAI,CAAC,CAAC;QACnE,CAAS,MAAM;UACL,IAAM+E,SAAS,GAAG1D,QAAQ,CAAC,CAACP,IAAI,CAAC,EAAE,UAACkE,KAAK;YAAA,OAAK,CAACC,YAAY,CAACrE,gBAAgB,CAAC,UAAU,EAAEoE,KAAK,CAAC,CAAC,IAAI,CAACpE,gBAAgB,CAAC,UAAU,EAAEoE,KAAK,CAAC;UAAA,GAAE,UAACA,KAAK;YAAA,OAAKpE,gBAAgB,CAAC,UAAU,EAAEoE,KAAK,CAAC;UAAA,EAAC;UACzL,IAAME,YAAY,GAAGH,SAAS,GAAGnE,gBAAgB,CAAC,OAAO,EAAEmE,SAAS,CAAC,GAAG,KAAK,CAAC;UAC9E,IAAMI,eAAe,GAAGxD,YAAY,CAAC3C,KAAK,CAACU,UAAU,CAAC,IAAI,CAAC,CAAC2B,QAAQ,CAAC,CAACP,IAAI,CAAC,EAAE,UAACkE,KAAK;YAAA,OAAKpE,gBAAgB,CAAC,OAAO,EAAEoE,KAAK,CAAC,KAAKhG,KAAK,CAACU,UAAU;UAAA,GAAE,UAACsF,KAAK;YAAA,OAAKpE,gBAAgB,CAAC,UAAU,EAAEoE,KAAK,CAAC;UAAA,EAAC;UAC9L3F,IAAI,CAACyF,kBAAkB,EAAEI,YAAY,KAAKlG,KAAK,CAACU,UAAU,IAAIyF,eAAe,GAAG,KAAK,CAAC,GAAGD,YAAY,CAAC;QAChH;MACA;MACMtF,QAAQ,CAAC,YAAM;QACb,IAAImB,EAAE;QACN,IAAMqE,YAAY,GAAGnF,YAAY,CAACjB,KAAK,CAACU,UAAU,CAAC;QACnDH,IAAI,CAACO,KAAK,CAACI,cAAc,CAACkF,YAAY,CAAC;QACvC,CAACrE,EAAE,GAAG5B,KAAK,CAACoF,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGxD,EAAE,CAACiD,IAAI,CAAC7E,KAAK,EAAE2B,IAAI,EAAE;UAC3D6D,WAAW,EAAEpF,IAAI,CAACO,KAAK,CAACE,cAAc,EAAE;UACxCqF,YAAY,EAAE9F,IAAI,CAACO,KAAK,CAACwF,eAAe,EAAE;UAC1CC,eAAe,EAAEhG,IAAI,CAACO,KAAK,CAAC0F,kBAAkB,EAAE;UAChDC,gBAAgB,EAAElG,IAAI,CAACO,KAAK,CAAC4F,mBAAmB;QAC1D,CAAS,CAAC;MACV,CAAO,CAAC;IACR,CAAK;IACD9D,YAAY,EAAZA;EAAY;AAEhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}