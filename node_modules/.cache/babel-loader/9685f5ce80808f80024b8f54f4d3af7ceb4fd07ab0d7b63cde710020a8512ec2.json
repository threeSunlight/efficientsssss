{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, shallowRef, openBlock, createElementBlock, normalizeClass, unref, withKeys, withModifiers, createBlock, withCtx, renderSlot, createElementVNode } from 'vue';\nimport { isObject } from '@vue/shared';\nimport { cloneDeep, isEqual } from 'lodash-unified';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../form/index.mjs';\nimport UploadDragger from './upload-dragger2.mjs';\nimport { uploadContentProps } from './upload-content.mjs';\nimport { genFileId } from './upload.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nimport { entriesOf } from '../../../utils/objects.mjs';\nvar _hoisted_1 = [\"onKeydown\"];\nvar _hoisted_2 = [\"name\", \"multiple\", \"accept\"];\nvar __default__ = defineComponent({\n  name: \"ElUploadContent\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: uploadContentProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"upload\");\n    var disabled = useFormDisabled();\n    var requests = shallowRef({});\n    var inputRef = shallowRef();\n    var uploadFiles = function uploadFiles(files) {\n      if (files.length === 0) return;\n      var autoUpload = props.autoUpload,\n        limit = props.limit,\n        fileList = props.fileList,\n        multiple = props.multiple,\n        onStart = props.onStart,\n        onExceed = props.onExceed;\n      if (limit && fileList.length + files.length > limit) {\n        onExceed(files, fileList);\n        return;\n      }\n      if (!multiple) {\n        files = files.slice(0, 1);\n      }\n      var _iterator = _createForOfIteratorHelper(files),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var file = _step.value;\n          var rawFile = file;\n          rawFile.uid = genFileId();\n          onStart(rawFile);\n          if (autoUpload) upload(rawFile);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    };\n    var upload = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(rawFile) {\n        var hookResult, beforeData, originData, beforeUploadPromise, file;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              inputRef.value.value = \"\";\n              if (props.beforeUpload) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\", doUpload(rawFile));\n            case 3:\n              beforeData = {};\n              _context.prev = 4;\n              originData = props.data;\n              beforeUploadPromise = props.beforeUpload(rawFile);\n              beforeData = isObject(props.data) ? cloneDeep(props.data) : props.data;\n              _context.next = 10;\n              return beforeUploadPromise;\n            case 10:\n              hookResult = _context.sent;\n              if (isObject(props.data) && isEqual(originData, beforeData)) {\n                beforeData = cloneDeep(props.data);\n              }\n              _context.next = 17;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](4);\n              hookResult = false;\n            case 17:\n              if (!(hookResult === false)) {\n                _context.next = 20;\n                break;\n              }\n              props.onRemove(rawFile);\n              return _context.abrupt(\"return\");\n            case 20:\n              file = rawFile;\n              if (hookResult instanceof Blob) {\n                if (hookResult instanceof File) {\n                  file = hookResult;\n                } else {\n                  file = new File([hookResult], rawFile.name, {\n                    type: rawFile.type\n                  });\n                }\n              }\n              doUpload(Object.assign(file, {\n                uid: rawFile.uid\n              }), beforeData);\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 14]]);\n      }));\n      return function upload(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    var doUpload = function doUpload(rawFile, beforeData) {\n      var headers = props.headers,\n        data = props.data,\n        method = props.method,\n        withCredentials = props.withCredentials,\n        filename = props.name,\n        action = props.action,\n        _onProgress = props.onProgress,\n        _onSuccess = props.onSuccess,\n        _onError = props.onError,\n        httpRequest = props.httpRequest;\n      var uid = rawFile.uid;\n      var options = {\n        headers: headers || {},\n        withCredentials: withCredentials,\n        file: rawFile,\n        data: beforeData != null ? beforeData : data,\n        method: method,\n        filename: filename,\n        action: action,\n        onProgress: function onProgress(evt) {\n          _onProgress(evt, rawFile);\n        },\n        onSuccess: function onSuccess(res) {\n          _onSuccess(res, rawFile);\n          delete requests.value[uid];\n        },\n        onError: function onError(err) {\n          _onError(err, rawFile);\n          delete requests.value[uid];\n        }\n      };\n      var request = httpRequest(options);\n      requests.value[uid] = request;\n      if (request instanceof Promise) {\n        request.then(options.onSuccess, options.onError);\n      }\n    };\n    var handleChange = function handleChange(e) {\n      var files = e.target.files;\n      if (!files) return;\n      uploadFiles(Array.from(files));\n    };\n    var handleClick = function handleClick() {\n      if (!disabled.value) {\n        inputRef.value.value = \"\";\n        inputRef.value.click();\n      }\n    };\n    var handleKeydown = function handleKeydown() {\n      handleClick();\n    };\n    var abort = function abort(file) {\n      var _reqs = entriesOf(requests.value).filter(file ? function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n          uid = _ref4[0];\n        return String(file.uid) === uid;\n      } : function () {\n        return true;\n      });\n      _reqs.forEach(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          uid = _ref6[0],\n          req = _ref6[1];\n        if (req instanceof XMLHttpRequest) req.abort();\n        delete requests.value[uid];\n      });\n    };\n    expose({\n      abort: abort,\n      upload: upload\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([unref(ns).b(), unref(ns).m(_ctx.listType), unref(ns).is(\"drag\", _ctx.drag)]),\n        tabindex: \"0\",\n        onClick: handleClick,\n        onKeydown: withKeys(withModifiers(handleKeydown, [\"self\"]), [\"enter\", \"space\"])\n      }, [_ctx.drag ? (openBlock(), createBlock(UploadDragger, {\n        key: 0,\n        disabled: unref(disabled),\n        onFile: uploadFiles\n      }, {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"disabled\"])) : renderSlot(_ctx.$slots, \"default\", {\n        key: 1\n      }), createElementVNode(\"input\", {\n        ref_key: \"inputRef\",\n        ref: inputRef,\n        \"class\": normalizeClass(unref(ns).e(\"input\")),\n        name: _ctx.name,\n        multiple: _ctx.multiple,\n        accept: _ctx.accept,\n        type: \"file\",\n        onChange: handleChange,\n        onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"]))\n      }, null, 42, _hoisted_2)], 42, _hoisted_1);\n    };\n  }\n}));\nvar UploadContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-content.vue\"]]);\nexport { UploadContent as default };","map":{"version":3,"names":["name","inheritAttrs","ns","useNamespace","disabled","useFormDisabled","requests","shallowRef","inputRef","uploadFiles","files","length","autoUpload","props","limit","fileList","multiple","onStart","onExceed","slice","_iterator","_createForOfIteratorHelper","_step","s","n","done","file","value","rawFile","uid","genFileId","upload","err","e","f","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hookResult","beforeData","originData","beforeUploadPromise","wrap","_callee$","_context","prev","next","beforeUpload","abrupt","doUpload","data","isObject","cloneDeep","sent","isEqual","t0","onRemove","Blob","File","type","Object","assign","stop","_x","apply","arguments","headers","method","withCredentials","filename","action","onProgress","onSuccess","onError","httpRequest","options","evt","res","request","Promise","then","handleChange","target","Array","from","handleClick","click","handleKeydown","abort","_reqs","entriesOf","filter","_ref3","_ref4","_slicedToArray","String","forEach","_ref5","_ref6","req","XMLHttpRequest","expose"],"sources":["../../../../../../packages/components/upload/src/upload-content.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b(), ns.m(listType), ns.is('drag', drag)]\"\n    tabindex=\"0\"\n    @click=\"handleClick\"\n    @keydown.self.enter.space=\"handleKeydown\"\n  >\n    <template v-if=\"drag\">\n      <upload-dragger :disabled=\"disabled\" @file=\"uploadFiles\">\n        <slot />\n      </upload-dragger>\n    </template>\n    <template v-else>\n      <slot />\n    </template>\n    <input\n      ref=\"inputRef\"\n      :class=\"ns.e('input')\"\n      :name=\"name\"\n      :multiple=\"multiple\"\n      :accept=\"accept\"\n      type=\"file\"\n      @change=\"handleChange\"\n      @click.stop\n    />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { shallowRef } from 'vue'\nimport { isObject } from '@vue/shared'\nimport { cloneDeep, isEqual } from 'lodash-unified'\nimport { useNamespace } from '@element-plus/hooks'\nimport { entriesOf } from '@element-plus/utils'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport UploadDragger from './upload-dragger.vue'\nimport { uploadContentProps } from './upload-content'\nimport { genFileId } from './upload'\nimport type { UploadContentProps } from './upload-content'\n\nimport type {\n  UploadFile,\n  UploadHooks,\n  UploadRawFile,\n  UploadRequestOptions,\n} from './upload'\n\ndefineOptions({\n  name: 'ElUploadContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(uploadContentProps)\nconst ns = useNamespace('upload')\nconst disabled = useFormDisabled()\n\nconst requests = shallowRef<Record<string, XMLHttpRequest | Promise<unknown>>>(\n  {}\n)\nconst inputRef = shallowRef<HTMLInputElement>()\n\nconst uploadFiles = (files: File[]) => {\n  if (files.length === 0) return\n\n  const { autoUpload, limit, fileList, multiple, onStart, onExceed } = props\n\n  if (limit && fileList.length + files.length > limit) {\n    onExceed(files, fileList)\n    return\n  }\n\n  if (!multiple) {\n    files = files.slice(0, 1)\n  }\n\n  for (const file of files) {\n    const rawFile = file as UploadRawFile\n    rawFile.uid = genFileId()\n    onStart(rawFile)\n    if (autoUpload) upload(rawFile)\n  }\n}\n\nconst upload = async (rawFile: UploadRawFile) => {\n  inputRef.value!.value = ''\n\n  if (!props.beforeUpload) {\n    return doUpload(rawFile)\n  }\n\n  let hookResult: Exclude<ReturnType<UploadHooks['beforeUpload']>, Promise<any>>\n  let beforeData: UploadContentProps['data'] = {}\n\n  try {\n    // origin data: Handle data changes after synchronization tasks are executed\n    const originData = props.data\n    const beforeUploadPromise = props.beforeUpload(rawFile)\n    beforeData = isObject(props.data) ? cloneDeep(props.data) : props.data\n    hookResult = await beforeUploadPromise\n    if (isObject(props.data) && isEqual(originData, beforeData)) {\n      beforeData = cloneDeep(props.data)\n    }\n  } catch {\n    hookResult = false\n  }\n\n  if (hookResult === false) {\n    props.onRemove(rawFile)\n    return\n  }\n\n  let file: File = rawFile\n  if (hookResult instanceof Blob) {\n    if (hookResult instanceof File) {\n      file = hookResult\n    } else {\n      file = new File([hookResult], rawFile.name, {\n        type: rawFile.type,\n      })\n    }\n  }\n\n  doUpload(\n    Object.assign(file, {\n      uid: rawFile.uid,\n    }),\n    beforeData\n  )\n}\n\nconst doUpload = (\n  rawFile: UploadRawFile,\n  beforeData?: UploadContentProps['data']\n) => {\n  const {\n    headers,\n    data,\n    method,\n    withCredentials,\n    name: filename,\n    action,\n    onProgress,\n    onSuccess,\n    onError,\n    httpRequest,\n  } = props\n\n  const { uid } = rawFile\n  const options: UploadRequestOptions = {\n    headers: headers || {},\n    withCredentials,\n    file: rawFile,\n    data: beforeData ?? data,\n    method,\n    filename,\n    action,\n    onProgress: (evt) => {\n      onProgress(evt, rawFile)\n    },\n    onSuccess: (res) => {\n      onSuccess(res, rawFile)\n      delete requests.value[uid]\n    },\n    onError: (err) => {\n      onError(err, rawFile)\n      delete requests.value[uid]\n    },\n  }\n  const request = httpRequest(options)\n  requests.value[uid] = request\n  if (request instanceof Promise) {\n    request.then(options.onSuccess, options.onError)\n  }\n}\n\nconst handleChange = (e: Event) => {\n  const files = (e.target as HTMLInputElement).files\n  if (!files) return\n  uploadFiles(Array.from(files))\n}\n\nconst handleClick = () => {\n  if (!disabled.value) {\n    inputRef.value!.value = ''\n    inputRef.value!.click()\n  }\n}\n\nconst handleKeydown = () => {\n  handleClick()\n}\n\nconst abort = (file?: UploadFile) => {\n  const _reqs = entriesOf(requests.value).filter(\n    file ? ([uid]) => String(file.uid) === uid : () => true\n  )\n  _reqs.forEach(([uid, req]) => {\n    if (req instanceof XMLHttpRequest) req.abort()\n    delete requests.value[uid]\n  })\n}\n\ndefineExpose({\n  abort,\n  upload,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}