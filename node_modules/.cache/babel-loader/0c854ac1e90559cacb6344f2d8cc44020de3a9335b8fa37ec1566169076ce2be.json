{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, computed, openBlock, createElementBlock, unref, toDisplayString, createBlock, withCtx, resolveDynamicComponent } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { paginationPrevProps, paginationPrevEmits } from './prev.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nvar _hoisted_1 = [\"disabled\", \"aria-label\", \"aria-disabled\"];\nvar _hoisted_2 = {\n  key: 0\n};\nvar __default__ = defineComponent({\n  name: \"ElPaginationPrev\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: paginationPrevProps,\n  emits: paginationPrevEmits,\n  setup: function setup(__props) {\n    var props = __props;\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var internalDisabled = computed(function () {\n      return props.disabled || props.currentPage <= 1;\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"button\", {\n        type: \"button\",\n        \"class\": \"btn-prev\",\n        disabled: unref(internalDisabled),\n        \"aria-label\": _ctx.prevText || unref(t)(\"el.pagination.prev\"),\n        \"aria-disabled\": unref(internalDisabled),\n        onClick: _cache[0] || (_cache[0] = function ($event) {\n          return _ctx.$emit(\"click\", $event);\n        })\n      }, [_ctx.prevText ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(_ctx.prevText), 1)) : (openBlock(), createBlock(unref(ElIcon), {\n        key: 1\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.prevIcon)))];\n        }),\n        _: 1\n      }))], 8, _hoisted_1);\n    };\n  }\n}));\nvar Prev = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/prev.vue\"]]);\nexport { Prev as default };","map":{"version":3,"names":["name","_useLocale","useLocale","t","internalDisabled","computed","props","disabled","currentPage"],"sources":["../../../../../../../packages/components/pagination/src/components/prev.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\"\n    class=\"btn-prev\"\n    :disabled=\"internalDisabled\"\n    :aria-label=\"prevText || t('el.pagination.prev')\"\n    :aria-disabled=\"internalDisabled\"\n    @click=\"$emit('click', $event)\"\n  >\n    <span v-if=\"prevText\">{{ prevText }}</span>\n    <el-icon v-else>\n      <component :is=\"prevIcon\" />\n    </el-icon>\n  </button>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useLocale } from '@element-plus/hooks'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { paginationPrevEmits, paginationPrevProps } from './prev'\n\ndefineOptions({\n  name: 'ElPaginationPrev',\n})\n\nconst props = defineProps(paginationPrevProps)\ndefineEmits(paginationPrevEmits)\n\nconst { t } = useLocale()\n\nconst internalDisabled = computed(\n  () => props.disabled || props.currentPage <= 1\n)\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;iCAsBc;EACZA,IAAM;AACR;;;;;;IAKM,IAAAC,UAAA,GAAQC,SAAU;MAAhBC,CAAA,GAAAF,UAAA,CAAAE,CAAA;IAER,IAAMC,gBAAA,GAAmBC,QACvB;MAAA,OAAMC,KAAA,CAAMC,QAAY,IAAAD,KAAA,CAAME,WAAA,IAAe,CAC/C;IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}