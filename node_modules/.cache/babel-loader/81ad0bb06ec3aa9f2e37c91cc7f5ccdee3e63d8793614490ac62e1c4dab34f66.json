{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isVNode, createVNode, render } from 'vue';\nimport '../../../utils/index.mjs';\nimport NotificationConstructor from './notification2.mjs';\nimport { notificationTypes } from './notification.mjs';\nimport { isClient } from '@vueuse/core';\nimport { isElement } from '../../../utils/types.mjs';\nimport { isString } from '@vue/shared';\nimport { debugWarn } from '../../../utils/error.mjs';\nvar notifications = {\n  \"top-left\": [],\n  \"top-right\": [],\n  \"bottom-left\": [],\n  \"bottom-right\": []\n};\nvar GAP_SIZE = 16;\nvar seed = 1;\nvar notify = function notify() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (!isClient) return {\n    close: function close() {\n      return void 0;\n    }\n  };\n  if (typeof options === \"string\" || isVNode(options)) {\n    options = {\n      message: options\n    };\n  }\n  var position = options.position || \"top-right\";\n  var verticalOffset = options.offset || 0;\n  notifications[position].forEach(function (_ref) {\n    var vm2 = _ref.vm;\n    var _a;\n    verticalOffset += (((_a = vm2.el) == null ? void 0 : _a.offsetHeight) || 0) + GAP_SIZE;\n  });\n  verticalOffset += GAP_SIZE;\n  var id = \"notification_\".concat(seed++);\n  var userOnClose = options.onClose;\n  var props = _objectSpread(_objectSpread({}, options), {}, {\n    offset: verticalOffset,\n    id: id,\n    onClose: function onClose() {\n      close(id, position, userOnClose);\n    }\n  });\n  var appendTo = document.body;\n  if (isElement(options.appendTo)) {\n    appendTo = options.appendTo;\n  } else if (isString(options.appendTo)) {\n    appendTo = document.querySelector(options.appendTo);\n  }\n  if (!isElement(appendTo)) {\n    debugWarn(\"ElNotification\", \"the appendTo option is not an HTMLElement. Falling back to document.body.\");\n    appendTo = document.body;\n  }\n  var container = document.createElement(\"div\");\n  var vm = createVNode(NotificationConstructor, props, isVNode(props.message) ? {\n    \"default\": function _default() {\n      return props.message;\n    }\n  } : null);\n  vm.appContext = context != null ? context : notify._context;\n  vm.props.onDestroy = function () {\n    render(null, container);\n  };\n  render(vm, container);\n  notifications[position].push({\n    vm: vm\n  });\n  appendTo.appendChild(container.firstElementChild);\n  return {\n    close: function close() {\n      ;\n      vm.component.exposed.visible.value = false;\n    }\n  };\n};\nnotificationTypes.forEach(function (type) {\n  notify[type] = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof options === \"string\" || isVNode(options)) {\n      options = {\n        message: options\n      };\n    }\n    return notify(_objectSpread(_objectSpread({}, options), {}, {\n      type: type\n    }));\n  };\n});\nfunction close(id, position, userOnClose) {\n  var orientedNotifications = notifications[position];\n  var idx = orientedNotifications.findIndex(function (_ref2) {\n    var vm2 = _ref2.vm;\n    var _a;\n    return ((_a = vm2.component) == null ? void 0 : _a.props.id) === id;\n  });\n  if (idx === -1) return;\n  var vm = orientedNotifications[idx].vm;\n  if (!vm) return;\n  userOnClose == null ? void 0 : userOnClose(vm);\n  var removedHeight = vm.el.offsetHeight;\n  var verticalPos = position.split(\"-\")[0];\n  orientedNotifications.splice(idx, 1);\n  var len = orientedNotifications.length;\n  if (len < 1) return;\n  for (var i = idx; i < len; i++) {\n    var _orientedNotification = orientedNotifications[i].vm,\n      el = _orientedNotification.el,\n      component = _orientedNotification.component;\n    var pos = Number.parseInt(el.style[verticalPos], 10) - removedHeight - GAP_SIZE;\n    component.props.offset = pos;\n  }\n}\nfunction closeAll() {\n  for (var _i = 0, _Object$values = Object.values(notifications); _i < _Object$values.length; _i++) {\n    var orientedNotifications = _Object$values[_i];\n    orientedNotifications.forEach(function (_ref3) {\n      var vm = _ref3.vm;\n      ;\n      vm.component.exposed.visible.value = false;\n    });\n  }\n}\nnotify.closeAll = closeAll;\nnotify._context = null;\nexport { close, closeAll, notify as default };","map":{"version":3,"names":["notifications","GAP_SIZE","seed","notify","options","arguments","length","undefined","context","isClient","close","isVNode","message","position","verticalOffset","offset","forEach","_ref","vm2","vm","_a","el","offsetHeight","id","concat","userOnClose","onClose","props","_objectSpread","appendTo","document","body","isElement","isString","querySelector","debugWarn","container","createElement","createVNode","NotificationConstructor","_default","appContext","_context","onDestroy","render","push","appendChild","firstElementChild","component","exposed","visible","value","notificationTypes","type","orientedNotifications","idx","findIndex","_ref2","removedHeight","verticalPos","split","splice","len","i","_orientedNotification","pos","Number","parseInt","style","closeAll","_i","_Object$values","Object","values","_ref3"],"sources":["../../../../../../packages/components/notification/src/notify.ts"],"sourcesContent":["import { createVNode, render } from 'vue'\nimport {\n  debugWarn,\n  isClient,\n  isElement,\n  isString,\n  isVNode,\n} from '@element-plus/utils'\nimport NotificationConstructor from './notification.vue'\nimport { notificationTypes } from './notification'\n\nimport type { AppContext, Ref, VNode } from 'vue'\nimport type {\n  NotificationOptions,\n  NotificationProps,\n  NotificationQueue,\n  Notify,\n  NotifyFn,\n} from './notification'\n\n// This should be a queue but considering there were `non-autoclosable` notifications.\nconst notifications: Record<\n  NotificationOptions['position'],\n  NotificationQueue\n> = {\n  'top-left': [],\n  'top-right': [],\n  'bottom-left': [],\n  'bottom-right': [],\n}\n\n// the gap size between each notification\nconst GAP_SIZE = 16\nlet seed = 1\n\nconst notify: NotifyFn & Partial<Notify> & { _context: AppContext | null } =\n  function (options = {}, context: AppContext | null = null) {\n    if (!isClient) return { close: () => undefined }\n\n    if (typeof options === 'string' || isVNode(options)) {\n      options = { message: options }\n    }\n\n    const position = options.position || 'top-right'\n\n    let verticalOffset = options.offset || 0\n    notifications[position].forEach(({ vm }) => {\n      verticalOffset += (vm.el?.offsetHeight || 0) + GAP_SIZE\n    })\n    verticalOffset += GAP_SIZE\n\n    const id = `notification_${seed++}`\n    const userOnClose = options.onClose\n    const props: Partial<NotificationProps> = {\n      ...options,\n      offset: verticalOffset,\n      id,\n      onClose: () => {\n        close(id, position, userOnClose)\n      },\n    }\n\n    let appendTo: HTMLElement | null = document.body\n    if (isElement(options.appendTo)) {\n      appendTo = options.appendTo\n    } else if (isString(options.appendTo)) {\n      appendTo = document.querySelector(options.appendTo)\n    }\n\n    // should fallback to default value with a warning\n    if (!isElement(appendTo)) {\n      debugWarn(\n        'ElNotification',\n        'the appendTo option is not an HTMLElement. Falling back to document.body.'\n      )\n      appendTo = document.body\n    }\n\n    const container = document.createElement('div')\n\n    const vm = createVNode(\n      NotificationConstructor,\n      props,\n      isVNode(props.message)\n        ? {\n            default: () => props.message,\n          }\n        : null\n    )\n    vm.appContext = context ?? notify._context\n\n    // clean notification element preventing mem leak\n    vm.props!.onDestroy = () => {\n      render(null, container)\n    }\n\n    // instances will remove this item when close function gets called. So we do not need to worry about it.\n    render(vm, container)\n    notifications[position].push({ vm })\n    appendTo.appendChild(container.firstElementChild!)\n\n    return {\n      // instead of calling the onClose function directly, setting this value so that we can have the full lifecycle\n      // for out component, so that all closing steps will not be skipped.\n      close: () => {\n        ;(vm.component!.exposed as { visible: Ref<boolean> }).visible.value =\n          false\n      },\n    }\n  }\nnotificationTypes.forEach((type) => {\n  notify[type] = (options = {}) => {\n    if (typeof options === 'string' || isVNode(options)) {\n      options = {\n        message: options,\n      }\n    }\n    return notify({\n      ...options,\n      type,\n    })\n  }\n})\n\n/**\n * This function gets called when user click `x` button or press `esc` or the time reached its limitation.\n * Emitted by transition@before-leave event so that we can fetch the current notification.offsetHeight, if this was called\n * by @after-leave the DOM element will be removed from the page thus we can no longer fetch the offsetHeight.\n * @param {String} id notification id to be closed\n * @param {Position} position the positioning strategy\n * @param {Function} userOnClose the callback called when close passed by user\n */\nexport function close(\n  id: string,\n  position: NotificationOptions['position'],\n  userOnClose?: (vm: VNode) => void\n): void {\n  // maybe we can store the index when inserting the vm to notification list.\n  const orientedNotifications = notifications[position]\n  const idx = orientedNotifications.findIndex(\n    ({ vm }) => vm.component?.props.id === id\n  )\n  if (idx === -1) return\n  const { vm } = orientedNotifications[idx]\n  if (!vm) return\n  // calling user's on close function before notification gets removed from DOM.\n  userOnClose?.(vm)\n\n  // note that this is called @before-leave, that's why we were able to fetch this property.\n  const removedHeight = vm.el!.offsetHeight\n  const verticalPos = position.split('-')[0]\n  orientedNotifications.splice(idx, 1)\n  const len = orientedNotifications.length\n  if (len < 1) return\n  // starting from the removing item.\n  for (let i = idx; i < len; i++) {\n    // new position equals the current offsetTop minus removed height plus 16px(the gap size between each item)\n    const { el, component } = orientedNotifications[i].vm\n    const pos =\n      Number.parseInt(el!.style[verticalPos], 10) - removedHeight - GAP_SIZE\n    component!.props.offset = pos\n  }\n}\n\nexport function closeAll(): void {\n  // loop through all directions, close them at once.\n  for (const orientedNotifications of Object.values(notifications)) {\n    orientedNotifications.forEach(({ vm }) => {\n      // same as the previous close method, we'd like to make sure lifecycle gets handle properly.\n      ;(vm.component!.exposed as { visible: Ref<boolean> }).visible.value =\n        false\n    })\n  }\n}\n\nnotify.closeAll = closeAll\nnotify._context = null\n\nexport default notify as Notify\n"],"mappings":";;;;;;;;;;;;;;AAUA,IAAMA,aAAa,GAAG;EACpB,UAAU,EAAE,EAAE;EACd,WAAW,EAAE,EAAE;EACf,aAAa,EAAE,EAAE;EACjB,cAAc,EAAE;AAClB,CAAC;AACD,IAAMC,QAAQ,GAAG,EAAE;AACnB,IAAIC,IAAI,GAAG,CAAC;AACP,IAACC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAA0C;EAAA,IAA9BC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAClD,IAAI,CAACI,QAAQ,EACX,OAAO;IAAEC,KAAK,EAAE,SAAAA,MAAA;MAAA,OAAM,KAAK,CAAC;IAAA;EAAA,CAAE;EAChC,IAAI,OAAON,OAAO,KAAK,QAAQ,IAAIO,OAAO,CAACP,OAAO,CAAC,EAAE;IACnDA,OAAO,GAAG;MAAEQ,OAAO,EAAER;IAAO,CAAE;EAClC;EACE,IAAMS,QAAQ,GAAGT,OAAO,CAACS,QAAQ,IAAI,WAAW;EAChD,IAAIC,cAAc,GAAGV,OAAO,CAACW,MAAM,IAAI,CAAC;EACxCf,aAAa,CAACa,QAAQ,CAAC,CAACG,OAAO,CAAC,UAAAC,IAAA,EAAiB;IAAA,IAAVC,GAAG,GAAAD,IAAA,CAAPE,EAAE;IACnC,IAAIC,EAAE;IACNN,cAAc,IAAI,CAAC,CAAC,CAACM,EAAE,GAAGF,GAAG,CAACG,EAAE,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,EAAE,CAACE,YAAY,KAAK,CAAC,IAAIrB,QAAQ;EAC1F,CAAG,CAAC;EACFa,cAAc,IAAIb,QAAQ;EAC1B,IAAMsB,EAAE,mBAAAC,MAAA,CAAmBtB,IAAI,EAAE,CAAE;EACnC,IAAMuB,WAAW,GAAGrB,OAAO,CAACsB,OAAO;EACnC,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KACNxB,OAAO;IACVW,MAAM,EAAED,cAAc;IACtBS,EAAE,EAAFA,EAAE;IACFG,OAAO,EAAE,SAAAA,QAAA,EAAM;MACbhB,KAAK,CAACa,EAAE,EAAEV,QAAQ,EAAEY,WAAW,CAAC;IACtC;EAAK,EACF;EACD,IAAII,QAAQ,GAAGC,QAAQ,CAACC,IAAI;EAC5B,IAAIC,SAAS,CAAC5B,OAAO,CAACyB,QAAQ,CAAC,EAAE;IAC/BA,QAAQ,GAAGzB,OAAO,CAACyB,QAAQ;EAC/B,CAAG,MAAM,IAAII,QAAQ,CAAC7B,OAAO,CAACyB,QAAQ,CAAC,EAAE;IACrCA,QAAQ,GAAGC,QAAQ,CAACI,aAAa,CAAC9B,OAAO,CAACyB,QAAQ,CAAC;EACvD;EACE,IAAI,CAACG,SAAS,CAACH,QAAQ,CAAC,EAAE;IACxBM,SAAS,CAAC,gBAAgB,EAAE,2EAA2E,CAAC;IACxGN,QAAQ,GAAGC,QAAQ,CAACC,IAAI;EAC5B;EACE,IAAMK,SAAS,GAAGN,QAAQ,CAACO,aAAa,CAAC,KAAK,CAAC;EAC/C,IAAMlB,EAAE,GAAGmB,WAAW,CAACC,uBAAuB,EAAEZ,KAAK,EAAEhB,OAAO,CAACgB,KAAK,CAACf,OAAO,CAAC,GAAG;IAC9E,WAAS,SAAA4B,SAAA;MAAA,OAAMb,KAAK,CAACf,OAAO;IAAA;EAChC,CAAG,GAAG,IAAI,CAAC;EACTO,EAAE,CAACsB,UAAU,GAAGjC,OAAO,IAAI,IAAI,GAAGA,OAAO,GAAGL,MAAM,CAACuC,QAAQ;EAC3DvB,EAAE,CAACQ,KAAK,CAACgB,SAAS,GAAG,YAAM;IACzBC,MAAM,CAAC,IAAI,EAAER,SAAS,CAAC;EAC3B,CAAG;EACDQ,MAAM,CAACzB,EAAE,EAAEiB,SAAS,CAAC;EACrBpC,aAAa,CAACa,QAAQ,CAAC,CAACgC,IAAI,CAAC;IAAE1B,EAAE,EAAFA;EAAE,CAAE,CAAC;EACpCU,QAAQ,CAACiB,WAAW,CAACV,SAAS,CAACW,iBAAiB,CAAC;EACjD,OAAO;IACLrC,KAAK,EAAE,SAAAA,MAAA,EAAM;MACX;MACAS,EAAE,CAAC6B,SAAS,CAACC,OAAO,CAACC,OAAO,CAACC,KAAK,GAAG,KAAK;IAChD;EACA,CAAG;AACH;AACAC,iBAAiB,CAACpC,OAAO,CAAC,UAACqC,IAAI,EAAK;EAClClD,MAAM,CAACkD,IAAI,CAAC,GAAG,YAAkB;IAAA,IAAjBjD,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAC1B,IAAI,OAAOD,OAAO,KAAK,QAAQ,IAAIO,OAAO,CAACP,OAAO,CAAC,EAAE;MACnDA,OAAO,GAAG;QACRQ,OAAO,EAAER;MACjB,CAAO;IACP;IACI,OAAOD,MAAM,CAAAyB,aAAA,CAAAA,aAAA,KACRxB,OAAO;MACViD,IAAI,EAAJA;IAAI,EACL,CAAC;EACN,CAAG;AACH,CAAC,CAAC;AACK,SAAS3C,KAAKA,CAACa,EAAE,EAAEV,QAAQ,EAAEY,WAAW,EAAE;EAC/C,IAAM6B,qBAAqB,GAAGtD,aAAa,CAACa,QAAQ,CAAC;EACrD,IAAM0C,GAAG,GAAGD,qBAAqB,CAACE,SAAS,CAAC,UAAAC,KAAA,EAAiB;IAAA,IAAVvC,GAAG,GAAAuC,KAAA,CAAPtC,EAAE;IAC/C,IAAIC,EAAE;IACN,OAAO,CAAC,CAACA,EAAE,GAAGF,GAAG,CAAC8B,SAAS,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG5B,EAAE,CAACO,KAAK,CAACJ,EAAE,MAAMA,EAAE;EACvE,CAAG,CAAC;EACF,IAAIgC,GAAG,KAAK,CAAC,CAAC,EACZ;EACF,IAAQpC,EAAE,GAAKmC,qBAAqB,CAACC,GAAG,CAAC,CAAjCpC,EAAE;EACV,IAAI,CAACA,EAAE,EACL;EACFM,WAAW,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,WAAW,CAACN,EAAE,CAAC;EAC9C,IAAMuC,aAAa,GAAGvC,EAAE,CAACE,EAAE,CAACC,YAAY;EACxC,IAAMqC,WAAW,GAAG9C,QAAQ,CAAC+C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC1CN,qBAAqB,CAACO,MAAM,CAACN,GAAG,EAAE,CAAC,CAAC;EACpC,IAAMO,GAAG,GAAGR,qBAAqB,CAAChD,MAAM;EACxC,IAAIwD,GAAG,GAAG,CAAC,EACT;EACF,KAAK,IAAIC,CAAC,GAAGR,GAAG,EAAEQ,CAAC,GAAGD,GAAG,EAAEC,CAAC,EAAE,EAAE;IAC9B,IAAAC,qBAAA,GAA0BV,qBAAqB,CAACS,CAAC,CAAC,CAAC5C,EAAE;MAA7CE,EAAE,GAAA2C,qBAAA,CAAF3C,EAAE;MAAE2B,SAAS,GAAAgB,qBAAA,CAAThB,SAAS;IACrB,IAAMiB,GAAG,GAAGC,MAAM,CAACC,QAAQ,CAAC9C,EAAE,CAAC+C,KAAK,CAACT,WAAW,CAAC,EAAE,EAAE,CAAC,GAAGD,aAAa,GAAGzD,QAAQ;IACjF+C,SAAS,CAACrB,KAAK,CAACZ,MAAM,GAAGkD,GAAG;EAChC;AACA;AACO,SAASI,QAAQA,CAAA,EAAG;EACzB,SAAAC,EAAA,MAAAC,cAAA,GAAoCC,MAAM,CAACC,MAAM,CAACzE,aAAa,CAAC,EAAAsE,EAAA,GAAAC,cAAA,CAAAjE,MAAA,EAAAgE,EAAA,IAAE;IAA7D,IAAMhB,qBAAqB,GAAAiB,cAAA,CAAAD,EAAA;IAC9BhB,qBAAqB,CAACtC,OAAO,CAAC,UAAA0D,KAAA,EAAY;MAAA,IAATvD,EAAE,GAAAuD,KAAA,CAAFvD,EAAE;MACjC;MACAA,EAAE,CAAC6B,SAAS,CAACC,OAAO,CAACC,OAAO,CAACC,KAAK,GAAG,KAAK;IAChD,CAAK,CAAC;EACN;AACA;AACAhD,MAAM,CAACkE,QAAQ,GAAGA,QAAQ;AAC1BlE,MAAM,CAACuC,QAAQ,GAAG,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}