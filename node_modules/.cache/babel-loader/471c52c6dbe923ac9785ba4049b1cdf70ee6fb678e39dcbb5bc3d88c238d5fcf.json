{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, ref, inject, computed, onBeforeUnmount, unref, watch, openBlock, createBlock, Teleport, createVNode, Transition, withCtx, withDirectives, mergeProps, renderSlot, createCommentVNode, vShow } from 'vue';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../popper/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './constants.mjs';\nimport { useTooltipContentProps } from './content.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { usePopperContainerId } from '../../../hooks/use-popper-container/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport ElPopperContent from '../../popper/src/content2.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltipContent\",\n  inheritAttrs: false\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: useTooltipContentProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var _usePopperContainerId = usePopperContainerId(),\n      selector = _usePopperContainerId.selector;\n    var ns = useNamespace(\"tooltip\");\n    var contentRef = ref(null);\n    var destroyed = ref(false);\n    var _inject = inject(TOOLTIP_INJECTION_KEY, void 0),\n      controlled = _inject.controlled,\n      id = _inject.id,\n      open = _inject.open,\n      trigger = _inject.trigger,\n      onClose = _inject.onClose,\n      onOpen = _inject.onOpen,\n      onShow = _inject.onShow,\n      onHide = _inject.onHide,\n      onBeforeShow = _inject.onBeforeShow,\n      onBeforeHide = _inject.onBeforeHide;\n    var transitionClass = computed(function () {\n      return props.transition || \"\".concat(ns.namespace.value, \"-fade-in-linear\");\n    });\n    var persistentRef = computed(function () {\n      if (process.env.NODE_ENV === \"test\") {\n        return true;\n      }\n      return props.persistent;\n    });\n    onBeforeUnmount(function () {\n      destroyed.value = true;\n    });\n    var shouldRender = computed(function () {\n      return unref(persistentRef) ? true : unref(open);\n    });\n    var shouldShow = computed(function () {\n      return props.disabled ? false : unref(open);\n    });\n    var appendTo = computed(function () {\n      return props.appendTo || selector.value;\n    });\n    var contentStyle = computed(function () {\n      var _a;\n      return (_a = props.style) != null ? _a : {};\n    });\n    var ariaHidden = computed(function () {\n      return !unref(open);\n    });\n    var onTransitionLeave = function onTransitionLeave() {\n      onHide();\n    };\n    var stopWhenControlled = function stopWhenControlled() {\n      if (unref(controlled)) return true;\n    };\n    var onContentEnter = composeEventHandlers(stopWhenControlled, function () {\n      if (props.enterable && unref(trigger) === \"hover\") {\n        onOpen();\n      }\n    });\n    var onContentLeave = composeEventHandlers(stopWhenControlled, function () {\n      if (unref(trigger) === \"hover\") {\n        onClose();\n      }\n    });\n    var onBeforeEnter = function onBeforeEnter() {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n      onBeforeShow == null ? void 0 : onBeforeShow();\n    };\n    var onBeforeLeave = function onBeforeLeave() {\n      onBeforeHide == null ? void 0 : onBeforeHide();\n    };\n    var onAfterShow = function onAfterShow() {\n      onShow();\n      stopHandle = onClickOutside(computed(function () {\n        var _a;\n        return (_a = contentRef.value) == null ? void 0 : _a.popperContentRef;\n      }), function () {\n        if (unref(controlled)) return;\n        var $trigger = unref(trigger);\n        if ($trigger !== \"hover\") {\n          onClose();\n        }\n      });\n    };\n    var onBlur = function onBlur() {\n      if (!props.virtualTriggering) {\n        onClose();\n      }\n    };\n    var stopHandle;\n    watch(function () {\n      return unref(open);\n    }, function (val) {\n      if (!val) {\n        stopHandle == null ? void 0 : stopHandle();\n      }\n    }, {\n      flush: \"post\"\n    });\n    watch(function () {\n      return props.content;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    expose({\n      contentRef: contentRef\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Teleport, {\n        disabled: !_ctx.teleported,\n        to: unref(appendTo)\n      }, [createVNode(Transition, {\n        name: unref(transitionClass),\n        onAfterLeave: onTransitionLeave,\n        onBeforeEnter: onBeforeEnter,\n        onAfterEnter: onAfterShow,\n        onBeforeLeave: onBeforeLeave\n      }, {\n        \"default\": withCtx(function () {\n          return [unref(shouldRender) ? withDirectives((openBlock(), createBlock(unref(ElPopperContent), mergeProps({\n            key: 0,\n            id: unref(id),\n            ref_key: \"contentRef\",\n            ref: contentRef\n          }, _ctx.$attrs, {\n            \"aria-label\": _ctx.ariaLabel,\n            \"aria-hidden\": unref(ariaHidden),\n            \"boundaries-padding\": _ctx.boundariesPadding,\n            \"fallback-placements\": _ctx.fallbackPlacements,\n            \"gpu-acceleration\": _ctx.gpuAcceleration,\n            offset: _ctx.offset,\n            placement: _ctx.placement,\n            \"popper-options\": _ctx.popperOptions,\n            strategy: _ctx.strategy,\n            effect: _ctx.effect,\n            enterable: _ctx.enterable,\n            pure: _ctx.pure,\n            \"popper-class\": _ctx.popperClass,\n            \"popper-style\": [_ctx.popperStyle, unref(contentStyle)],\n            \"reference-el\": _ctx.referenceEl,\n            \"trigger-target-el\": _ctx.triggerTargetEl,\n            visible: unref(shouldShow),\n            \"z-index\": _ctx.zIndex,\n            onMouseenter: unref(onContentEnter),\n            onMouseleave: unref(onContentLeave),\n            onBlur: onBlur,\n            onClose: unref(onClose)\n          }), {\n            \"default\": withCtx(function () {\n              return [!destroyed.value ? renderSlot(_ctx.$slots, \"default\", {\n                key: 0\n              }) : createCommentVNode(\"v-if\", true)];\n            }),\n            _: 3\n          }, 16, [\"id\", \"aria-label\", \"aria-hidden\", \"boundaries-padding\", \"fallback-placements\", \"gpu-acceleration\", \"offset\", \"placement\", \"popper-options\", \"strategy\", \"effect\", \"enterable\", \"pure\", \"popper-class\", \"popper-style\", \"reference-el\", \"trigger-target-el\", \"visible\", \"z-index\", \"onMouseenter\", \"onMouseleave\", \"onClose\"])), [[vShow, unref(shouldShow)]]) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"name\"])], 8, [\"disabled\", \"to\"]);\n    };\n  }\n}));\nvar ElTooltipContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/content.vue\"]]);\nexport { ElTooltipContent as default };","map":{"version":3,"names":["name","inheritAttrs","_usePopperContainerId","usePopperContainerId","selector","ns","useNamespace","contentRef","ref","destroyed","_inject","inject","TOOLTIP_INJECTION_KEY","controlled","id","open","trigger","onClose","onOpen","onShow","onHide","onBeforeShow","onBeforeHide","transitionClass","computed","props","transition","concat","namespace","value","persistentRef","process","env","NODE_ENV","persistent","onBeforeUnmount","shouldRender","unref","shouldShow","disabled","appendTo","contentStyle","_a","style","ariaHidden","onTransitionLeave","stopWhenControlled","onContentEnter","composeEventHandlers","enterable","onContentLeave","onBeforeEnter","_b","updatePopper","call","onBeforeLeave","onAfterShow","stopHandle","onClickOutside","popperContentRef","$trigger","onBlur","virtualTriggering","watch","val","flush","content"],"sources":["../../../../../../packages/components/tooltip/src/content.vue"],"sourcesContent":["<template>\n  <teleport :disabled=\"!teleported\" :to=\"appendTo\">\n    <transition\n      :name=\"transitionClass\"\n      @after-leave=\"onTransitionLeave\"\n      @before-enter=\"onBeforeEnter\"\n      @after-enter=\"onAfterShow\"\n      @before-leave=\"onBeforeLeave\"\n    >\n      <el-popper-content\n        v-if=\"shouldRender\"\n        v-show=\"shouldShow\"\n        :id=\"id\"\n        ref=\"contentRef\"\n        v-bind=\"$attrs\"\n        :aria-label=\"ariaLabel\"\n        :aria-hidden=\"ariaHidden\"\n        :boundaries-padding=\"boundariesPadding\"\n        :fallback-placements=\"fallbackPlacements\"\n        :gpu-acceleration=\"gpuAcceleration\"\n        :offset=\"offset\"\n        :placement=\"placement\"\n        :popper-options=\"popperOptions\"\n        :strategy=\"strategy\"\n        :effect=\"effect\"\n        :enterable=\"enterable\"\n        :pure=\"pure\"\n        :popper-class=\"popperClass\"\n        :popper-style=\"[popperStyle, contentStyle]\"\n        :reference-el=\"referenceEl\"\n        :trigger-target-el=\"triggerTargetEl\"\n        :visible=\"shouldShow\"\n        :z-index=\"zIndex\"\n        @mouseenter=\"onContentEnter\"\n        @mouseleave=\"onContentLeave\"\n        @blur=\"onBlur\"\n        @close=\"onClose\"\n      >\n        <template v-if=\"!destroyed\">\n          <slot />\n        </template>\n      </el-popper-content>\n    </transition>\n  </teleport>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, onBeforeUnmount, ref, unref, watch } from 'vue'\nimport { onClickOutside } from '@vueuse/core'\nimport { useNamespace, usePopperContainerId } from '@element-plus/hooks'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { ElPopperContent } from '@element-plus/components/popper'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipContentProps } from './content'\n\ndefineOptions({\n  name: 'ElTooltipContent',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(useTooltipContentProps)\n\nconst { selector } = usePopperContainerId()\nconst ns = useNamespace('tooltip')\n// TODO any is temporary, replace with `InstanceType<typeof ElPopperContent> | null` later\nconst contentRef = ref<any>(null)\nconst destroyed = ref(false)\nconst {\n  controlled,\n  id,\n  open,\n  trigger,\n  onClose,\n  onOpen,\n  onShow,\n  onHide,\n  onBeforeShow,\n  onBeforeHide,\n} = inject(TOOLTIP_INJECTION_KEY, undefined)!\nconst transitionClass = computed(() => {\n  return props.transition || `${ns.namespace.value}-fade-in-linear`\n})\nconst persistentRef = computed(() => {\n  // For testing, we would always want the content to be rendered\n  // to the DOM, so we need to return true here.\n  if (process.env.NODE_ENV === 'test') {\n    return true\n  }\n  return props.persistent\n})\n\nonBeforeUnmount(() => {\n  destroyed.value = true\n})\n\nconst shouldRender = computed(() => {\n  return unref(persistentRef) ? true : unref(open)\n})\n\nconst shouldShow = computed(() => {\n  return props.disabled ? false : unref(open)\n})\n\nconst appendTo = computed(() => {\n  return props.appendTo || selector.value\n})\n\nconst contentStyle = computed(() => (props.style ?? {}) as any)\n\nconst ariaHidden = computed(() => !unref(open))\n\nconst onTransitionLeave = () => {\n  onHide()\n}\n\nconst stopWhenControlled = () => {\n  if (unref(controlled)) return true\n}\n\nconst onContentEnter = composeEventHandlers(stopWhenControlled, () => {\n  if (props.enterable && unref(trigger) === 'hover') {\n    onOpen()\n  }\n})\n\nconst onContentLeave = composeEventHandlers(stopWhenControlled, () => {\n  if (unref(trigger) === 'hover') {\n    onClose()\n  }\n})\n\nconst onBeforeEnter = () => {\n  contentRef.value?.updatePopper?.()\n  onBeforeShow?.()\n}\n\nconst onBeforeLeave = () => {\n  onBeforeHide?.()\n}\n\nconst onAfterShow = () => {\n  onShow()\n  stopHandle = onClickOutside(\n    computed(() => {\n      return contentRef.value?.popperContentRef\n    }),\n    () => {\n      if (unref(controlled)) return\n      const $trigger = unref(trigger)\n      if ($trigger !== 'hover') {\n        onClose()\n      }\n    }\n  )\n}\n\nconst onBlur = () => {\n  if (!props.virtualTriggering) {\n    onClose()\n  }\n}\n\nlet stopHandle: ReturnType<typeof onClickOutside>\n\nwatch(\n  () => unref(open),\n  (val) => {\n    if (!val) {\n      stopHandle?.()\n    }\n  },\n  {\n    flush: 'post',\n  }\n)\n\nwatch(\n  () => props.content,\n  () => {\n    contentRef.value?.updatePopper?.()\n  }\n)\n\ndefineExpose({\n  /**\n   * @description el-popper-content component instance\n   */\n  contentRef,\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}