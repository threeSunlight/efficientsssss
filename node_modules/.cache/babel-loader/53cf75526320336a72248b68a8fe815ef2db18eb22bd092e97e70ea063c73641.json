{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { defineComponent, h } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { hColgroup } from '../h-helper.mjs';\nimport useStyle from './style-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nvar TableFooter = defineComponent({\n  name: \"ElTableFooter\",\n  props: {\n    fixed: {\n      type: String,\n      \"default\": \"\"\n    },\n    store: {\n      required: true,\n      type: Object\n    },\n    summaryMethod: Function,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          prop: \"\",\n          order: \"\"\n        };\n      }\n    }\n  },\n  setup: function setup(props) {\n    var _useStyle = useStyle(props),\n      getCellClasses = _useStyle.getCellClasses,\n      getCellStyles = _useStyle.getCellStyles,\n      columns = _useStyle.columns;\n    var ns = useNamespace(\"table\");\n    return {\n      ns: ns,\n      getCellClasses: getCellClasses,\n      getCellStyles: getCellStyles,\n      columns: columns\n    };\n  },\n  render: function render() {\n    var columns = this.columns,\n      getCellStyles = this.getCellStyles,\n      getCellClasses = this.getCellClasses,\n      summaryMethod = this.summaryMethod,\n      sumText = this.sumText,\n      ns = this.ns;\n    var data = this.store.states.data.value;\n    var sums = [];\n    if (summaryMethod) {\n      sums = summaryMethod({\n        columns: columns,\n        data: data\n      });\n    } else {\n      columns.forEach(function (column, index) {\n        if (index === 0) {\n          sums[index] = sumText;\n          return;\n        }\n        var values = data.map(function (item) {\n          return Number(item[column.property]);\n        });\n        var precisions = [];\n        var notNumber = true;\n        values.forEach(function (value) {\n          if (!Number.isNaN(+value)) {\n            notNumber = false;\n            var decimal = \"\".concat(value).split(\".\")[1];\n            precisions.push(decimal ? decimal.length : 0);\n          }\n        });\n        var precision = Math.max.apply(null, precisions);\n        if (!notNumber) {\n          sums[index] = values.reduce(function (prev, curr) {\n            var value = Number(curr);\n            if (!Number.isNaN(+value)) {\n              return Number.parseFloat((prev + curr).toFixed(Math.min(precision, 20)));\n            } else {\n              return prev;\n            }\n          }, 0);\n        } else {\n          sums[index] = \"\";\n        }\n      });\n    }\n    return h(\"table\", {\n      \"class\": ns.e(\"footer\"),\n      cellspacing: \"0\",\n      cellpadding: \"0\",\n      border: \"0\"\n    }, [hColgroup({\n      columns: columns\n    }), h(\"tbody\", [h(\"tr\", {}, _toConsumableArray(columns.map(function (column, cellIndex) {\n      return h(\"td\", {\n        key: cellIndex,\n        colspan: column.colSpan,\n        rowspan: column.rowSpan,\n        \"class\": getCellClasses(columns, cellIndex),\n        style: getCellStyles(column, cellIndex)\n      }, [h(\"div\", {\n        \"class\": [\"cell\", column.labelClassName]\n      }, [sums[cellIndex]])]);\n    })))])]);\n  }\n});\nexport { TableFooter as default };","map":{"version":3,"names":["TableFooter","defineComponent","name","props","fixed","type","String","store","required","Object","summaryMethod","Function","sumText","border","Boolean","defaultSort","_default","prop","order","setup","_useStyle","useStyle","getCellClasses","getCellStyles","columns","ns","useNamespace","render","data","states","value","sums","forEach","column","index","values","map","item","Number","property","precisions","notNumber","isNaN","decimal","concat","split","push","length","precision","Math","max","apply","reduce","prev","curr","parseFloat","toFixed","min","h","e","cellspacing","cellpadding","hColgroup","_toConsumableArray","cellIndex","key","colspan","colSpan","rowspan","rowSpan","style","labelClassName"],"sources":["../../../../../../../packages/components/table/src/table-footer/index.ts"],"sourcesContent":["// @ts-nocheck\nimport { defineComponent, h } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { hColgroup } from '../h-helper'\nimport useStyle from './style-helper'\nimport type { Store } from '../store'\n\nimport type { PropType } from 'vue'\nimport type { DefaultRow, Sort, SummaryMethod } from '../table/defaults'\nexport interface TableFooter<T> {\n  fixed: string\n  store: Store<T>\n  summaryMethod: SummaryMethod<T>\n  sumText: string\n  border: boolean\n  defaultSort: Sort\n}\n\nexport default defineComponent({\n  name: 'ElTableFooter',\n\n  props: {\n    fixed: {\n      type: String,\n      default: '',\n    },\n    store: {\n      required: true,\n      type: Object as PropType<TableFooter<DefaultRow>['store']>,\n    },\n    summaryMethod: Function as PropType<\n      TableFooter<DefaultRow>['summaryMethod']\n    >,\n    sumText: String,\n    border: Boolean,\n    defaultSort: {\n      type: Object as PropType<TableFooter<DefaultRow>['defaultSort']>,\n      default: () => {\n        return {\n          prop: '',\n          order: '',\n        }\n      },\n    },\n  },\n  setup(props) {\n    const { getCellClasses, getCellStyles, columns } = useStyle(\n      props as TableFooter<DefaultRow>\n    )\n    const ns = useNamespace('table')\n    return {\n      ns,\n      getCellClasses,\n      getCellStyles,\n      columns,\n    }\n  },\n  render() {\n    const {\n      columns,\n      getCellStyles,\n      getCellClasses,\n      summaryMethod,\n      sumText,\n      ns,\n    } = this\n    const data = this.store.states.data.value\n    let sums = []\n    if (summaryMethod) {\n      sums = summaryMethod({\n        columns,\n        data,\n      })\n    } else {\n      columns.forEach((column, index) => {\n        if (index === 0) {\n          sums[index] = sumText\n          return\n        }\n        const values = data.map((item) => Number(item[column.property]))\n        const precisions = []\n        let notNumber = true\n        values.forEach((value) => {\n          if (!Number.isNaN(+value)) {\n            notNumber = false\n            const decimal = `${value}`.split('.')[1]\n            precisions.push(decimal ? decimal.length : 0)\n          }\n        })\n        const precision = Math.max.apply(null, precisions)\n        if (!notNumber) {\n          sums[index] = values.reduce((prev, curr) => {\n            const value = Number(curr)\n            if (!Number.isNaN(+value)) {\n              return Number.parseFloat(\n                (prev + curr).toFixed(Math.min(precision, 20))\n              )\n            } else {\n              return prev\n            }\n          }, 0)\n        } else {\n          sums[index] = ''\n        }\n      })\n    }\n    return h(\n      'table',\n      {\n        class: ns.e('footer'),\n        cellspacing: '0',\n        cellpadding: '0',\n        border: '0',\n      },\n      [\n        hColgroup({\n          columns,\n        }),\n        h('tbody', [\n          h('tr', {}, [\n            ...columns.map((column, cellIndex) =>\n              h(\n                'td',\n                {\n                  key: cellIndex,\n                  colspan: column.colSpan,\n                  rowspan: column.rowSpan,\n                  class: getCellClasses(columns, cellIndex),\n                  style: getCellStyles(column, cellIndex),\n                },\n                [\n                  h(\n                    'div',\n                    {\n                      class: ['cell', column.labelClassName],\n                    },\n                    [sums[cellIndex]]\n                  ),\n                ]\n              )\n            ),\n          ]),\n        ]),\n      ]\n    )\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}