{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n  setup: function setup(props) {\n    var ns = useNamespace(\"tree\");\n    var nodeInstance = inject(\"NodeInstance\");\n    var tree = inject(\"RootTree\");\n    return function () {\n      var node = props.node;\n      var data = node.data,\n        store = node.store;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node: node,\n        data: data,\n        store: store\n      }) : tree.ctx.slots[\"default\"] ? tree.ctx.slots[\"default\"]({\n        node: node,\n        data: data\n      }) : h(\"span\", {\n        \"class\": ns.be(\"node\", \"label\")\n      }, [node.label]);\n    };\n  }\n});\nvar NodeContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue\"]]);\nexport { NodeContent as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","node","type","Object","required","renderContent","Function","setup","ns","useNamespace","nodeInstance","inject","tree","data","store","h","_self","ctx","slots","be","label"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n"],"mappings":";;;;AAQA,IAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EACNC,KAAO;IACLC,IAAM;MACJC,IAAM,EAAAC,MAAA;MACNC,QAAU;IAAA,CACZ;IACAC,aAAe,EAAAC;EAAA,CACjB;EACAC,KAAA,WAAAA,MAAMP,KAAO;IACL,IAAAQ,EAAA,GAAKC,YAAA,CAAa,MAAM;IACxB,IAAAC,YAAA,GAAeC,MAAA,CAAkC,cAAc;IAC/D,IAAAC,IAAA,GAAOD,MAAA,CAAqB,UAAU;IAC5C,OAAO,YAAM;MACX,IAAMV,IAAA,GAAOD,KAAM,CAAAC,IAAA;MACb,IAAEY,IAAA,GAAgBZ,IAAA,CAAhBY,IAAA;QAAMC,KAAU,GAAAb,IAAA,CAAVa,KAAU;MACxB,OAAOd,KAAA,CAAMK,aACT,GAAAL,KAAA,CAAMK,aAAc,CAAAU,CAAA,EAAG;QAAEC,KAAO,EAAAN,YAAA;QAAcT,IAAM,EAANA,IAAM;QAAAY,IAAA,EAAAA,IAAA;QAAMC,KAAA,EAAAA;MAAA,CAAO,IACjEF,IAAA,CAAKK,GAAI,CAAAC,KAAA,WAAM,GACfN,IAAK,CAAAK,GAAA,CAAIC,KAAM,YAAQ;QAAEjB,IAAM,EAANA,IAAM;QAAAY,IAAA,EAAAA;MAAA,CAAM,CACrC,GAAAE,CAAA,CAAE,QAAQ;QAAE,SAAOP,EAAG,CAAAW,EAAA,CAAG,QAAQ,OAAO;MAAA,GAAK,CAAClB,IAAA,CAAKmB,KAAK,CAAC;IAAA,CAC/D;EAAA;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}