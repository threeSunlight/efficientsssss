{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, useSlots, inject, computed, openBlock, createElementBlock, normalizeClass, unref, withDirectives, isRef, vModelCheckbox, normalizeStyle, renderSlot, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { checkboxGroupContextKey } from './constants.mjs';\nimport './composables/index.mjs';\nimport { checkboxProps, checkboxEmits } from './checkbox.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useCheckbox } from './composables/use-checkbox.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _hoisted_1 = [\"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nvar _hoisted_2 = [\"name\", \"tabindex\", \"disabled\", \"value\"];\nvar __default__ = defineComponent({\n  name: \"ElCheckboxButton\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: checkboxProps,\n  emits: checkboxEmits,\n  setup: function setup(__props) {\n    var props = __props;\n    var slots = useSlots();\n    var _useCheckbox = useCheckbox(props, slots),\n      isFocused = _useCheckbox.isFocused,\n      isChecked = _useCheckbox.isChecked,\n      isDisabled = _useCheckbox.isDisabled,\n      checkboxButtonSize = _useCheckbox.checkboxButtonSize,\n      model = _useCheckbox.model,\n      handleChange = _useCheckbox.handleChange;\n    var checkboxGroup = inject(checkboxGroupContextKey, void 0);\n    var ns = useNamespace(\"checkbox\");\n    var activeStyle = computed(function () {\n      var _a, _b, _c, _d;\n      var fillValue = (_b = (_a = checkboxGroup == null ? void 0 : checkboxGroup.fill) == null ? void 0 : _a.value) != null ? _b : \"\";\n      return {\n        backgroundColor: fillValue,\n        borderColor: fillValue,\n        color: (_d = (_c = checkboxGroup == null ? void 0 : checkboxGroup.textColor) == null ? void 0 : _c.value) != null ? _d : \"\",\n        boxShadow: fillValue ? \"-1px 0 0 0 \".concat(fillValue) : void 0\n      };\n    });\n    var labelKls = computed(function () {\n      return [ns.b(\"button\"), ns.bm(\"button\", checkboxButtonSize.value), ns.is(\"disabled\", isDisabled.value), ns.is(\"checked\", isChecked.value), ns.is(\"focus\", isFocused.value)];\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"label\", {\n        \"class\": normalizeClass(unref(labelKls))\n      }, [_ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 0,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return isRef(model) ? model.value = $event : null;\n        }),\n        \"class\": normalizeClass(unref(ns).be(\"button\", \"original\")),\n        type: \"checkbox\",\n        name: _ctx.name,\n        tabindex: _ctx.tabindex,\n        disabled: unref(isDisabled),\n        \"true-value\": _ctx.trueLabel,\n        \"false-value\": _ctx.falseLabel,\n        onChange: _cache[1] || (_cache[1] = function () {\n          return unref(handleChange) && unref(handleChange).apply(void 0, arguments);\n        }),\n        onFocus: _cache[2] || (_cache[2] = function ($event) {\n          return isFocused.value = true;\n        }),\n        onBlur: _cache[3] || (_cache[3] = function ($event) {\n          return isFocused.value = false;\n        })\n      }, null, 42, _hoisted_1)), [[vModelCheckbox, unref(model)]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n        key: 1,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n          return isRef(model) ? model.value = $event : null;\n        }),\n        \"class\": normalizeClass(unref(ns).be(\"button\", \"original\")),\n        type: \"checkbox\",\n        name: _ctx.name,\n        tabindex: _ctx.tabindex,\n        disabled: unref(isDisabled),\n        value: _ctx.label,\n        onChange: _cache[5] || (_cache[5] = function () {\n          return unref(handleChange) && unref(handleChange).apply(void 0, arguments);\n        }),\n        onFocus: _cache[6] || (_cache[6] = function ($event) {\n          return isFocused.value = true;\n        }),\n        onBlur: _cache[7] || (_cache[7] = function ($event) {\n          return isFocused.value = false;\n        })\n      }, null, 42, _hoisted_2)), [[vModelCheckbox, unref(model)]]), _ctx.$slots[\"default\"] || _ctx.label ? (openBlock(), createElementBlock(\"span\", {\n        key: 2,\n        \"class\": normalizeClass(unref(ns).be(\"button\", \"inner\")),\n        style: normalizeStyle(unref(isChecked) ? unref(activeStyle) : void 0)\n      }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.label), 1)];\n      })], 6)) : createCommentVNode(\"v-if\", true)], 2);\n    };\n  }\n}));\nvar CheckboxButton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-button.vue\"]]);\nexport { CheckboxButton as default };","map":{"version":3,"names":["name","slots","useSlots","_useCheckbox","useCheckbox","props","isFocused","isChecked","isDisabled","checkboxButtonSize","model","handleChange","checkboxGroup","inject","checkboxGroupContextKey","ns","useNamespace","activeStyle","computed","_a","_b","_c","_d","fillValue","fill","value","backgroundColor","borderColor","color","textColor","boxShadow","concat","labelKls","b","bm","is"],"sources":["../../../../../../packages/components/checkbox/src/checkbox-button.vue"],"sourcesContent":["<template>\n  <label :class=\"labelKls\">\n    <input\n      v-if=\"trueLabel || falseLabel\"\n      v-model=\"model\"\n      :class=\"ns.be('button', 'original')\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :tabindex=\"tabindex\"\n      :disabled=\"isDisabled\"\n      :true-value=\"trueLabel\"\n      :false-value=\"falseLabel\"\n      @change=\"handleChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n    <input\n      v-else\n      v-model=\"model\"\n      :class=\"ns.be('button', 'original')\"\n      type=\"checkbox\"\n      :name=\"name\"\n      :tabindex=\"tabindex\"\n      :disabled=\"isDisabled\"\n      :value=\"label\"\n      @change=\"handleChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n\n    <span\n      v-if=\"$slots.default || label\"\n      :class=\"ns.be('button', 'inner')\"\n      :style=\"isChecked ? activeStyle : undefined\"\n    >\n      <slot>{{ label }}</slot>\n    </span>\n  </label>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkboxGroupContextKey } from './constants'\nimport { useCheckbox } from './composables'\nimport { checkboxEmits, checkboxProps } from './checkbox'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElCheckboxButton',\n})\n\nconst props = defineProps(checkboxProps)\ndefineEmits(checkboxEmits)\nconst slots = useSlots()\n\nconst {\n  isFocused,\n  isChecked,\n  isDisabled,\n  checkboxButtonSize,\n  model,\n  handleChange,\n} = useCheckbox(props, slots)\nconst checkboxGroup = inject(checkboxGroupContextKey, undefined)\nconst ns = useNamespace('checkbox')\n\nconst activeStyle = computed<CSSProperties>(() => {\n  const fillValue = checkboxGroup?.fill?.value ?? ''\n  return {\n    backgroundColor: fillValue,\n    borderColor: fillValue,\n    color: checkboxGroup?.textColor?.value ?? '',\n    boxShadow: fillValue ? `-1px 0 0 0 ${fillValue}` : undefined,\n  }\n})\n\nconst labelKls = computed(() => {\n  return [\n    ns.b('button'),\n    ns.bm('button', checkboxButtonSize.value),\n    ns.is('disabled', isDisabled.value),\n    ns.is('checked', isChecked.value),\n    ns.is('focus', isFocused.value),\n  ]\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;iCAiDc;EACZA,IAAM;AACR;;;;;;IAIA,IAAMC,KAAA,GAAQC,QAAS;IAEjB,IAAAC,YAAA,GAOFC,WAAA,CAAYC,KAAA,EAAOJ,KAAK;MAN1BK,SAAA,GAAAH,YAAA,CAAAG,SAAA;MACAC,SAAA,GAAAJ,YAAA,CAAAI,SAAA;MACAC,UAAA,GAAAL,YAAA,CAAAK,UAAA;MACAC,kBAAA,GAAAN,YAAA,CAAAM,kBAAA;MACAC,KAAA,GAAAP,YAAA,CAAAO,KAAA;MACAC,YAAA,GAAAR,YAAA,CAAAQ,YAAA;IAEI,IAAAC,aAAA,GAAgBC,MAAO,CAAAC,uBAAA,EAAyB,KAAS;IACzD,IAAAC,EAAA,GAAKC,YAAA,CAAa,UAAU;IAE5B,IAAAC,WAAA,GAAcC,QAAA,CAAwB,YAAM;MAC1C,IAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAY;MACX,IAAAC,SAAA,IAAAH,EAAA,IAAAD,EAAA,GAAAP,aAAA,oBAAAA,aAAA,CAAAY,IAAA,qBAAAL,EAAA,CAAAM,KAAA,YAAAL,EAAA;MAAA,OACY;QACjBM,eAAa,EAAAH,SAAA;QACbI,WAAsB,EAAAJ,SAAA;QACtBK,KAAA,GAAAN,EAAA,GAAuB,CAAAD,EAAA,GAAAT,aAAA,QAA4B,YAAAA,aAAA,CAAAiB,SAAA,qBAAAR,EAAA,CAAAI,KAAA,YAAAH,EAAA;QACrDQ,SAAA,EAAAP,SAAA,iBAAAQ,MAAA,CAAAR,SAAA;MAAA,CACD;IAED,CAAM;IACG,IAAAS,QAAA,GAAAd,QAAA;MACL,OAAK,CACLH,EAAG,CAAAkB,CAAA,SAAa,GAChBlB,EAAG,CAAAmB,EAAA,CAAG,QAAY,EAAAzB,kBAAgB,CAAAgB,KAAA,GAClCV,EAAG,CAAAoB,EAAA,CAAG,UAAW,EAAA3B,UAAe,CAAAiB,KAAA,GAChCV,EAAG,CAAAoB,EAAA,CAAG,SAAS,EAAA5B,SAAe,CAAAkB,KAAA,GAChCV,EAAA,CAAAoB,EAAA,UAAA7B,SAAA,CAAAmB,KAAA,EACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}