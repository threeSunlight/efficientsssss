{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, getCurrentInstance, inject, toRefs, ref, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, renderSlot, createBlock, withCtx, resolveDynamicComponent, toDisplayString } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { breadcrumbKey } from './constants.mjs';\nimport { breadcrumbItemProps } from './breadcrumb-item.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElBreadcrumbItem\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: breadcrumbItemProps,\n  setup: function setup(__props) {\n    var props = __props;\n    var instance = getCurrentInstance();\n    var breadcrumbContext = inject(breadcrumbKey, void 0);\n    var ns = useNamespace(\"breadcrumb\");\n    var _toRefs = toRefs(breadcrumbContext),\n      separator = _toRefs.separator,\n      separatorIcon = _toRefs.separatorIcon;\n    var router = instance.appContext.config.globalProperties.$router;\n    var link = ref();\n    var onClick = function onClick() {\n      if (!props.to || !router) return;\n      props.replace ? router.replace(props.to) : router.push(props.to);\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"item\"))\n      }, [createElementVNode(\"span\", {\n        ref_key: \"link\",\n        ref: link,\n        \"class\": normalizeClass([unref(ns).e(\"inner\"), unref(ns).is(\"link\", !!_ctx.to)]),\n        role: \"link\",\n        onClick: onClick\n      }, [renderSlot(_ctx.$slots, \"default\")], 2), unref(separatorIcon) ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"separator\"))\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(unref(separatorIcon))))];\n        }),\n        _: 1\n      }, 8, [\"class\"])) : (openBlock(), createElementBlock(\"span\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"separator\")),\n        role: \"presentation\"\n      }, toDisplayString(unref(separator)), 3))], 2);\n    };\n  }\n}));\nvar BreadcrumbItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/breadcrumb/src/breadcrumb-item.vue\"]]);\nexport { BreadcrumbItem as default };","map":{"version":3,"names":["name","instance","getCurrentInstance","breadcrumbContext","inject","breadcrumbKey","ns","useNamespace","_toRefs","toRefs","separator","separatorIcon","router","appContext","config","globalProperties","$router","link","ref","onClick","props","to","replace","push"],"sources":["../../../../../../packages/components/breadcrumb/src/breadcrumb-item.vue"],"sourcesContent":["<template>\n  <span :class=\"ns.e('item')\">\n    <span\n      ref=\"link\"\n      :class=\"[ns.e('inner'), ns.is('link', !!to)]\"\n      role=\"link\"\n      @click=\"onClick\"\n    >\n      <slot />\n    </span>\n    <el-icon v-if=\"separatorIcon\" :class=\"ns.e('separator')\">\n      <component :is=\"separatorIcon\" />\n    </el-icon>\n    <span v-else :class=\"ns.e('separator')\" role=\"presentation\">\n      {{ separator }}\n    </span>\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { getCurrentInstance, inject, ref, toRefs } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { breadcrumbKey } from './constants'\nimport { breadcrumbItemProps } from './breadcrumb-item'\n\nimport type { Router } from 'vue-router'\n\ndefineOptions({\n  name: 'ElBreadcrumbItem',\n})\n\nconst props = defineProps(breadcrumbItemProps)\n\nconst instance = getCurrentInstance()!\nconst breadcrumbContext = inject(breadcrumbKey, undefined)!\nconst ns = useNamespace('breadcrumb')\n\nconst { separator, separatorIcon } = toRefs(breadcrumbContext)\nconst router = instance.appContext.config.globalProperties.$router as Router\n\nconst link = ref<HTMLSpanElement>()\n\nconst onClick = () => {\n  if (!props.to || !router) return\n  props.replace ? router.replace(props.to) : router.push(props.to)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;iCA4Bc;EACZA,IAAM;AACR;;;;;IAIA,IAAMC,QAAA,GAAWC,kBAAmB;IAC9B,IAAAC,iBAAA,GAAoBC,MAAO,CAAAC,aAAA,EAAe,KAAS;IACnD,IAAAC,EAAA,GAAKC,YAAA,CAAa,YAAY;IAEpC,IAAAC,OAAA,GAAqCC,MAAA,CAAON,iBAAiB;MAArDO,SAAA,GAAAF,OAAA,CAAAE,SAAA;MAAWC,aAAkB,GAAAH,OAAA,CAAlBG,aAAkB;IACrC,IAAMC,MAAS,GAAAX,QAAA,CAASY,UAAW,CAAAC,MAAA,CAAOC,gBAAiB,CAAAC,OAAA;IAE3D,IAAMC,IAAA,GAAOC,GAAqB;IAElC,IAAMC,OAAA,GAAU,SAAVA,QAAA,EAAgB;MAChB,KAACC,KAAM,CAAAC,EAAA,IAAM,CAACT,MAAA,EAAQ;MACpBQ,KAAA,CAAAE,OAAA,GAAUV,MAAA,CAAOU,OAAQ,CAAAF,KAAA,CAAMC,EAAE,CAAI,GAAAT,MAAA,CAAOW,IAAK,CAAAH,KAAA,CAAMC,EAAE;IAAA,CACjE"},"metadata":{},"sourceType":"module","externalDependencies":[]}