{"ast":null,"code":"import { ref } from 'vue';\nfunction useCursor(input) {\n  var selectionRef = ref();\n  function recordCursor() {\n    if (input.value == void 0) return;\n    var _input$value = input.value,\n      selectionStart = _input$value.selectionStart,\n      selectionEnd = _input$value.selectionEnd,\n      value = _input$value.value;\n    if (selectionStart == null || selectionEnd == null) return;\n    var beforeTxt = value.slice(0, Math.max(0, selectionStart));\n    var afterTxt = value.slice(Math.max(0, selectionEnd));\n    selectionRef.value = {\n      selectionStart: selectionStart,\n      selectionEnd: selectionEnd,\n      value: value,\n      beforeTxt: beforeTxt,\n      afterTxt: afterTxt\n    };\n  }\n  function setCursor() {\n    if (input.value == void 0 || selectionRef.value == void 0) return;\n    var value = input.value.value;\n    var _selectionRef$value = selectionRef.value,\n      beforeTxt = _selectionRef$value.beforeTxt,\n      afterTxt = _selectionRef$value.afterTxt,\n      selectionStart = _selectionRef$value.selectionStart;\n    if (beforeTxt == void 0 || afterTxt == void 0 || selectionStart == void 0) return;\n    var startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else {\n      var beforeLastChar = beforeTxt[selectionStart - 1];\n      var newIndex = value.indexOf(beforeLastChar, selectionStart - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    input.value.setSelectionRange(startPos, startPos);\n  }\n  return [recordCursor, setCursor];\n}\nexport { useCursor };","map":{"version":3,"names":["useCursor","input","selectionRef","ref","recordCursor","value","_input$value","selectionStart","selectionEnd","beforeTxt","slice","Math","max","afterTxt","setCursor","_selectionRef$value","startPos","length","endsWith","startsWith","beforeLastChar","newIndex","indexOf","setSelectionRange"],"sources":["../../../../../packages/hooks/use-cursor/index.ts"],"sourcesContent":["import { ref } from 'vue'\n\nimport type { ShallowRef } from 'vue'\n\n// Keep input cursor in the correct position when we use formatter.\nexport function useCursor(\n  input: ShallowRef<HTMLInputElement | undefined>\n): [() => void, () => void] {\n  const selectionRef = ref<{\n    selectionStart?: number\n    selectionEnd?: number\n    value?: string\n    beforeTxt?: string\n    afterTxt?: string\n  }>()\n\n  function recordCursor() {\n    if (input.value == undefined) return\n\n    const { selectionStart, selectionEnd, value } = input.value\n\n    if (selectionStart == null || selectionEnd == null) return\n\n    const beforeTxt = value.slice(0, Math.max(0, selectionStart))\n    const afterTxt = value.slice(Math.max(0, selectionEnd))\n\n    selectionRef.value = {\n      selectionStart,\n      selectionEnd,\n      value,\n      beforeTxt,\n      afterTxt,\n    }\n  }\n  function setCursor() {\n    if (input.value == undefined || selectionRef.value == undefined) return\n\n    const { value } = input.value\n    const { beforeTxt, afterTxt, selectionStart } = selectionRef.value\n\n    if (\n      beforeTxt == undefined ||\n      afterTxt == undefined ||\n      selectionStart == undefined\n    )\n      return\n\n    let startPos = value.length\n\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length\n    } else {\n      const beforeLastChar = beforeTxt[selectionStart - 1]\n      const newIndex = value.indexOf(beforeLastChar, selectionStart - 1)\n      if (newIndex !== -1) {\n        startPos = newIndex + 1\n      }\n    }\n\n    input.value.setSelectionRange(startPos, startPos)\n  }\n\n  return [recordCursor, setCursor]\n}\n"],"mappings":";AACO,SAASA,SAASA,CAACC,KAAK,EAAE;EAC/B,IAAMC,YAAY,GAAGC,GAAG,EAAE;EAC1B,SAASC,YAAYA,CAAA,EAAG;IACtB,IAAIH,KAAK,CAACI,KAAK,IAAI,KAAK,CAAC,EACvB;IACF,IAAAC,YAAA,GAAgDL,KAAK,CAACI,KAAK;MAAnDE,cAAc,GAAAD,YAAA,CAAdC,cAAc;MAAEC,YAAY,GAAAF,YAAA,CAAZE,YAAY;MAAEH,KAAK,GAAAC,YAAA,CAALD,KAAK;IAC3C,IAAIE,cAAc,IAAI,IAAI,IAAIC,YAAY,IAAI,IAAI,EAChD;IACF,IAAMC,SAAS,GAAGJ,KAAK,CAACK,KAAK,CAAC,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEL,cAAc,CAAC,CAAC;IAC7D,IAAMM,QAAQ,GAAGR,KAAK,CAACK,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEJ,YAAY,CAAC,CAAC;IACvDN,YAAY,CAACG,KAAK,GAAG;MACnBE,cAAc,EAAdA,cAAc;MACdC,YAAY,EAAZA,YAAY;MACZH,KAAK,EAALA,KAAK;MACLI,SAAS,EAATA,SAAS;MACTI,QAAQ,EAARA;IACN,CAAK;EACL;EACE,SAASC,SAASA,CAAA,EAAG;IACnB,IAAIb,KAAK,CAACI,KAAK,IAAI,KAAK,CAAC,IAAIH,YAAY,CAACG,KAAK,IAAI,KAAK,CAAC,EACvD;IACF,IAAQA,KAAK,GAAKJ,KAAK,CAACI,KAAK,CAArBA,KAAK;IACb,IAAAU,mBAAA,GAAgDb,YAAY,CAACG,KAAK;MAA1DI,SAAS,GAAAM,mBAAA,CAATN,SAAS;MAAEI,QAAQ,GAAAE,mBAAA,CAARF,QAAQ;MAAEN,cAAc,GAAAQ,mBAAA,CAAdR,cAAc;IAC3C,IAAIE,SAAS,IAAI,KAAK,CAAC,IAAII,QAAQ,IAAI,KAAK,CAAC,IAAIN,cAAc,IAAI,KAAK,CAAC,EACvE;IACF,IAAIS,QAAQ,GAAGX,KAAK,CAACY,MAAM;IAC3B,IAAIZ,KAAK,CAACa,QAAQ,CAACL,QAAQ,CAAC,EAAE;MAC5BG,QAAQ,GAAGX,KAAK,CAACY,MAAM,GAAGJ,QAAQ,CAACI,MAAM;IAC/C,CAAK,MAAM,IAAIZ,KAAK,CAACc,UAAU,CAACV,SAAS,CAAC,EAAE;MACtCO,QAAQ,GAAGP,SAAS,CAACQ,MAAM;IACjC,CAAK,MAAM;MACL,IAAMG,cAAc,GAAGX,SAAS,CAACF,cAAc,GAAG,CAAC,CAAC;MACpD,IAAMc,QAAQ,GAAGhB,KAAK,CAACiB,OAAO,CAACF,cAAc,EAAEb,cAAc,GAAG,CAAC,CAAC;MAClE,IAAIc,QAAQ,KAAK,CAAC,CAAC,EAAE;QACnBL,QAAQ,GAAGK,QAAQ,GAAG,CAAC;MAC/B;IACA;IACIpB,KAAK,CAACI,KAAK,CAACkB,iBAAiB,CAACP,QAAQ,EAAEA,QAAQ,CAAC;EACrD;EACE,OAAO,CAACZ,YAAY,EAAEU,SAAS,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}