{"ast":null,"code":"import '../../../form/index.mjs';\nimport '../../../../utils/index.mjs';\nimport { useCheckboxDisabled } from './use-checkbox-disabled.mjs';\nimport { useCheckboxEvent } from './use-checkbox-event.mjs';\nimport { useCheckboxModel } from './use-checkbox-model.mjs';\nimport { useCheckboxStatus } from './use-checkbox-status.mjs';\nimport { isArray } from '@vue/shared';\nimport { useFormItem, useFormItemInputId } from '../../../form/src/hooks/use-form-item.mjs';\nvar setStoreValue = function setStoreValue(props, _ref) {\n  var model = _ref.model;\n  function addToStore() {\n    if (isArray(model.value) && !model.value.includes(props.label)) {\n      model.value.push(props.label);\n    } else {\n      model.value = props.trueLabel || true;\n    }\n  }\n  props.checked && addToStore();\n};\nvar useCheckbox = function useCheckbox(props, slots) {\n  var _useFormItem = useFormItem(),\n    elFormItem = _useFormItem.formItem;\n  var _useCheckboxModel = useCheckboxModel(props),\n    model = _useCheckboxModel.model,\n    isGroup = _useCheckboxModel.isGroup,\n    isLimitExceeded = _useCheckboxModel.isLimitExceeded;\n  var _useCheckboxStatus = useCheckboxStatus(props, slots, {\n      model: model\n    }),\n    isFocused = _useCheckboxStatus.isFocused,\n    isChecked = _useCheckboxStatus.isChecked,\n    checkboxButtonSize = _useCheckboxStatus.checkboxButtonSize,\n    checkboxSize = _useCheckboxStatus.checkboxSize,\n    hasOwnLabel = _useCheckboxStatus.hasOwnLabel;\n  var _useCheckboxDisabled = useCheckboxDisabled({\n      model: model,\n      isChecked: isChecked\n    }),\n    isDisabled = _useCheckboxDisabled.isDisabled;\n  var _useFormItemInputId = useFormItemInputId(props, {\n      formItemContext: elFormItem,\n      disableIdGeneration: hasOwnLabel,\n      disableIdManagement: isGroup\n    }),\n    inputId = _useFormItemInputId.inputId,\n    isLabeledByFormItem = _useFormItemInputId.isLabeledByFormItem;\n  var _useCheckboxEvent = useCheckboxEvent(props, {\n      model: model,\n      isLimitExceeded: isLimitExceeded,\n      hasOwnLabel: hasOwnLabel,\n      isDisabled: isDisabled,\n      isLabeledByFormItem: isLabeledByFormItem\n    }),\n    handleChange = _useCheckboxEvent.handleChange,\n    onClickRoot = _useCheckboxEvent.onClickRoot;\n  setStoreValue(props, {\n    model: model\n  });\n  return {\n    inputId: inputId,\n    isLabeledByFormItem: isLabeledByFormItem,\n    isChecked: isChecked,\n    isDisabled: isDisabled,\n    isFocused: isFocused,\n    checkboxButtonSize: checkboxButtonSize,\n    checkboxSize: checkboxSize,\n    hasOwnLabel: hasOwnLabel,\n    model: model,\n    handleChange: handleChange,\n    onClickRoot: onClickRoot\n  };\n};\nexport { useCheckbox };","map":{"version":3,"names":["setStoreValue","props","_ref","model","addToStore","isArray","value","includes","label","push","trueLabel","checked","useCheckbox","slots","_useFormItem","useFormItem","elFormItem","formItem","_useCheckboxModel","useCheckboxModel","isGroup","isLimitExceeded","_useCheckboxStatus","useCheckboxStatus","isFocused","isChecked","checkboxButtonSize","checkboxSize","hasOwnLabel","_useCheckboxDisabled","useCheckboxDisabled","isDisabled","_useFormItemInputId","useFormItemInputId","formItemContext","disableIdGeneration","disableIdManagement","inputId","isLabeledByFormItem","_useCheckboxEvent","useCheckboxEvent","handleChange","onClickRoot"],"sources":["../../../../../../../packages/components/checkbox/src/composables/use-checkbox.ts"],"sourcesContent":["import { useFormItem, useFormItemInputId } from '@element-plus/components/form'\nimport { isArray } from '@element-plus/utils'\nimport { useCheckboxDisabled } from './use-checkbox-disabled'\nimport { useCheckboxEvent } from './use-checkbox-event'\nimport { useCheckboxModel } from './use-checkbox-model'\nimport { useCheckboxStatus } from './use-checkbox-status'\n\nimport type { ComponentInternalInstance } from 'vue'\nimport type { CheckboxProps } from '../checkbox'\nimport type { CheckboxModel } from './use-checkbox-model'\n\nconst setStoreValue = (\n  props: CheckboxProps,\n  { model }: Pick<CheckboxModel, 'model'>\n) => {\n  function addToStore() {\n    if (isArray(model.value) && !model.value.includes(props.label)) {\n      model.value.push(props.label)\n    } else {\n      model.value = props.trueLabel || true\n    }\n  }\n  props.checked && addToStore()\n}\n\nexport const useCheckbox = (\n  props: CheckboxProps,\n  slots: ComponentInternalInstance['slots']\n) => {\n  const { formItem: elFormItem } = useFormItem()\n  const { model, isGroup, isLimitExceeded } = useCheckboxModel(props)\n  const {\n    isFocused,\n    isChecked,\n    checkboxButtonSize,\n    checkboxSize,\n    hasOwnLabel,\n  } = useCheckboxStatus(props, slots, { model })\n  const { isDisabled } = useCheckboxDisabled({ model, isChecked })\n  const { inputId, isLabeledByFormItem } = useFormItemInputId(props, {\n    formItemContext: elFormItem,\n    disableIdGeneration: hasOwnLabel,\n    disableIdManagement: isGroup,\n  })\n  const { handleChange, onClickRoot } = useCheckboxEvent(props, {\n    model,\n    isLimitExceeded,\n    hasOwnLabel,\n    isDisabled,\n    isLabeledByFormItem,\n  })\n\n  setStoreValue(props, { model })\n\n  return {\n    inputId,\n    isLabeledByFormItem,\n    isChecked,\n    isDisabled,\n    isFocused,\n    checkboxButtonSize,\n    checkboxSize,\n    hasOwnLabel,\n    model,\n    handleChange,\n    onClickRoot,\n  }\n}\n"],"mappings":";;;;;;;;AAMA,IAAMA,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAAC,IAAA,EAAgB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACnC,SAASC,UAAUA,CAAA,EAAG;IACpB,IAAIC,OAAO,CAACF,KAAK,CAACG,KAAK,CAAC,IAAI,CAACH,KAAK,CAACG,KAAK,CAACC,QAAQ,CAACN,KAAK,CAACO,KAAK,CAAC,EAAE;MAC9DL,KAAK,CAACG,KAAK,CAACG,IAAI,CAACR,KAAK,CAACO,KAAK,CAAC;IACnC,CAAK,MAAM;MACLL,KAAK,CAACG,KAAK,GAAGL,KAAK,CAACS,SAAS,IAAI,IAAI;IAC3C;EACA;EACET,KAAK,CAACU,OAAO,IAAIP,UAAU,EAAE;AAC/B,CAAC;AACW,IAACQ,WAAW,GAAG,SAAdA,WAAWA,CAAIX,KAAK,EAAEY,KAAK,EAAK;EAC3C,IAAAC,YAAA,GAAiCC,WAAW,EAAE;IAA5BC,UAAU,GAAAF,YAAA,CAApBG,QAAQ;EAChB,IAAAC,iBAAA,GAA4CC,gBAAgB,CAAClB,KAAK,CAAC;IAA3DE,KAAK,GAAAe,iBAAA,CAALf,KAAK;IAAEiB,OAAO,GAAAF,iBAAA,CAAPE,OAAO;IAAEC,eAAe,GAAAH,iBAAA,CAAfG,eAAe;EACvC,IAAAC,kBAAA,GAMIC,iBAAiB,CAACtB,KAAK,EAAEY,KAAK,EAAE;MAAEV,KAAK,EAALA;IAAK,CAAE,CAAC;IAL5CqB,SAAS,GAAAF,kBAAA,CAATE,SAAS;IACTC,SAAS,GAAAH,kBAAA,CAATG,SAAS;IACTC,kBAAkB,GAAAJ,kBAAA,CAAlBI,kBAAkB;IAClBC,YAAY,GAAAL,kBAAA,CAAZK,YAAY;IACZC,WAAW,GAAAN,kBAAA,CAAXM,WAAW;EAEb,IAAAC,oBAAA,GAAuBC,mBAAmB,CAAC;MAAE3B,KAAK,EAALA,KAAK;MAAEsB,SAAS,EAATA;IAAS,CAAE,CAAC;IAAxDM,UAAU,GAAAF,oBAAA,CAAVE,UAAU;EAClB,IAAAC,mBAAA,GAAyCC,kBAAkB,CAAChC,KAAK,EAAE;MACjEiC,eAAe,EAAElB,UAAU;MAC3BmB,mBAAmB,EAAEP,WAAW;MAChCQ,mBAAmB,EAAEhB;IACzB,CAAG,CAAC;IAJMiB,OAAO,GAAAL,mBAAA,CAAPK,OAAO;IAAEC,mBAAmB,GAAAN,mBAAA,CAAnBM,mBAAmB;EAKpC,IAAAC,iBAAA,GAAsCC,gBAAgB,CAACvC,KAAK,EAAE;MAC5DE,KAAK,EAALA,KAAK;MACLkB,eAAe,EAAfA,eAAe;MACfO,WAAW,EAAXA,WAAW;MACXG,UAAU,EAAVA,UAAU;MACVO,mBAAmB,EAAnBA;IACJ,CAAG,CAAC;IANMG,YAAY,GAAAF,iBAAA,CAAZE,YAAY;IAAEC,WAAW,GAAAH,iBAAA,CAAXG,WAAW;EAOjC1C,aAAa,CAACC,KAAK,EAAE;IAAEE,KAAK,EAALA;EAAK,CAAE,CAAC;EAC/B,OAAO;IACLkC,OAAO,EAAPA,OAAO;IACPC,mBAAmB,EAAnBA,mBAAmB;IACnBb,SAAS,EAATA,SAAS;IACTM,UAAU,EAAVA,UAAU;IACVP,SAAS,EAATA,SAAS;IACTE,kBAAkB,EAAlBA,kBAAkB;IAClBC,YAAY,EAAZA,YAAY;IACZC,WAAW,EAAXA,WAAW;IACXzB,KAAK,EAALA,KAAK;IACLsC,YAAY,EAAZA,YAAY;IACZC,WAAW,EAAXA;EACJ,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}