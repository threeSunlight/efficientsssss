{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createElementVNode, normalizeStyle } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { statisticProps } from './statistic.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isFunction } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nvar __default__ = defineComponent({\n  name: \"ElStatistic\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: statisticProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"statistic\");\n    var displayValue = computed(function () {\n      var value = props.value,\n        formatter = props.formatter,\n        precision = props.precision,\n        decimalSeparator = props.decimalSeparator,\n        groupSeparator = props.groupSeparator;\n      if (isFunction(formatter)) return formatter(value);\n      if (!isNumber(value)) return value;\n      var _String$split = String(value).split(\".\"),\n        _String$split2 = _slicedToArray(_String$split, 2),\n        integer = _String$split2[0],\n        _String$split2$ = _String$split2[1],\n        decimal = _String$split2$ === void 0 ? \"\" : _String$split2$;\n      decimal = decimal.padEnd(precision, \"0\").slice(0, precision > 0 ? precision : 0);\n      integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      return [integer, decimal].join(decimal ? decimalSeparator : \"\");\n    });\n    expose({\n      displayValue: displayValue\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(ns).b())\n      }, [_ctx.$slots.title || _ctx.title ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"head\"))\n      }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.title), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).e(\"content\"))\n      }, [_ctx.$slots.prefix || _ctx.prefix ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(unref(ns).e(\"prefix\"))\n      }, [renderSlot(_ctx.$slots, \"prefix\", {}, function () {\n        return [createElementVNode(\"span\", null, toDisplayString(_ctx.prefix), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"number\")),\n        style: normalizeStyle(_ctx.valueStyle)\n      }, toDisplayString(unref(displayValue)), 7), _ctx.$slots.suffix || _ctx.suffix ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(unref(ns).e(\"suffix\"))\n      }, [renderSlot(_ctx.$slots, \"suffix\", {}, function () {\n        return [createElementVNode(\"span\", null, toDisplayString(_ctx.suffix), 1)];\n      })], 2)) : createCommentVNode(\"v-if\", true)], 2)], 2);\n    };\n  }\n}));\nvar Statistic = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/statistic/src/statistic.vue\"]]);\nexport { Statistic as default };","map":{"version":3,"names":["name","ns","useNamespace","displayValue","computed","value","props","formatter","precision","decimalSeparator","groupSeparator","isFunction","isNumber","_String$split","String","split","_String$split2","_slicedToArray","integer","_String$split2$","decimal","padEnd","slice","replace","join","expose"],"sources":["../../../../../../packages/components/statistic/src/statistic.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div v-if=\"$slots.title || title\" :class=\"ns.e('head')\">\n      <slot name=\"title\">\n        {{ title }}\n      </slot>\n    </div>\n    <div :class=\"ns.e('content')\">\n      <div v-if=\"$slots.prefix || prefix\" :class=\"ns.e('prefix')\">\n        <slot name=\"prefix\">\n          <span>{{ prefix }}</span>\n        </slot>\n      </div>\n      <span :class=\"ns.e('number')\" :style=\"valueStyle\">\n        {{ displayValue }}\n      </span>\n      <div v-if=\"$slots.suffix || suffix\" :class=\"ns.e('suffix')\">\n        <slot name=\"suffix\">\n          <span>{{ suffix }}</span>\n        </slot>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { isFunction, isNumber } from '@element-plus/utils'\nimport { statisticProps } from './statistic'\n\ndefineOptions({\n  name: 'ElStatistic',\n})\n\nconst props = defineProps(statisticProps)\nconst ns = useNamespace('statistic')\n\nconst displayValue = computed(() => {\n  const { value, formatter, precision, decimalSeparator, groupSeparator } =\n    props\n\n  if (isFunction(formatter)) return formatter(value)\n\n  if (!isNumber(value)) return value\n\n  let [integer, decimal = ''] = String(value).split('.')\n  decimal = decimal\n    .padEnd(precision, '0')\n    .slice(0, precision > 0 ? precision : 0)\n  integer = integer.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator)\n  return [integer, decimal].join(decimal ? decimalSeparator : '')\n})\n\ndefineExpose({\n  /**\n   * @description current display value\n   */\n  displayValue,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;iCA8Bc;EACZA,IAAM;AACR;;;;;;IAGM,IAAAC,EAAA,GAAKC,YAAA,CAAa,WAAW;IAE7B,IAAAC,YAAA,GAAeC,QAAA,CAAS,YAAM;MAClC,IAAQC,KAAA,GACNC,KAAA,CADMD,KAAA;QAAOE,SAAW,GACxBD,KAAA,CADaC,SAAW;QAAAC,SAAA,GACxBF,KAAA,CADwBE,SAAA;QAAWC,gBAAA,GACnCH,KAAA,CADmCG,gBAAA;QAAkBC,cACrD,GAAAJ,KAAA,CADqDI,cACrD;MAEF,IAAIC,UAAA,CAAWJ,SAAS,GAAG,OAAOA,SAAA,CAAUF,KAAK;MAE7C,KAACO,QAAA,CAASP,KAAK,GAAU,OAAAA,KAAA;MAEzB,IAAAQ,aAAA,GAA0BC,MAAA,CAAOT,KAAK,EAAEU,KAAA,CAAM,GAAG;QAAAC,cAAA,GAAAC,cAAA,CAAAJ,aAAA;QAAhDK,OAAA,GAAAF,cAAA;QAAAG,eAAA,GAAAH,cAAA;QAASI,OAAU,GAAAD,eAAA,mBAAAA,eAAA;MACdC,OAAA,GAAAA,OAAA,CACPC,MAAO,CAAAb,SAAA,EAAW,GAAG,EACrBc,KAAA,CAAM,CAAG,EAAAd,SAAA,GAAY,CAAI,GAAAA,SAAA,GAAY,CAAC;MAC/BU,OAAA,GAAAA,OAAA,CAAQK,OAAQ,0BAAyBb,cAAc;MACjE,OAAO,CAACQ,OAAS,EAAAE,OAAO,EAAEI,IAAK,CAAAJ,OAAA,GAAUX,gBAAA,GAAmB,EAAE;IAAA,CAC/D;IAEYgB,MAAA;MAIXtB,YAAA,EAAAA;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}