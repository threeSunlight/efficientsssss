{"ast":null,"code":"import { ref, computed } from 'vue';\nfunction useAllowCreate(props, states) {\n  var createOptionCount = ref(0);\n  var cachedSelectedOption = ref(null);\n  var enableAllowCreateMode = computed(function () {\n    return props.allowCreate && props.filterable;\n  });\n  function hasExistingOption(query) {\n    var hasValue = function hasValue(option) {\n      return option.value === query;\n    };\n    return props.options && props.options.some(hasValue) || states.createdOptions.some(hasValue);\n  }\n  function selectNewOption(option) {\n    if (!enableAllowCreateMode.value) {\n      return;\n    }\n    if (props.multiple && option.created) {\n      createOptionCount.value++;\n    } else {\n      cachedSelectedOption.value = option;\n    }\n  }\n  function createNewOption(query) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0 && !hasExistingOption(query)) {\n        var newOption = {\n          value: query,\n          label: query,\n          created: true,\n          disabled: false\n        };\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption;\n        } else {\n          states.createdOptions.push(newOption);\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value;\n        } else {\n          var selectedOption = cachedSelectedOption.value;\n          states.createdOptions.length = 0;\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption);\n          }\n        }\n      }\n    }\n  }\n  function removeNewOption(option) {\n    if (!enableAllowCreateMode.value || !option || !option.created || option.created && props.reserveKeyword && states.inputValue === option.label) {\n      return;\n    }\n    var idx = states.createdOptions.findIndex(function (it) {\n      return it.value === option.value;\n    });\n    if (~idx) {\n      states.createdOptions.splice(idx, 1);\n      createOptionCount.value--;\n    }\n  }\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0;\n      createOptionCount.value = 0;\n    }\n  }\n  return {\n    createNewOption: createNewOption,\n    removeNewOption: removeNewOption,\n    selectNewOption: selectNewOption,\n    clearAllNewOption: clearAllNewOption\n  };\n}\nexport { useAllowCreate };","map":{"version":3,"names":["useAllowCreate","props","states","createOptionCount","ref","cachedSelectedOption","enableAllowCreateMode","computed","allowCreate","filterable","hasExistingOption","query","hasValue","option","value","options","some","createdOptions","selectNewOption","multiple","created","createNewOption","length","newOption","label","disabled","push","selectedOption","removeNewOption","reserveKeyword","inputValue","idx","findIndex","it","splice","clearAllNewOption"],"sources":["../../../../../../packages/components/select-v2/src/useAllowCreate.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, ref } from 'vue'\nimport type { ISelectProps } from './token'\nimport type { Option } from './select.types'\n\nexport function useAllowCreate(props: ISelectProps, states) {\n  const createOptionCount = ref(0)\n  const cachedSelectedOption = ref<Option>(null)\n\n  const enableAllowCreateMode = computed(() => {\n    return props.allowCreate && props.filterable\n  })\n\n  function hasExistingOption(query: string) {\n    const hasValue = (option) => option.value === query\n    return (\n      (props.options && props.options.some(hasValue)) ||\n      states.createdOptions.some(hasValue)\n    )\n  }\n\n  function selectNewOption(option: Option) {\n    if (!enableAllowCreateMode.value) {\n      return\n    }\n    if (props.multiple && option.created) {\n      createOptionCount.value++\n    } else {\n      cachedSelectedOption.value = option\n    }\n  }\n\n  function createNewOption(query: string) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0 && !hasExistingOption(query)) {\n        const newOption = {\n          value: query,\n          label: query,\n          created: true,\n          disabled: false,\n        }\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption\n        } else {\n          states.createdOptions.push(newOption)\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value\n        } else {\n          const selectedOption = cachedSelectedOption.value\n          states.createdOptions.length = 0\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption)\n          }\n        }\n      }\n    }\n  }\n\n  function removeNewOption(option: Option) {\n    if (\n      !enableAllowCreateMode.value ||\n      !option ||\n      !option.created ||\n      (option.created &&\n        props.reserveKeyword &&\n        states.inputValue === option.label)\n    ) {\n      return\n    }\n    const idx = states.createdOptions.findIndex(\n      (it) => it.value === option.value\n    )\n    if (~idx) {\n      states.createdOptions.splice(idx, 1)\n      createOptionCount.value--\n    }\n  }\n\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0\n      createOptionCount.value = 0\n    }\n  }\n\n  return {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}