{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { computed } from 'vue';\nvar usePropsAlias = function usePropsAlias(props) {\n  var initProps = {\n    label: \"label\",\n    key: \"key\",\n    disabled: \"disabled\"\n  };\n  return computed(function () {\n    return _objectSpread(_objectSpread({}, initProps), props.props);\n  });\n};\nexport { usePropsAlias };","map":{"version":3,"names":["usePropsAlias","props","initProps","label","key","disabled","computed","_objectSpread"],"sources":["../../../../../../../packages/components/transfer/src/composables/use-props-alias.ts"],"sourcesContent":["import { computed } from 'vue'\n\nimport type { TransferPropsAlias } from '../transfer'\n\nexport const usePropsAlias = (props: { props: TransferPropsAlias }) => {\n  const initProps: Required<TransferPropsAlias> = {\n    label: 'label',\n    key: 'key',\n    disabled: 'disabled',\n  }\n\n  return computed(() => ({\n    ...initProps,\n    ...props.props,\n  }))\n}\n"],"mappings":";;;;;;;AACY,IAACA,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAK,EAAK;EACtC,IAAMC,SAAS,GAAG;IAChBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE,KAAK;IACVC,QAAQ,EAAE;EACd,CAAG;EACD,OAAOC,QAAQ,CAAC;IAAA,OAAAC,aAAA,CAAAA,aAAA,KACXL,SAAS,GACTD,KAAK,CAACA,KAAK;EAAA,CACd,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}