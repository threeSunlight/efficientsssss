{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { defineComponent, getCurrentInstance, ref, computed, unref, nextTick, onMounted, h, resolveDynamicComponent } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport ScrollBar from '../components/scrollbar.mjs';\nimport { useGridWheel } from '../hooks/use-grid-wheel.mjs';\nimport { useCache } from '../hooks/use-cache.mjs';\nimport { virtualizedGridProps } from '../props.mjs';\nimport { isRTL, getRTLOffsetType, getScrollDir } from '../utils.mjs';\nimport { ITEM_RENDER_EVT, SCROLL_EVT, FORWARD, BACKWARD, RTL_OFFSET_POS_DESC, RTL_OFFSET_NAG, AUTO_ALIGNMENT, RTL, RTL_OFFSET_POS_ASC } from '../defaults.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { isNumber } from '../../../../utils/types.mjs';\nimport { getScrollBarWidth } from '../../../../utils/dom/scroll.mjs';\nimport { hasOwn, isString } from '@vue/shared';\nimport { isClient } from '@vueuse/core';\nvar createGrid = function createGrid(_ref) {\n  var name = _ref.name,\n    clearCache = _ref.clearCache,\n    getColumnPosition = _ref.getColumnPosition,\n    getColumnStartIndexForOffset = _ref.getColumnStartIndexForOffset,\n    getColumnStopIndexForStartIndex = _ref.getColumnStopIndexForStartIndex,\n    getEstimatedTotalHeight = _ref.getEstimatedTotalHeight,\n    getEstimatedTotalWidth = _ref.getEstimatedTotalWidth,\n    getColumnOffset = _ref.getColumnOffset,\n    getRowOffset = _ref.getRowOffset,\n    getRowPosition = _ref.getRowPosition,\n    getRowStartIndexForOffset = _ref.getRowStartIndexForOffset,\n    getRowStopIndexForStartIndex = _ref.getRowStopIndexForStartIndex,\n    initCache = _ref.initCache,\n    injectToInstance = _ref.injectToInstance,\n    validateProps = _ref.validateProps;\n  return defineComponent({\n    name: name != null ? name : \"ElVirtualList\",\n    props: virtualizedGridProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup: function setup(props, _ref2) {\n      var emit = _ref2.emit,\n        expose = _ref2.expose,\n        slots = _ref2.slots;\n      var ns = useNamespace(\"vl\");\n      validateProps(props);\n      var instance = getCurrentInstance();\n      var cache = ref(initCache(props, instance));\n      injectToInstance == null ? void 0 : injectToInstance(instance, cache);\n      var windowRef = ref();\n      var hScrollbar = ref();\n      var vScrollbar = ref();\n      var innerRef = ref(null);\n      var states = ref({\n        isScrolling: false,\n        scrollLeft: isNumber(props.initScrollLeft) ? props.initScrollLeft : 0,\n        scrollTop: isNumber(props.initScrollTop) ? props.initScrollTop : 0,\n        updateRequested: false,\n        xAxisScrollDir: FORWARD,\n        yAxisScrollDir: FORWARD\n      });\n      var getItemStyleCache = useCache();\n      var parsedHeight = computed(function () {\n        return Number.parseInt(\"\".concat(props.height), 10);\n      });\n      var parsedWidth = computed(function () {\n        return Number.parseInt(\"\".concat(props.width), 10);\n      });\n      var columnsToRender = computed(function () {\n        var totalColumn = props.totalColumn,\n          totalRow = props.totalRow,\n          columnCache = props.columnCache;\n        var _unref = unref(states),\n          isScrolling = _unref.isScrolling,\n          xAxisScrollDir = _unref.xAxisScrollDir,\n          scrollLeft = _unref.scrollLeft;\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0];\n        }\n        var startIndex = getColumnStartIndexForOffset(props, scrollLeft, unref(cache));\n        var stopIndex = getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, unref(cache));\n        var cacheBackward = !isScrolling || xAxisScrollDir === BACKWARD ? Math.max(1, columnCache) : 1;\n        var cacheForward = !isScrolling || xAxisScrollDir === FORWARD ? Math.max(1, columnCache) : 1;\n        return [Math.max(0, startIndex - cacheBackward), Math.max(0, Math.min(totalColumn - 1, stopIndex + cacheForward)), startIndex, stopIndex];\n      });\n      var rowsToRender = computed(function () {\n        var totalColumn = props.totalColumn,\n          totalRow = props.totalRow,\n          rowCache = props.rowCache;\n        var _unref2 = unref(states),\n          isScrolling = _unref2.isScrolling,\n          yAxisScrollDir = _unref2.yAxisScrollDir,\n          scrollTop = _unref2.scrollTop;\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0];\n        }\n        var startIndex = getRowStartIndexForOffset(props, scrollTop, unref(cache));\n        var stopIndex = getRowStopIndexForStartIndex(props, startIndex, scrollTop, unref(cache));\n        var cacheBackward = !isScrolling || yAxisScrollDir === BACKWARD ? Math.max(1, rowCache) : 1;\n        var cacheForward = !isScrolling || yAxisScrollDir === FORWARD ? Math.max(1, rowCache) : 1;\n        return [Math.max(0, startIndex - cacheBackward), Math.max(0, Math.min(totalRow - 1, stopIndex + cacheForward)), startIndex, stopIndex];\n      });\n      var estimatedTotalHeight = computed(function () {\n        return getEstimatedTotalHeight(props, unref(cache));\n      });\n      var estimatedTotalWidth = computed(function () {\n        return getEstimatedTotalWidth(props, unref(cache));\n      });\n      var windowStyle = computed(function () {\n        var _a;\n        return [{\n          position: \"relative\",\n          overflow: \"hidden\",\n          WebkitOverflowScrolling: \"touch\",\n          willChange: \"transform\"\n        }, {\n          direction: props.direction,\n          height: isNumber(props.height) ? \"\".concat(props.height, \"px\") : props.height,\n          width: isNumber(props.width) ? \"\".concat(props.width, \"px\") : props.width\n        }, (_a = props.style) != null ? _a : {}];\n      });\n      var innerStyle = computed(function () {\n        var width = \"\".concat(unref(estimatedTotalWidth), \"px\");\n        var height = \"\".concat(unref(estimatedTotalHeight), \"px\");\n        return {\n          height: height,\n          pointerEvents: unref(states).isScrolling ? \"none\" : void 0,\n          width: width\n        };\n      });\n      var emitEvents = function emitEvents() {\n        var totalColumn = props.totalColumn,\n          totalRow = props.totalRow;\n        if (totalColumn > 0 && totalRow > 0) {\n          var _unref3 = unref(columnsToRender),\n            _unref4 = _slicedToArray(_unref3, 4),\n            columnCacheStart = _unref4[0],\n            columnCacheEnd = _unref4[1],\n            columnVisibleStart = _unref4[2],\n            columnVisibleEnd = _unref4[3];\n          var _unref5 = unref(rowsToRender),\n            _unref6 = _slicedToArray(_unref5, 4),\n            rowCacheStart = _unref6[0],\n            rowCacheEnd = _unref6[1],\n            rowVisibleStart = _unref6[2],\n            rowVisibleEnd = _unref6[3];\n          emit(ITEM_RENDER_EVT, {\n            columnCacheStart: columnCacheStart,\n            columnCacheEnd: columnCacheEnd,\n            rowCacheStart: rowCacheStart,\n            rowCacheEnd: rowCacheEnd,\n            columnVisibleStart: columnVisibleStart,\n            columnVisibleEnd: columnVisibleEnd,\n            rowVisibleStart: rowVisibleStart,\n            rowVisibleEnd: rowVisibleEnd\n          });\n        }\n        var _unref7 = unref(states),\n          scrollLeft = _unref7.scrollLeft,\n          scrollTop = _unref7.scrollTop,\n          updateRequested = _unref7.updateRequested,\n          xAxisScrollDir = _unref7.xAxisScrollDir,\n          yAxisScrollDir = _unref7.yAxisScrollDir;\n        emit(SCROLL_EVT, {\n          xAxisScrollDir: xAxisScrollDir,\n          scrollLeft: scrollLeft,\n          yAxisScrollDir: yAxisScrollDir,\n          scrollTop: scrollTop,\n          updateRequested: updateRequested\n        });\n      };\n      var onScroll = function onScroll(e) {\n        var _e$currentTarget = e.currentTarget,\n          clientHeight = _e$currentTarget.clientHeight,\n          clientWidth = _e$currentTarget.clientWidth,\n          scrollHeight = _e$currentTarget.scrollHeight,\n          scrollLeft = _e$currentTarget.scrollLeft,\n          scrollTop = _e$currentTarget.scrollTop,\n          scrollWidth = _e$currentTarget.scrollWidth;\n        var _states = unref(states);\n        if (_states.scrollTop === scrollTop && _states.scrollLeft === scrollLeft) {\n          return;\n        }\n        var _scrollLeft = scrollLeft;\n        if (isRTL(props.direction)) {\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG:\n              _scrollLeft = -scrollLeft;\n              break;\n            case RTL_OFFSET_POS_DESC:\n              _scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight)),\n          updateRequested: true,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, _scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop)\n        });\n        nextTick(function () {\n          return resetIsScrolling();\n        });\n        onUpdated();\n        emitEvents();\n      };\n      var onVerticalScroll = function onVerticalScroll(distance, totalSteps) {\n        var height = unref(parsedHeight);\n        var offset = (estimatedTotalHeight.value - height) / totalSteps * distance;\n        scrollTo({\n          scrollTop: Math.min(estimatedTotalHeight.value - height, offset)\n        });\n      };\n      var onHorizontalScroll = function onHorizontalScroll(distance, totalSteps) {\n        var width = unref(parsedWidth);\n        var offset = (estimatedTotalWidth.value - width) / totalSteps * distance;\n        scrollTo({\n          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset)\n        });\n      };\n      var _useGridWheel = useGridWheel({\n          atXStartEdge: computed(function () {\n            return states.value.scrollLeft <= 0;\n          }),\n          atXEndEdge: computed(function () {\n            return states.value.scrollLeft >= estimatedTotalWidth.value - unref(parsedWidth);\n          }),\n          atYStartEdge: computed(function () {\n            return states.value.scrollTop <= 0;\n          }),\n          atYEndEdge: computed(function () {\n            return states.value.scrollTop >= estimatedTotalHeight.value - unref(parsedHeight);\n          })\n        }, function (x, y) {\n          var _a, _b, _c, _d;\n          (_b = (_a = hScrollbar.value) == null ? void 0 : _a.onMouseUp) == null ? void 0 : _b.call(_a);\n          (_d = (_c = hScrollbar.value) == null ? void 0 : _c.onMouseUp) == null ? void 0 : _d.call(_c);\n          var width = unref(parsedWidth);\n          var height = unref(parsedHeight);\n          scrollTo({\n            scrollLeft: Math.min(states.value.scrollLeft + x, estimatedTotalWidth.value - width),\n            scrollTop: Math.min(states.value.scrollTop + y, estimatedTotalHeight.value - height)\n          });\n        }),\n        onWheel = _useGridWheel.onWheel;\n      var scrollTo = function scrollTo(_ref3) {\n        var _ref3$scrollLeft = _ref3.scrollLeft,\n          scrollLeft = _ref3$scrollLeft === void 0 ? states.value.scrollLeft : _ref3$scrollLeft,\n          _ref3$scrollTop = _ref3.scrollTop,\n          scrollTop = _ref3$scrollTop === void 0 ? states.value.scrollTop : _ref3$scrollTop;\n        scrollLeft = Math.max(scrollLeft, 0);\n        scrollTop = Math.max(scrollTop, 0);\n        var _states = unref(states);\n        if (scrollTop === _states.scrollTop && scrollLeft === _states.scrollLeft) {\n          return;\n        }\n        states.value = _objectSpread(_objectSpread({}, _states), {}, {\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          updateRequested: true\n        });\n        nextTick(function () {\n          return resetIsScrolling();\n        });\n        onUpdated();\n        emitEvents();\n      };\n      var scrollToItem = function scrollToItem() {\n        var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var columnIdx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var alignment = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : AUTO_ALIGNMENT;\n        var _states = unref(states);\n        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn - 1));\n        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow - 1));\n        var scrollBarWidth = getScrollBarWidth(ns.namespace.value);\n        var _cache = unref(cache);\n        var estimatedHeight = getEstimatedTotalHeight(props, _cache);\n        var estimatedWidth = getEstimatedTotalWidth(props, _cache);\n        scrollTo({\n          scrollLeft: getColumnOffset(props, columnIdx, alignment, _states.scrollLeft, _cache, estimatedWidth > props.width ? scrollBarWidth : 0),\n          scrollTop: getRowOffset(props, rowIndex, alignment, _states.scrollTop, _cache, estimatedHeight > props.height ? scrollBarWidth : 0)\n        });\n      };\n      var getItemStyle = function getItemStyle(rowIndex, columnIndex) {\n        var columnWidth = props.columnWidth,\n          direction = props.direction,\n          rowHeight = props.rowHeight;\n        var itemStyleCache = getItemStyleCache.value(clearCache && columnWidth, clearCache && rowHeight, clearCache && direction);\n        var key = \"\".concat(rowIndex, \",\").concat(columnIndex);\n        if (hasOwn(itemStyleCache, key)) {\n          return itemStyleCache[key];\n        } else {\n          var _getColumnPosition = getColumnPosition(props, columnIndex, unref(cache)),\n            _getColumnPosition2 = _slicedToArray(_getColumnPosition, 2),\n            left = _getColumnPosition2[1];\n          var _cache = unref(cache);\n          var rtl = isRTL(direction);\n          var _getRowPosition = getRowPosition(props, rowIndex, _cache),\n            _getRowPosition2 = _slicedToArray(_getRowPosition, 2),\n            height = _getRowPosition2[0],\n            top = _getRowPosition2[1];\n          var _getColumnPosition3 = getColumnPosition(props, columnIndex, _cache),\n            _getColumnPosition4 = _slicedToArray(_getColumnPosition3, 1),\n            width = _getColumnPosition4[0];\n          itemStyleCache[key] = {\n            position: \"absolute\",\n            left: rtl ? void 0 : \"\".concat(left, \"px\"),\n            right: rtl ? \"\".concat(left, \"px\") : void 0,\n            top: \"\".concat(top, \"px\"),\n            height: \"\".concat(height, \"px\"),\n            width: \"\".concat(width, \"px\")\n          };\n          return itemStyleCache[key];\n        }\n      };\n      var resetIsScrolling = function resetIsScrolling() {\n        states.value.isScrolling = false;\n        nextTick(function () {\n          getItemStyleCache.value(-1, null, null);\n        });\n      };\n      onMounted(function () {\n        if (!isClient) return;\n        var initScrollLeft = props.initScrollLeft,\n          initScrollTop = props.initScrollTop;\n        var windowElement = unref(windowRef);\n        if (windowElement) {\n          if (isNumber(initScrollLeft)) {\n            windowElement.scrollLeft = initScrollLeft;\n          }\n          if (isNumber(initScrollTop)) {\n            windowElement.scrollTop = initScrollTop;\n          }\n        }\n        emitEvents();\n      });\n      var onUpdated = function onUpdated() {\n        var direction = props.direction;\n        var _unref8 = unref(states),\n          scrollLeft = _unref8.scrollLeft,\n          scrollTop = _unref8.scrollTop,\n          updateRequested = _unref8.updateRequested;\n        var windowElement = unref(windowRef);\n        if (updateRequested && windowElement) {\n          if (direction === RTL) {\n            switch (getRTLOffsetType()) {\n              case RTL_OFFSET_NAG:\n                {\n                  windowElement.scrollLeft = -scrollLeft;\n                  break;\n                }\n              case RTL_OFFSET_POS_ASC:\n                {\n                  windowElement.scrollLeft = scrollLeft;\n                  break;\n                }\n              default:\n                {\n                  var clientWidth = windowElement.clientWidth,\n                    scrollWidth = windowElement.scrollWidth;\n                  windowElement.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n                  break;\n                }\n            }\n          } else {\n            windowElement.scrollLeft = Math.max(0, scrollLeft);\n          }\n          windowElement.scrollTop = Math.max(0, scrollTop);\n        }\n      };\n      var _instance$proxy = instance.proxy,\n        resetAfterColumnIndex = _instance$proxy.resetAfterColumnIndex,\n        resetAfterRowIndex = _instance$proxy.resetAfterRowIndex,\n        resetAfter = _instance$proxy.resetAfter;\n      expose({\n        windowRef: windowRef,\n        innerRef: innerRef,\n        getItemStyleCache: getItemStyleCache,\n        scrollTo: scrollTo,\n        scrollToItem: scrollToItem,\n        states: states,\n        resetAfterColumnIndex: resetAfterColumnIndex,\n        resetAfterRowIndex: resetAfterRowIndex,\n        resetAfter: resetAfter\n      });\n      var renderScrollbars = function renderScrollbars() {\n        var scrollbarAlwaysOn = props.scrollbarAlwaysOn,\n          scrollbarStartGap = props.scrollbarStartGap,\n          scrollbarEndGap = props.scrollbarEndGap,\n          totalColumn = props.totalColumn,\n          totalRow = props.totalRow;\n        var width = unref(parsedWidth);\n        var height = unref(parsedHeight);\n        var estimatedWidth = unref(estimatedTotalWidth);\n        var estimatedHeight = unref(estimatedTotalHeight);\n        var _unref9 = unref(states),\n          scrollLeft = _unref9.scrollLeft,\n          scrollTop = _unref9.scrollTop;\n        var horizontalScrollbar = h(ScrollBar, {\n          ref: hScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          \"class\": ns.e(\"horizontal\"),\n          clientSize: width,\n          layout: \"horizontal\",\n          onScroll: onHorizontalScroll,\n          ratio: width * 100 / estimatedWidth,\n          scrollFrom: scrollLeft / (estimatedWidth - width),\n          total: totalRow,\n          visible: true\n        });\n        var verticalScrollbar = h(ScrollBar, {\n          ref: vScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          \"class\": ns.e(\"vertical\"),\n          clientSize: height,\n          layout: \"vertical\",\n          onScroll: onVerticalScroll,\n          ratio: height * 100 / estimatedHeight,\n          scrollFrom: scrollTop / (estimatedHeight - height),\n          total: totalColumn,\n          visible: true\n        });\n        return {\n          horizontalScrollbar: horizontalScrollbar,\n          verticalScrollbar: verticalScrollbar\n        };\n      };\n      var renderItems = function renderItems() {\n        var _a;\n        var _unref10 = unref(columnsToRender),\n          _unref11 = _slicedToArray(_unref10, 2),\n          columnStart = _unref11[0],\n          columnEnd = _unref11[1];\n        var _unref12 = unref(rowsToRender),\n          _unref13 = _slicedToArray(_unref12, 2),\n          rowStart = _unref13[0],\n          rowEnd = _unref13[1];\n        var data = props.data,\n          totalColumn = props.totalColumn,\n          totalRow = props.totalRow,\n          useIsScrolling = props.useIsScrolling,\n          itemKey = props.itemKey;\n        var children = [];\n        if (totalRow > 0 && totalColumn > 0) {\n          for (var row = rowStart; row <= rowEnd; row++) {\n            for (var column = columnStart; column <= columnEnd; column++) {\n              children.push((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, {\n                columnIndex: column,\n                data: data,\n                key: itemKey({\n                  columnIndex: column,\n                  data: data,\n                  rowIndex: row\n                }),\n                isScrolling: useIsScrolling ? unref(states).isScrolling : void 0,\n                style: getItemStyle(row, column),\n                rowIndex: row\n              }));\n            }\n          }\n        }\n        return children;\n      };\n      var renderInner = function renderInner() {\n        var Inner = resolveDynamicComponent(props.innerElement);\n        var children = renderItems();\n        return [h(Inner, {\n          style: unref(innerStyle),\n          ref: innerRef\n        }, !isString(Inner) ? {\n          \"default\": function _default() {\n            return children;\n          }\n        } : children)];\n      };\n      var renderWindow = function renderWindow() {\n        var Container = resolveDynamicComponent(props.containerElement);\n        var _renderScrollbars = renderScrollbars(),\n          horizontalScrollbar = _renderScrollbars.horizontalScrollbar,\n          verticalScrollbar = _renderScrollbars.verticalScrollbar;\n        var Inner = renderInner();\n        return h(\"div\", {\n          key: 0,\n          \"class\": ns.e(\"wrapper\"),\n          role: props.role\n        }, [h(Container, {\n          \"class\": props.className,\n          style: unref(windowStyle),\n          onScroll: onScroll,\n          onWheel: onWheel,\n          ref: windowRef\n        }, !isString(Container) ? {\n          \"default\": function _default() {\n            return Inner;\n          }\n        } : Inner), horizontalScrollbar, verticalScrollbar]);\n      };\n      return renderWindow;\n    }\n  });\n};\nexport { createGrid as default };","map":{"version":3,"names":["createGrid","_ref","name","clearCache","getColumnPosition","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getEstimatedTotalHeight","getEstimatedTotalWidth","getColumnOffset","getRowOffset","getRowPosition","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initCache","injectToInstance","validateProps","defineComponent","props","virtualizedGridProps","emits","ITEM_RENDER_EVT","SCROLL_EVT","setup","_ref2","emit","expose","slots","ns","useNamespace","instance","getCurrentInstance","cache","ref","windowRef","hScrollbar","vScrollbar","innerRef","states","isScrolling","scrollLeft","isNumber","initScrollLeft","scrollTop","initScrollTop","updateRequested","xAxisScrollDir","FORWARD","yAxisScrollDir","getItemStyleCache","useCache","parsedHeight","computed","Number","parseInt","concat","height","parsedWidth","width","columnsToRender","totalColumn","totalRow","columnCache","_unref","unref","startIndex","stopIndex","cacheBackward","BACKWARD","Math","max","cacheForward","min","rowsToRender","rowCache","_unref2","estimatedTotalHeight","estimatedTotalWidth","windowStyle","_a","position","overflow","WebkitOverflowScrolling","willChange","direction","style","innerStyle","pointerEvents","emitEvents","_unref3","_unref4","_slicedToArray","columnCacheStart","columnCacheEnd","columnVisibleStart","columnVisibleEnd","_unref5","_unref6","rowCacheStart","rowCacheEnd","rowVisibleStart","rowVisibleEnd","_unref7","onScroll","e","_e$currentTarget","currentTarget","clientHeight","clientWidth","scrollHeight","scrollWidth","_states","_scrollLeft","isRTL","getRTLOffsetType","RTL_OFFSET_NAG","RTL_OFFSET_POS_DESC","value","_objectSpread","getScrollDir","nextTick","resetIsScrolling","onUpdated","onVerticalScroll","distance","totalSteps","offset","scrollTo","onHorizontalScroll","_useGridWheel","useGridWheel","atXStartEdge","atXEndEdge","atYStartEdge","atYEndEdge","x","y","_b","_c","_d","onMouseUp","call","onWheel","_ref3","_ref3$scrollLeft","_ref3$scrollTop","scrollToItem","rowIndex","arguments","length","undefined","columnIdx","alignment","AUTO_ALIGNMENT","scrollBarWidth","getScrollBarWidth","namespace","_cache","estimatedHeight","estimatedWidth","getItemStyle","columnIndex","columnWidth","rowHeight","itemStyleCache","key","hasOwn","_getColumnPosition","_getColumnPosition2","left","rtl","_getRowPosition","_getRowPosition2","top","_getColumnPosition3","_getColumnPosition4","right","onMounted","isClient","windowElement","_unref8","RTL","RTL_OFFSET_POS_ASC","_instance$proxy","proxy","resetAfterColumnIndex","resetAfterRowIndex","resetAfter","renderScrollbars","scrollbarAlwaysOn","scrollbarStartGap","scrollbarEndGap","_unref9","horizontalScrollbar","h","ScrollBar","alwaysOn","startGap","endGap","clientSize","layout","ratio","scrollFrom","total","visible","verticalScrollbar","renderItems","_unref10","_unref11","columnStart","columnEnd","_unref12","_unref13","rowStart","rowEnd","data","useIsScrolling","itemKey","children","row","column","push","renderInner","Inner","resolveDynamicComponent","innerElement","isString","_default","renderWindow","Container","containerElement","_renderScrollbars","role","className"],"sources":["../../../../../../../packages/components/virtual-list/src/builders/build-grid.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  h,\n  nextTick,\n  onMounted,\n  ref,\n  resolveDynamicComponent,\n  unref,\n} from 'vue'\nimport {\n  getScrollBarWidth,\n  hasOwn,\n  isClient,\n  isNumber,\n  isString,\n} from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport Scrollbar from '../components/scrollbar'\nimport { useGridWheel } from '../hooks/use-grid-wheel'\nimport { useCache } from '../hooks/use-cache'\nimport { virtualizedGridProps } from '../props'\nimport { getRTLOffsetType, getScrollDir, isRTL } from '../utils'\nimport {\n  AUTO_ALIGNMENT,\n  BACKWARD,\n  FORWARD,\n  ITEM_RENDER_EVT,\n  RTL,\n  RTL_OFFSET_NAG,\n  RTL_OFFSET_POS_ASC,\n  RTL_OFFSET_POS_DESC,\n  SCROLL_EVT,\n} from '../defaults'\nimport type {\n  CSSProperties,\n  Ref,\n  StyleValue,\n  UnwrapRef,\n  VNode,\n  VNodeChild,\n} from 'vue'\nimport type {\n  Alignment,\n  GridConstructorProps,\n  GridScrollOptions,\n  ScrollbarExpose,\n} from '../types'\nimport type { VirtualizedGridProps } from '../props'\n\nconst createGrid = ({\n  name,\n  clearCache,\n  getColumnPosition,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getColumnOffset,\n  getRowOffset,\n  getRowPosition,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n\n  initCache,\n  injectToInstance,\n  validateProps,\n}: GridConstructorProps<VirtualizedGridProps>) => {\n  return defineComponent({\n    name: name ?? 'ElVirtualList',\n    props: virtualizedGridProps,\n    emits: [ITEM_RENDER_EVT, SCROLL_EVT],\n    setup(props, { emit, expose, slots }) {\n      const ns = useNamespace('vl')\n\n      validateProps(props)\n      const instance = getCurrentInstance()!\n      const cache = ref(initCache(props, instance))\n      injectToInstance?.(instance, cache)\n      // refs\n      // here windowRef and innerRef can be type of HTMLElement\n      // or user defined component type, depends on the type passed\n      // by user\n      const windowRef = ref<HTMLElement>()\n      const hScrollbar = ref<ScrollbarExpose>()\n      const vScrollbar = ref<ScrollbarExpose>()\n      // innerRef is the actual container element which contains all the elements\n      const innerRef = ref(null)\n      const states = ref({\n        isScrolling: false,\n        scrollLeft: isNumber(props.initScrollLeft) ? props.initScrollLeft : 0,\n        scrollTop: isNumber(props.initScrollTop) ? props.initScrollTop : 0,\n        updateRequested: false,\n        xAxisScrollDir: FORWARD,\n        yAxisScrollDir: FORWARD,\n      })\n\n      const getItemStyleCache = useCache()\n\n      // computed\n      const parsedHeight = computed(() =>\n        Number.parseInt(`${props.height}`, 10)\n      )\n      const parsedWidth = computed(() => Number.parseInt(`${props.width}`, 10))\n      const columnsToRender = computed(() => {\n        const { totalColumn, totalRow, columnCache } = props\n        const { isScrolling, xAxisScrollDir, scrollLeft } = unref(states)\n\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getColumnStartIndexForOffset(\n          props,\n          scrollLeft,\n          unref(cache)\n        )\n        const stopIndex = getColumnStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollLeft,\n          unref(cache)\n        )\n\n        const cacheBackward =\n          !isScrolling || xAxisScrollDir === BACKWARD\n            ? Math.max(1, columnCache)\n            : 1\n        const cacheForward =\n          !isScrolling || xAxisScrollDir === FORWARD\n            ? Math.max(1, columnCache)\n            : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(totalColumn! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const rowsToRender = computed(() => {\n        const { totalColumn, totalRow, rowCache } = props\n        const { isScrolling, yAxisScrollDir, scrollTop } = unref(states)\n\n        if (totalColumn === 0 || totalRow === 0) {\n          return [0, 0, 0, 0]\n        }\n\n        const startIndex = getRowStartIndexForOffset(\n          props,\n          scrollTop,\n          unref(cache)\n        )\n        const stopIndex = getRowStopIndexForStartIndex(\n          props,\n          startIndex,\n          scrollTop,\n          unref(cache)\n        )\n\n        const cacheBackward =\n          !isScrolling || yAxisScrollDir === BACKWARD\n            ? Math.max(1, rowCache)\n            : 1\n        const cacheForward =\n          !isScrolling || yAxisScrollDir === FORWARD ? Math.max(1, rowCache) : 1\n\n        return [\n          Math.max(0, startIndex - cacheBackward),\n          Math.max(0, Math.min(totalRow! - 1, stopIndex + cacheForward)),\n          startIndex,\n          stopIndex,\n        ]\n      })\n\n      const estimatedTotalHeight = computed(() =>\n        getEstimatedTotalHeight(props, unref(cache))\n      )\n      const estimatedTotalWidth = computed(() =>\n        getEstimatedTotalWidth(props, unref(cache))\n      )\n\n      const windowStyle = computed<StyleValue>(() => [\n        {\n          position: 'relative',\n          overflow: 'hidden',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n        },\n        {\n          direction: props.direction,\n          height: isNumber(props.height) ? `${props.height}px` : props.height,\n          width: isNumber(props.width) ? `${props.width}px` : props.width,\n        },\n        props.style ?? {},\n      ])\n\n      const innerStyle = computed(() => {\n        const width = `${unref(estimatedTotalWidth)}px`\n        const height = `${unref(estimatedTotalHeight)}px`\n\n        return {\n          height,\n          pointerEvents: unref(states).isScrolling ? 'none' : undefined,\n          width,\n        }\n      })\n\n      // methods\n      const emitEvents = () => {\n        const { totalColumn, totalRow } = props\n\n        if (totalColumn! > 0 && totalRow! > 0) {\n          const [\n            columnCacheStart,\n            columnCacheEnd,\n            columnVisibleStart,\n            columnVisibleEnd,\n          ] = unref(columnsToRender)\n          const [rowCacheStart, rowCacheEnd, rowVisibleStart, rowVisibleEnd] =\n            unref(rowsToRender)\n          // emit the render item event with\n          // [xAxisInvisibleStart, xAxisInvisibleEnd, xAxisVisibleStart, xAxisVisibleEnd]\n          // [yAxisInvisibleStart, yAxisInvisibleEnd, yAxisVisibleStart, yAxisVisibleEnd]\n          emit(ITEM_RENDER_EVT, {\n            columnCacheStart,\n            columnCacheEnd,\n            rowCacheStart,\n            rowCacheEnd,\n            columnVisibleStart,\n            columnVisibleEnd,\n            rowVisibleStart,\n            rowVisibleEnd,\n          })\n        }\n\n        const {\n          scrollLeft,\n          scrollTop,\n          updateRequested,\n          xAxisScrollDir,\n          yAxisScrollDir,\n        } = unref(states)\n        emit(SCROLL_EVT, {\n          xAxisScrollDir,\n          scrollLeft,\n          yAxisScrollDir,\n          scrollTop,\n          updateRequested,\n        })\n      }\n\n      const onScroll = (e: Event) => {\n        const {\n          clientHeight,\n          clientWidth,\n          scrollHeight,\n          scrollLeft,\n          scrollTop,\n          scrollWidth,\n        } = e.currentTarget as HTMLElement\n\n        const _states = unref(states)\n\n        if (\n          _states.scrollTop === scrollTop &&\n          _states.scrollLeft === scrollLeft\n        ) {\n          return\n        }\n\n        let _scrollLeft = scrollLeft\n\n        if (isRTL(props.direction)) {\n          switch (getRTLOffsetType()) {\n            case RTL_OFFSET_NAG:\n              _scrollLeft = -scrollLeft\n              break\n            case RTL_OFFSET_POS_DESC:\n              _scrollLeft = scrollWidth - clientWidth - scrollLeft\n              break\n          }\n        }\n\n        states.value = {\n          ..._states,\n          isScrolling: true,\n          scrollLeft: _scrollLeft,\n          scrollTop: Math.max(\n            0,\n            Math.min(scrollTop, scrollHeight - clientHeight)\n          ),\n          updateRequested: true,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, _scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n        }\n\n        nextTick(() => resetIsScrolling())\n\n        onUpdated()\n        emitEvents()\n      }\n\n      const onVerticalScroll = (distance: number, totalSteps: number) => {\n        const height = unref(parsedHeight)\n        const offset =\n          ((estimatedTotalHeight.value - height) / totalSteps) * distance\n        scrollTo({\n          scrollTop: Math.min(estimatedTotalHeight.value - height, offset),\n        })\n      }\n\n      const onHorizontalScroll = (distance: number, totalSteps: number) => {\n        const width = unref(parsedWidth)\n        const offset =\n          ((estimatedTotalWidth.value - width) / totalSteps) * distance\n        scrollTo({\n          scrollLeft: Math.min(estimatedTotalWidth.value - width, offset),\n        })\n      }\n\n      const { onWheel } = useGridWheel(\n        {\n          atXStartEdge: computed(() => states.value.scrollLeft <= 0),\n          atXEndEdge: computed(\n            () =>\n              states.value.scrollLeft >=\n              estimatedTotalWidth.value - unref(parsedWidth)\n          ),\n          atYStartEdge: computed(() => states.value.scrollTop <= 0),\n          atYEndEdge: computed(\n            () =>\n              states.value.scrollTop >=\n              estimatedTotalHeight.value - unref(parsedHeight)\n          ),\n        },\n        (x: number, y: number) => {\n          hScrollbar.value?.onMouseUp?.()\n          hScrollbar.value?.onMouseUp?.()\n          const width = unref(parsedWidth)\n          const height = unref(parsedHeight)\n          scrollTo({\n            scrollLeft: Math.min(\n              states.value.scrollLeft + x,\n              estimatedTotalWidth.value - width\n            ),\n            scrollTop: Math.min(\n              states.value.scrollTop + y,\n              estimatedTotalHeight.value - height\n            ),\n          })\n        }\n      )\n\n      const scrollTo = ({\n        scrollLeft = states.value.scrollLeft,\n        scrollTop = states.value.scrollTop,\n      }: GridScrollOptions) => {\n        scrollLeft = Math.max(scrollLeft, 0)\n        scrollTop = Math.max(scrollTop, 0)\n        const _states = unref(states)\n        if (\n          scrollTop === _states.scrollTop &&\n          scrollLeft === _states.scrollLeft\n        ) {\n          return\n        }\n\n        states.value = {\n          ..._states,\n          xAxisScrollDir: getScrollDir(_states.scrollLeft, scrollLeft),\n          yAxisScrollDir: getScrollDir(_states.scrollTop, scrollTop),\n          scrollLeft,\n          scrollTop,\n          updateRequested: true,\n        }\n\n        nextTick(() => resetIsScrolling())\n\n        onUpdated()\n        emitEvents()\n      }\n\n      const scrollToItem = (\n        rowIndex = 0,\n        columnIdx = 0,\n        alignment: Alignment = AUTO_ALIGNMENT\n      ) => {\n        const _states = unref(states)\n        columnIdx = Math.max(0, Math.min(columnIdx, props.totalColumn! - 1))\n        rowIndex = Math.max(0, Math.min(rowIndex, props.totalRow! - 1))\n        const scrollBarWidth = getScrollBarWidth(ns.namespace.value)\n\n        const _cache = unref(cache)\n        const estimatedHeight = getEstimatedTotalHeight(props, _cache)\n        const estimatedWidth = getEstimatedTotalWidth(props, _cache)\n\n        scrollTo({\n          scrollLeft: getColumnOffset(\n            props,\n            columnIdx,\n            alignment,\n            _states.scrollLeft,\n            _cache,\n            estimatedWidth > props.width! ? scrollBarWidth : 0\n          ),\n          scrollTop: getRowOffset(\n            props,\n            rowIndex,\n            alignment,\n            _states.scrollTop,\n            _cache,\n            estimatedHeight > props.height! ? scrollBarWidth : 0\n          ),\n        })\n      }\n\n      const getItemStyle = (\n        rowIndex: number,\n        columnIndex: number\n      ): CSSProperties => {\n        const { columnWidth, direction, rowHeight } = props\n        const itemStyleCache = getItemStyleCache.value(\n          clearCache && columnWidth,\n          clearCache && rowHeight,\n          clearCache && direction\n        )\n        // since there was no need to introduce an nested array into cache object\n        // we use row,column to construct the key for indexing the map.\n        const key = `${rowIndex},${columnIndex}`\n\n        if (hasOwn(itemStyleCache, key)) {\n          return itemStyleCache[key]\n        } else {\n          const [, left] = getColumnPosition(props, columnIndex, unref(cache))\n          const _cache = unref(cache)\n\n          const rtl = isRTL(direction)\n          const [height, top] = getRowPosition(props, rowIndex, _cache)\n          const [width] = getColumnPosition(props, columnIndex, _cache)\n\n          itemStyleCache[key] = {\n            position: 'absolute',\n            left: rtl ? undefined : `${left}px`,\n            right: rtl ? `${left}px` : undefined,\n            top: `${top}px`,\n            height: `${height}px`,\n            width: `${width}px`,\n          }\n\n          return itemStyleCache[key]\n        }\n      }\n\n      // TODO: debounce setting is scrolling.\n\n      const resetIsScrolling = () => {\n        // timer = null\n\n        states.value.isScrolling = false\n        nextTick(() => {\n          getItemStyleCache.value(-1, null, null)\n        })\n      }\n\n      // life cycles\n      onMounted(() => {\n        // for SSR\n        if (!isClient) return\n        const { initScrollLeft, initScrollTop } = props\n        const windowElement = unref(windowRef)\n        if (windowElement) {\n          if (isNumber(initScrollLeft)) {\n            windowElement.scrollLeft = initScrollLeft\n          }\n          if (isNumber(initScrollTop)) {\n            windowElement.scrollTop = initScrollTop\n          }\n        }\n        emitEvents()\n      })\n\n      const onUpdated = () => {\n        const { direction } = props\n        const { scrollLeft, scrollTop, updateRequested } = unref(states)\n\n        const windowElement = unref(windowRef)\n        if (updateRequested && windowElement) {\n          if (direction === RTL) {\n            switch (getRTLOffsetType()) {\n              case RTL_OFFSET_NAG: {\n                windowElement.scrollLeft = -scrollLeft\n                break\n              }\n              case RTL_OFFSET_POS_ASC: {\n                windowElement.scrollLeft = scrollLeft\n                break\n              }\n              default: {\n                const { clientWidth, scrollWidth } = windowElement\n                windowElement.scrollLeft =\n                  scrollWidth - clientWidth - scrollLeft\n                break\n              }\n            }\n          } else {\n            windowElement.scrollLeft = Math.max(0, scrollLeft)\n          }\n\n          windowElement.scrollTop = Math.max(0, scrollTop)\n        }\n      }\n\n      const { resetAfterColumnIndex, resetAfterRowIndex, resetAfter } =\n        instance.proxy as any\n\n      expose({\n        windowRef,\n        innerRef,\n        getItemStyleCache,\n        scrollTo,\n        scrollToItem,\n        states,\n        resetAfterColumnIndex,\n        resetAfterRowIndex,\n        resetAfter,\n      })\n\n      // rendering part\n\n      const renderScrollbars = () => {\n        const {\n          scrollbarAlwaysOn,\n          scrollbarStartGap,\n          scrollbarEndGap,\n          totalColumn,\n          totalRow,\n        } = props\n\n        const width = unref(parsedWidth)\n        const height = unref(parsedHeight)\n        const estimatedWidth = unref(estimatedTotalWidth)\n        const estimatedHeight = unref(estimatedTotalHeight)\n        const { scrollLeft, scrollTop } = unref(states)\n        const horizontalScrollbar = h(Scrollbar, {\n          ref: hScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          class: ns.e('horizontal'),\n          clientSize: width,\n          layout: 'horizontal',\n          onScroll: onHorizontalScroll,\n          ratio: (width * 100) / estimatedWidth,\n          scrollFrom: scrollLeft / (estimatedWidth - width),\n          total: totalRow,\n          visible: true,\n        })\n\n        const verticalScrollbar = h(Scrollbar, {\n          ref: vScrollbar,\n          alwaysOn: scrollbarAlwaysOn,\n          startGap: scrollbarStartGap,\n          endGap: scrollbarEndGap,\n          class: ns.e('vertical'),\n          clientSize: height,\n          layout: 'vertical',\n          onScroll: onVerticalScroll,\n          ratio: (height * 100) / estimatedHeight,\n          scrollFrom: scrollTop / (estimatedHeight - height),\n\n          total: totalColumn,\n          visible: true,\n        })\n\n        return {\n          horizontalScrollbar,\n          verticalScrollbar,\n        }\n      }\n\n      const renderItems = () => {\n        const [columnStart, columnEnd] = unref(columnsToRender)\n        const [rowStart, rowEnd] = unref(rowsToRender)\n        const { data, totalColumn, totalRow, useIsScrolling, itemKey } = props\n        const children: VNodeChild[] = []\n        if (totalRow > 0 && totalColumn > 0) {\n          for (let row = rowStart; row <= rowEnd; row++) {\n            for (let column = columnStart; column <= columnEnd; column++) {\n              children.push(\n                slots.default?.({\n                  columnIndex: column,\n                  data,\n                  key: itemKey({ columnIndex: column, data, rowIndex: row }),\n                  isScrolling: useIsScrolling\n                    ? unref(states).isScrolling\n                    : undefined,\n                  style: getItemStyle(row, column),\n                  rowIndex: row,\n                })\n              )\n            }\n          }\n        }\n        return children\n      }\n\n      const renderInner = () => {\n        const Inner = resolveDynamicComponent(props.innerElement) as VNode\n        const children = renderItems()\n        return [\n          h(\n            Inner,\n            {\n              style: unref(innerStyle),\n              ref: innerRef,\n            },\n            !isString(Inner)\n              ? {\n                  default: () => children,\n                }\n              : children\n          ),\n        ]\n      }\n\n      const renderWindow = () => {\n        const Container = resolveDynamicComponent(\n          props.containerElement\n        ) as VNode\n        const { horizontalScrollbar, verticalScrollbar } = renderScrollbars()\n        const Inner = renderInner()\n\n        return h(\n          'div',\n          {\n            key: 0,\n            class: ns.e('wrapper'),\n            role: props.role,\n          },\n          [\n            h(\n              Container,\n              {\n                class: props.className,\n                style: unref(windowStyle),\n                onScroll,\n                onWheel,\n                ref: windowRef,\n              },\n              !isString(Container) ? { default: () => Inner } : Inner\n            ),\n            horizontalScrollbar,\n            verticalScrollbar,\n          ]\n        )\n      }\n\n      return renderWindow\n    },\n  })\n}\n\nexport default createGrid\n\ntype Dir = typeof FORWARD | typeof BACKWARD\n\nexport type GridInstance = InstanceType<ReturnType<typeof createGrid>> &\n  UnwrapRef<{\n    windowRef: Ref<HTMLElement>\n    innerRef: Ref<HTMLElement>\n    getItemStyleCache: ReturnType<typeof useCache>\n    scrollTo: (scrollOptions: GridScrollOptions) => void\n    scrollToItem: (\n      rowIndex: number,\n      columnIndex: number,\n      alignment: Alignment\n    ) => void\n    states: Ref<{\n      isScrolling: boolean\n      scrollLeft: number\n      scrollTop: number\n      updateRequested: boolean\n      xAxisScrollDir: Dir\n      yAxisScrollDir: Dir\n    }>\n  }>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}