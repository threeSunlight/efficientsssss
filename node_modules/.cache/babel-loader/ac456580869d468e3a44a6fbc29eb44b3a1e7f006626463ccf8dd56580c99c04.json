{"ast":null,"code":"import { defineComponent, inject, ref, computed, watch, unref, createVNode, mergeProps } from 'vue';\nimport { get } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport '../../virtual-list/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../constants/index.mjs';\nimport GroupItem from './group-item.mjs';\nimport OptionItem from './option-item.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isUndefined } from '../../../utils/types.mjs';\nimport { isObject } from '@vue/shared';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport FixedSizeList from '../../virtual-list/src/components/fixed-size-list.mjs';\nimport DynamicSizeList from '../../virtual-list/src/components/dynamic-size-list.mjs';\nvar ElSelectMenu = defineComponent({\n  name: \"ElSelectDropdown\",\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    hoveringIndex: Number,\n    width: Number\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots,\n      expose = _ref.expose;\n    var select = inject(selectV2InjectionKey);\n    var ns = useNamespace(\"select\");\n    var cachedHeights = ref([]);\n    var listRef = ref();\n    var size = computed(function () {\n      return props.data.length;\n    });\n    watch(function () {\n      return size.value;\n    }, function () {\n      var _a, _b;\n      (_b = (_a = select.popper.value).updatePopper) == null ? void 0 : _b.call(_a);\n    });\n    var isSized = computed(function () {\n      return isUndefined(select.props.estimatedOptionHeight);\n    });\n    var listProps = computed(function () {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight\n        };\n      }\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: function itemSize(idx) {\n          return cachedHeights.value[idx];\n        }\n      };\n    });\n    var contains = function contains() {\n      var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var target = arguments.length > 1 ? arguments[1] : undefined;\n      var valueKey = select.props.valueKey;\n      if (!isObject(target)) {\n        return arr.includes(target);\n      }\n      return arr && arr.some(function (item) {\n        return get(item, valueKey) === get(target, valueKey);\n      });\n    };\n    var isEqual = function isEqual(selected, target) {\n      if (!isObject(target)) {\n        return selected === target;\n      } else {\n        var valueKey = select.props.valueKey;\n        return get(selected, valueKey) === get(target, valueKey);\n      }\n    };\n    var isItemSelected = function isItemSelected(modelValue, target) {\n      var valueKey = select.props.valueKey;\n      if (select.props.multiple) {\n        return contains(modelValue, get(target, valueKey));\n      }\n      return isEqual(modelValue, get(target, valueKey));\n    };\n    var isItemDisabled = function isItemDisabled(modelValue, selected) {\n      var _select$props = select.props,\n        disabled = _select$props.disabled,\n        multiple = _select$props.multiple,\n        multipleLimit = _select$props.multipleLimit;\n      return disabled || !selected && (multiple ? multipleLimit > 0 && modelValue.length >= multipleLimit : false);\n    };\n    var isItemHovering = function isItemHovering(target) {\n      return props.hoveringIndex === target;\n    };\n    var scrollToItem = function scrollToItem(index) {\n      var list = listRef.value;\n      if (list) {\n        list.scrollToItem(index);\n      }\n    };\n    var resetScrollTop = function resetScrollTop() {\n      var list = listRef.value;\n      if (list) {\n        list.resetScrollTop();\n      }\n    };\n    expose({\n      listRef: listRef,\n      isSized: isSized,\n      isItemDisabled: isItemDisabled,\n      isItemHovering: isItemHovering,\n      isItemSelected: isItemSelected,\n      scrollToItem: scrollToItem,\n      resetScrollTop: resetScrollTop\n    });\n    var Item = function Item(itemProps) {\n      var index = itemProps.index,\n        data = itemProps.data,\n        style = itemProps.style;\n      var sized = unref(isSized);\n      var _unref = unref(listProps),\n        itemSize = _unref.itemSize,\n        estimatedSize = _unref.estimatedSize;\n      var modelValue = select.props.modelValue;\n      var onSelect = select.onSelect,\n        onHover = select.onHover;\n      var item = data[index];\n      if (item.type === \"Group\") {\n        return createVNode(GroupItem, {\n          \"item\": item,\n          \"style\": style,\n          \"height\": sized ? itemSize : estimatedSize\n        }, null);\n      }\n      var isSelected = isItemSelected(modelValue, item);\n      var isDisabled = isItemDisabled(modelValue, isSelected);\n      var isHovering = isItemHovering(index);\n      return createVNode(OptionItem, mergeProps(itemProps, {\n        \"selected\": isSelected,\n        \"disabled\": item.disabled || isDisabled,\n        \"created\": !!item.created,\n        \"hovering\": isHovering,\n        \"item\": item,\n        \"onSelect\": onSelect,\n        \"onHover\": onHover\n      }), {\n        \"default\": function _default(props2) {\n          var _a;\n          return ((_a = slots[\"default\"]) == null ? void 0 : _a.call(slots, props2)) || createVNode(\"span\", null, [item.label]);\n        }\n      });\n    };\n    var onKeyboardNavigate = select.onKeyboardNavigate,\n      onKeyboardSelect = select.onKeyboardSelect;\n    var onForward = function onForward() {\n      onKeyboardNavigate(\"forward\");\n    };\n    var onBackward = function onBackward() {\n      onKeyboardNavigate(\"backward\");\n    };\n    var onEscOrTab = function onEscOrTab() {\n      select.expanded = false;\n    };\n    var onKeydown = function onKeydown(e) {\n      var code = e.code;\n      var tab = EVENT_CODE.tab,\n        esc = EVENT_CODE.esc,\n        down = EVENT_CODE.down,\n        up = EVENT_CODE.up,\n        enter = EVENT_CODE.enter;\n      if (code !== tab) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      switch (code) {\n        case tab:\n        case esc:\n          {\n            onEscOrTab();\n            break;\n          }\n        case down:\n          {\n            onForward();\n            break;\n          }\n        case up:\n          {\n            onBackward();\n            break;\n          }\n        case enter:\n          {\n            onKeyboardSelect();\n            break;\n          }\n      }\n    };\n    return function () {\n      var _a;\n      var data = props.data,\n        width = props.width;\n      var _select$props2 = select.props,\n        height = _select$props2.height,\n        multiple = _select$props2.multiple,\n        scrollbarAlwaysOn = _select$props2.scrollbarAlwaysOn;\n      if (data.length === 0) {\n        return createVNode(\"div\", {\n          \"class\": ns.b(\"dropdown\"),\n          \"style\": {\n            width: \"\".concat(width, \"px\")\n          }\n        }, [(_a = slots.empty) == null ? void 0 : _a.call(slots)]);\n      }\n      var List = unref(isSized) ? FixedSizeList : DynamicSizeList;\n      return createVNode(\"div\", {\n        \"class\": [ns.b(\"dropdown\"), ns.is(\"multiple\", multiple)]\n      }, [createVNode(List, mergeProps({\n        \"ref\": listRef\n      }, unref(listProps), {\n        \"className\": ns.be(\"dropdown\", \"list\"),\n        \"scrollbarAlwaysOn\": scrollbarAlwaysOn,\n        \"data\": data,\n        \"height\": height,\n        \"width\": width,\n        \"total\": data.length,\n        \"onKeydown\": onKeydown\n      }), {\n        \"default\": function _default(props2) {\n          return createVNode(Item, props2, null);\n        }\n      })]);\n    };\n  }\n});\nexport { ElSelectMenu as default };","map":{"version":3,"names":["ElSelectMenu","defineComponent","name","props","data","type","Array","required","hoveringIndex","Number","width","slots","_ref","expose","select","inject","selectV2InjectionKey","ns","useNamespace","cachedHeights","ref","listRef","size","computed","length","watch","value","_a","_b","popper","updatePopper","call","isSized","isUndefined","estimatedOptionHeight","listProps","itemSize","itemHeight","estimatedSize","idx","contains","arr","arguments","undefined","target","valueKey","isObject","includes","some","item","get","isEqual","selected","isItemSelected","modelValue","multiple","isItemDisabled","disabled","_select$props","multipleLimit","scrollToItem","index","list","resetScrollTop","isItemHovering","style","sized","unref","_unref","onHover","createVNode","GroupItem","isSelected","isDisabled","isHovering","OptionItem","mergeProps","itemProps","created","_default","props2","label","onKeyboardNavigate","onKeyboardSelect","onForward","onBackward","onEscOrTab","expanded","onKeydown","e","tab","EVENT_CODE","esc","down","enter","code","stopPropagation","up","_select$props2","scrollbarAlwaysOn","b","concat","empty","List","FixedSizeList","DynamicSizeList","is","be","height","Item"],"sources":["../../../../../../packages/components/select-v2/src/select-dropdown.tsx"],"sourcesContent":["import { computed, defineComponent, inject, ref, unref, watch } from 'vue'\nimport { get } from 'lodash-unified'\nimport { isObject, isUndefined } from '@element-plus/utils'\nimport {\n  DynamicSizeList,\n  FixedSizeList,\n} from '@element-plus/components/virtual-list'\nimport { useNamespace } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport GroupItem from './group-item.vue'\nimport OptionItem from './option-item.vue'\n\nimport { selectV2InjectionKey } from './token'\n\nimport type { ItemProps } from '@element-plus/components/virtual-list'\nimport type { Option, OptionItemProps } from './select.types'\n\nexport default defineComponent({\n  name: 'ElSelectDropdown',\n\n  props: {\n    data: {\n      type: Array,\n      required: true,\n    },\n    hoveringIndex: Number,\n    width: Number,\n  },\n  setup(props, { slots, expose }) {\n    const select = inject(selectV2InjectionKey)!\n    const ns = useNamespace('select')\n    const cachedHeights = ref<Array<number>>([])\n\n    const listRef = ref()\n\n    const size = computed(() => props.data.length)\n    watch(\n      () => size.value,\n      () => {\n        select.popper.value.updatePopper?.()\n      }\n    )\n\n    const isSized = computed(() =>\n      isUndefined(select.props.estimatedOptionHeight)\n    )\n    const listProps = computed(() => {\n      if (isSized.value) {\n        return {\n          itemSize: select.props.itemHeight,\n        }\n      }\n\n      return {\n        estimatedSize: select.props.estimatedOptionHeight,\n        itemSize: (idx: number) => cachedHeights.value[idx],\n      }\n    })\n\n    const contains = (arr: Array<any> = [], target: any) => {\n      const {\n        props: { valueKey },\n      } = select\n\n      if (!isObject(target)) {\n        return arr.includes(target)\n      }\n\n      return (\n        arr &&\n        arr.some((item) => {\n          return get(item, valueKey) === get(target, valueKey)\n        })\n      )\n    }\n    const isEqual = (selected: unknown, target: unknown) => {\n      if (!isObject(target)) {\n        return selected === target\n      } else {\n        const { valueKey } = select.props\n        return get(selected, valueKey) === get(target, valueKey)\n      }\n    }\n\n    const isItemSelected = (modelValue: any[] | any, target: Option) => {\n      const { valueKey } = select.props\n      if (select.props.multiple) {\n        return contains(modelValue, get(target, valueKey))\n      }\n      return isEqual(modelValue, get(target, valueKey))\n    }\n\n    const isItemDisabled = (modelValue: any[] | any, selected: boolean) => {\n      const { disabled, multiple, multipleLimit } = select.props\n      return (\n        disabled ||\n        (!selected &&\n          (multiple\n            ? multipleLimit > 0 && modelValue.length >= multipleLimit\n            : false))\n      )\n    }\n\n    const isItemHovering = (target: number) => props.hoveringIndex === target\n\n    const scrollToItem = (index: number) => {\n      const list = listRef.value as any\n      if (list) {\n        list.scrollToItem(index)\n      }\n    }\n\n    const resetScrollTop = () => {\n      const list = listRef.value as any\n      if (list) {\n        list.resetScrollTop()\n      }\n    }\n\n    expose({\n      listRef,\n      isSized,\n\n      isItemDisabled,\n      isItemHovering,\n      isItemSelected,\n      scrollToItem,\n      resetScrollTop,\n    })\n\n    const Item = (itemProps: ItemProps<any>) => {\n      const { index, data, style } = itemProps\n      const sized = unref(isSized)\n      const { itemSize, estimatedSize } = unref(listProps)\n      const { modelValue } = select.props\n      const { onSelect, onHover } = select\n      const item = data[index]\n      if (item.type === 'Group') {\n        return (\n          <GroupItem\n            item={item}\n            style={style}\n            height={(sized ? itemSize : estimatedSize) as number}\n          />\n        )\n      }\n\n      const isSelected = isItemSelected(modelValue, item)\n      const isDisabled = isItemDisabled(modelValue, isSelected)\n      const isHovering = isItemHovering(index)\n      return (\n        <OptionItem\n          {...itemProps}\n          selected={isSelected}\n          disabled={item.disabled || isDisabled}\n          created={!!item.created}\n          hovering={isHovering}\n          item={item}\n          onSelect={onSelect}\n          onHover={onHover}\n        >\n          {{\n            default: (props: OptionItemProps) =>\n              slots.default?.(props) || <span>{item.label}</span>,\n          }}\n        </OptionItem>\n      )\n    }\n\n    // computed\n    const { onKeyboardNavigate, onKeyboardSelect } = select\n\n    const onForward = () => {\n      onKeyboardNavigate('forward')\n    }\n\n    const onBackward = () => {\n      onKeyboardNavigate('backward')\n    }\n\n    const onEscOrTab = () => {\n      select.expanded = false\n    }\n\n    const onKeydown = (e: KeyboardEvent) => {\n      const { code } = e\n      const { tab, esc, down, up, enter } = EVENT_CODE\n      if (code !== tab) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      switch (code) {\n        case tab:\n        case esc: {\n          onEscOrTab()\n          break\n        }\n        case down: {\n          onForward()\n          break\n        }\n        case up: {\n          onBackward()\n          break\n        }\n        case enter: {\n          onKeyboardSelect()\n          break\n        }\n      }\n    }\n\n    return () => {\n      const { data, width } = props\n      const { height, multiple, scrollbarAlwaysOn } = select.props\n\n      if (data.length === 0) {\n        return (\n          <div\n            class={ns.b('dropdown')}\n            style={{\n              width: `${width}px`,\n            }}\n          >\n            {slots.empty?.()}\n          </div>\n        )\n      }\n\n      const List = unref(isSized) ? FixedSizeList : DynamicSizeList\n\n      return (\n        <div class={[ns.b('dropdown'), ns.is('multiple', multiple)]}>\n          <List\n            ref={listRef}\n            {...unref(listProps)}\n            className={ns.be('dropdown', 'list')}\n            scrollbarAlwaysOn={scrollbarAlwaysOn}\n            data={data}\n            height={height}\n            width={width}\n            total={data.length}\n            // @ts-ignore - dts problem\n            onKeydown={onKeydown}\n          >\n            {{\n              default: (props: ItemProps<any>) => <Item {...props} />,\n            }}\n          </List>\n        </div>\n      )\n    }\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}