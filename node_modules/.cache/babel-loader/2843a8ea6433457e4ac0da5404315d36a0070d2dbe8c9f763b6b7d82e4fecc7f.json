{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, useSlots, computed, openBlock, createBlock, resolveDynamicComponent, unref, normalizeClass, withCtx, createElementVNode, withDirectives, createElementBlock, isRef, vModelCheckbox, renderSlot, Fragment, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { checkboxProps, checkboxEmits } from './checkbox.mjs';\nimport './composables/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useCheckbox } from './composables/use-checkbox.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _hoisted_1 = [\"tabindex\", \"role\", \"aria-checked\"];\nvar _hoisted_2 = [\"id\", \"aria-hidden\", \"name\", \"tabindex\", \"disabled\", \"true-value\", \"false-value\"];\nvar _hoisted_3 = [\"id\", \"aria-hidden\", \"disabled\", \"value\", \"name\", \"tabindex\"];\nvar __default__ = defineComponent({\n  name: \"ElCheckbox\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: checkboxProps,\n  emits: checkboxEmits,\n  setup: function setup(__props) {\n    var props = __props;\n    var slots = useSlots();\n    var _useCheckbox = useCheckbox(props, slots),\n      inputId = _useCheckbox.inputId,\n      isLabeledByFormItem = _useCheckbox.isLabeledByFormItem,\n      isChecked = _useCheckbox.isChecked,\n      isDisabled = _useCheckbox.isDisabled,\n      isFocused = _useCheckbox.isFocused,\n      checkboxSize = _useCheckbox.checkboxSize,\n      hasOwnLabel = _useCheckbox.hasOwnLabel,\n      model = _useCheckbox.model,\n      handleChange = _useCheckbox.handleChange,\n      onClickRoot = _useCheckbox.onClickRoot;\n    var ns = useNamespace(\"checkbox\");\n    var compKls = computed(function () {\n      return [ns.b(), ns.m(checkboxSize.value), ns.is(\"disabled\", isDisabled.value), ns.is(\"bordered\", props.border), ns.is(\"checked\", isChecked.value)];\n    });\n    var spanKls = computed(function () {\n      return [ns.e(\"input\"), ns.is(\"disabled\", isDisabled.value), ns.is(\"checked\", isChecked.value), ns.is(\"indeterminate\", props.indeterminate), ns.is(\"focus\", isFocused.value)];\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(resolveDynamicComponent(!unref(hasOwnLabel) && unref(isLabeledByFormItem) ? \"span\" : \"label\"), {\n        \"class\": normalizeClass(unref(compKls)),\n        \"aria-controls\": _ctx.indeterminate ? _ctx.controls : null,\n        onClick: unref(onClickRoot)\n      }, {\n        \"default\": withCtx(function () {\n          return [createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(spanKls)),\n            tabindex: _ctx.indeterminate ? 0 : void 0,\n            role: _ctx.indeterminate ? \"checkbox\" : void 0,\n            \"aria-checked\": _ctx.indeterminate ? \"mixed\" : void 0\n          }, [_ctx.trueLabel || _ctx.falseLabel ? withDirectives((openBlock(), createElementBlock(\"input\", {\n            key: 0,\n            id: unref(inputId),\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n              return isRef(model) ? model.value = $event : null;\n            }),\n            \"class\": normalizeClass(unref(ns).e(\"original\")),\n            type: \"checkbox\",\n            \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n            name: _ctx.name,\n            tabindex: _ctx.tabindex,\n            disabled: unref(isDisabled),\n            \"true-value\": _ctx.trueLabel,\n            \"false-value\": _ctx.falseLabel,\n            onChange: _cache[1] || (_cache[1] = function () {\n              return unref(handleChange) && unref(handleChange).apply(void 0, arguments);\n            }),\n            onFocus: _cache[2] || (_cache[2] = function ($event) {\n              return isFocused.value = true;\n            }),\n            onBlur: _cache[3] || (_cache[3] = function ($event) {\n              return isFocused.value = false;\n            })\n          }, null, 42, _hoisted_2)), [[vModelCheckbox, unref(model)]]) : withDirectives((openBlock(), createElementBlock(\"input\", {\n            key: 1,\n            id: unref(inputId),\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = function ($event) {\n              return isRef(model) ? model.value = $event : null;\n            }),\n            \"class\": normalizeClass(unref(ns).e(\"original\")),\n            type: \"checkbox\",\n            \"aria-hidden\": _ctx.indeterminate ? \"true\" : \"false\",\n            disabled: unref(isDisabled),\n            value: _ctx.label,\n            name: _ctx.name,\n            tabindex: _ctx.tabindex,\n            onChange: _cache[5] || (_cache[5] = function () {\n              return unref(handleChange) && unref(handleChange).apply(void 0, arguments);\n            }),\n            onFocus: _cache[6] || (_cache[6] = function ($event) {\n              return isFocused.value = true;\n            }),\n            onBlur: _cache[7] || (_cache[7] = function ($event) {\n              return isFocused.value = false;\n            })\n          }, null, 42, _hoisted_3)), [[vModelCheckbox, unref(model)]]), createElementVNode(\"span\", {\n            \"class\": normalizeClass(unref(ns).e(\"inner\"))\n          }, null, 2)], 10, _hoisted_1), unref(hasOwnLabel) ? (openBlock(), createElementBlock(\"span\", {\n            key: 0,\n            \"class\": normalizeClass(unref(ns).e(\"label\"))\n          }, [renderSlot(_ctx.$slots, \"default\"), !_ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [createTextVNode(toDisplayString(_ctx.label), 1)], 64)) : createCommentVNode(\"v-if\", true)], 2)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 8, [\"class\", \"aria-controls\", \"onClick\"]);\n    };\n  }\n}));\nvar Checkbox = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue\"]]);\nexport { Checkbox as default };","map":{"version":3,"names":["name","slots","useSlots","_useCheckbox","useCheckbox","props","inputId","isLabeledByFormItem","isChecked","isDisabled","isFocused","checkboxSize","hasOwnLabel","model","handleChange","onClickRoot","ns","useNamespace","compKls","computed","b","m","value","is","border","spanKls","e","indeterminate"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"!hasOwnLabel && isLabeledByFormItem ? 'span' : 'label'\"\n    :class=\"compKls\"\n    :aria-controls=\"indeterminate ? controls : null\"\n    @click=\"onClickRoot\"\n  >\n    <span\n      :class=\"spanKls\"\n      :tabindex=\"indeterminate ? 0 : undefined\"\n      :role=\"indeterminate ? 'checkbox' : undefined\"\n      :aria-checked=\"indeterminate ? 'mixed' : undefined\"\n    >\n      <input\n        v-if=\"trueLabel || falseLabel\"\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        :disabled=\"isDisabled\"\n        :true-value=\"trueLabel\"\n        :false-value=\"falseLabel\"\n        @change=\"handleChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n      <input\n        v-else\n        :id=\"inputId\"\n        v-model=\"model\"\n        :class=\"ns.e('original')\"\n        type=\"checkbox\"\n        :aria-hidden=\"indeterminate ? 'true' : 'false'\"\n        :disabled=\"isDisabled\"\n        :value=\"label\"\n        :name=\"name\"\n        :tabindex=\"tabindex\"\n        @change=\"handleChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n      <span :class=\"ns.e('inner')\" />\n    </span>\n    <span v-if=\"hasOwnLabel\" :class=\"ns.e('label')\">\n      <slot />\n      <template v-if=\"!$slots.default\">{{ label }}</template>\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, useSlots } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkboxEmits, checkboxProps } from './checkbox'\nimport { useCheckbox } from './composables'\n\ndefineOptions({\n  name: 'ElCheckbox',\n})\n\nconst props = defineProps(checkboxProps)\ndefineEmits(checkboxEmits)\nconst slots = useSlots()\n\nconst {\n  inputId,\n  isLabeledByFormItem,\n  isChecked,\n  isDisabled,\n  isFocused,\n  checkboxSize,\n  hasOwnLabel,\n  model,\n  handleChange,\n  onClickRoot,\n} = useCheckbox(props, slots)\n\nconst ns = useNamespace('checkbox')\n\nconst compKls = computed(() => {\n  return [\n    ns.b(),\n    ns.m(checkboxSize.value),\n    ns.is('disabled', isDisabled.value),\n    ns.is('bordered', props.border),\n    ns.is('checked', isChecked.value),\n  ]\n})\n\nconst spanKls = computed(() => {\n  return [\n    ns.e('input'),\n    ns.is('disabled', isDisabled.value),\n    ns.is('checked', isChecked.value),\n    ns.is('indeterminate', props.indeterminate),\n    ns.is('focus', isFocused.value),\n  ]\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;iCA2Dc;EACZA,IAAM;AACR;;;;;;IAIA,IAAMC,KAAA,GAAQC,QAAS;IAEjB,IAAAC,YAAA,GAWFC,WAAA,CAAYC,KAAA,EAAOJ,KAAK;MAV1BK,OAAA,GAAAH,YAAA,CAAAG,OAAA;MACAC,mBAAA,GAAAJ,YAAA,CAAAI,mBAAA;MACAC,SAAA,GAAAL,YAAA,CAAAK,SAAA;MACAC,UAAA,GAAAN,YAAA,CAAAM,UAAA;MACAC,SAAA,GAAAP,YAAA,CAAAO,SAAA;MACAC,YAAA,GAAAR,YAAA,CAAAQ,YAAA;MACAC,WAAA,GAAAT,YAAA,CAAAS,WAAA;MACAC,KAAA,GAAAV,YAAA,CAAAU,KAAA;MACAC,YAAA,GAAAX,YAAA,CAAAW,YAAA;MACAC,WAAA,GAAAZ,YAAA,CAAAY,WAAA;IAGI,IAAAC,EAAA,GAAKC,YAAA,CAAa,UAAU;IAE5B,IAAAC,OAAA,GAAUC,QAAA,CAAS,YAAM;MACtB,QACLH,EAAA,CAAGI,CAAE,IACLJ,EAAA,CAAGK,CAAE,CAAAV,YAAA,CAAaW,KAAK,GACvBN,EAAG,CAAAO,EAAA,CAAG,UAAY,EAAAd,UAAA,CAAWa,KAAK,GAClCN,EAAG,CAAAO,EAAA,CAAG,UAAY,EAAAlB,KAAA,CAAMmB,MAAM,GAC9BR,EAAG,CAAAO,EAAA,CAAG,SAAW,EAAAf,SAAA,CAAUc,KAAK,EAClC;IAAA,CACD;IAEK,IAAAG,OAAA,GAAUN,QAAA,CAAS,YAAM;MACtB,QACLH,EAAA,CAAGU,CAAA,CAAE,OAAO,GACZV,EAAG,CAAAO,EAAA,CAAG,UAAY,EAAAd,UAAA,CAAWa,KAAK,GAClCN,EAAG,CAAAO,EAAA,CAAG,SAAW,EAAAf,SAAA,CAAUc,KAAK,GAChCN,EAAG,CAAAO,EAAA,CAAG,eAAiB,EAAAlB,KAAA,CAAMsB,aAAa,GAC1CX,EAAG,CAAAO,EAAA,CAAG,OAAS,EAAAb,SAAA,CAAUY,KAAK,EAChC;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}