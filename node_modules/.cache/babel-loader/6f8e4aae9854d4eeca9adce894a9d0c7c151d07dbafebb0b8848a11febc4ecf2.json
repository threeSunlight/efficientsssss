{"ast":null,"code":"var _excluded = [\"crossAxis\", \"alignment\", \"allowedPlacements\", \"autoAlignment\"],\n  _excluded2 = [\"mainAxis\", \"crossAxis\", \"fallbackPlacements\", \"fallbackStrategy\", \"fallbackAxisSideDirection\", \"flipAlignment\"],\n  _excluded3 = [\"strategy\"],\n  _excluded4 = [\"mainAxis\", \"crossAxis\", \"limiter\"],\n  _excluded5 = [\"apply\"];\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  var reference = _ref.reference,\n    floating = _ref.floating;\n  var commonX = reference.x + reference.width / 2 - floating.width / 2;\n  var commonY = reference.y + reference.height / 2 - floating.height / 2;\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var commonAlign = reference[length] / 2 - floating[length] / 2;\n  var side = getSide(placement);\n  var isVertical = mainAxis === 'x';\n  var coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nvar computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(reference, floating, config) {\n    var _config$placement, placement, _config$strategy, strategy, _config$middleware, middleware, platform, validMiddleware, rtl, rects, _computeCoordsFromPla, x, y, statefulPlacement, middlewareData, resetCount, i, _validMiddleware$i, name, fn, _yield$fn, nextX, nextY, data, reset, _computeCoordsFromPla2;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _config$placement = config.placement, placement = _config$placement === void 0 ? 'bottom' : _config$placement, _config$strategy = config.strategy, strategy = _config$strategy === void 0 ? 'absolute' : _config$strategy, _config$middleware = config.middleware, middleware = _config$middleware === void 0 ? [] : _config$middleware, platform = config.platform;\n          validMiddleware = middleware.filter(Boolean);\n          _context.next = 4;\n          return platform.isRTL == null ? void 0 : platform.isRTL(floating);\n        case 4:\n          rtl = _context.sent;\n          _context.next = 7;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 7:\n          rects = _context.sent;\n          _computeCoordsFromPla = computeCoordsFromPlacement(rects, placement, rtl), x = _computeCoordsFromPla.x, y = _computeCoordsFromPla.y;\n          statefulPlacement = placement;\n          middlewareData = {};\n          resetCount = 0;\n          i = 0;\n        case 13:\n          if (!(i < validMiddleware.length)) {\n            _context.next = 46;\n            break;\n          }\n          _validMiddleware$i = validMiddleware[i], name = _validMiddleware$i.name, fn = _validMiddleware$i.fn;\n          _context.next = 17;\n          return fn({\n            x: x,\n            y: y,\n            initialPlacement: placement,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData,\n            rects: rects,\n            platform: platform,\n            elements: {\n              reference: reference,\n              floating: floating\n            }\n          });\n        case 17:\n          _yield$fn = _context.sent;\n          nextX = _yield$fn.x;\n          nextY = _yield$fn.y;\n          data = _yield$fn.data;\n          reset = _yield$fn.reset;\n          x = nextX != null ? nextX : x;\n          y = nextY != null ? nextY : y;\n          middlewareData = _objectSpread(_objectSpread({}, middlewareData), {}, _defineProperty({}, name, _objectSpread(_objectSpread({}, middlewareData[name]), data)));\n          if (!(reset && resetCount <= 50)) {\n            _context.next = 43;\n            break;\n          }\n          resetCount++;\n          if (!(_typeof(reset) === 'object')) {\n            _context.next = 41;\n            break;\n          }\n          if (reset.placement) {\n            statefulPlacement = reset.placement;\n          }\n          if (!reset.rects) {\n            _context.next = 38;\n            break;\n          }\n          if (!(reset.rects === true)) {\n            _context.next = 36;\n            break;\n          }\n          _context.next = 33;\n          return platform.getElementRects({\n            reference: reference,\n            floating: floating,\n            strategy: strategy\n          });\n        case 33:\n          _context.t0 = _context.sent;\n          _context.next = 37;\n          break;\n        case 36:\n          _context.t0 = reset.rects;\n        case 37:\n          rects = _context.t0;\n        case 38:\n          _computeCoordsFromPla2 = computeCoordsFromPlacement(rects, statefulPlacement, rtl);\n          x = _computeCoordsFromPla2.x;\n          y = _computeCoordsFromPla2.y;\n        case 41:\n          i = -1;\n          return _context.abrupt(\"continue\", 43);\n        case 43:\n          i++;\n          _context.next = 13;\n          break;\n        case 46:\n          return _context.abrupt(\"return\", {\n            x: x,\n            y: y,\n            placement: statefulPlacement,\n            strategy: strategy,\n            middlewareData: middlewareData\n          });\n        case 47:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction expandPaddingObject(padding) {\n  return _objectSpread({\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }, padding);\n}\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return _objectSpread(_objectSpread({}, rect), {}, {\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(state, options) {\n    var _await$platform$isEle, x, y, platform, rects, elements, strategy, _evaluate8, _evaluate8$boundary, boundary, _evaluate8$rootBounda, rootBoundary, _evaluate8$elementCon, elementContext, _evaluate8$altBoundar, altBoundary, _evaluate8$padding, padding, paddingObject, altContext, element, clippingClientRect, rect, offsetParent, offsetScale, elementClientRect;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          if (options === void 0) {\n            options = {};\n          }\n          x = state.x, y = state.y, platform = state.platform, rects = state.rects, elements = state.elements, strategy = state.strategy;\n          _evaluate8 = evaluate(options, state), _evaluate8$boundary = _evaluate8.boundary, boundary = _evaluate8$boundary === void 0 ? 'clippingAncestors' : _evaluate8$boundary, _evaluate8$rootBounda = _evaluate8.rootBoundary, rootBoundary = _evaluate8$rootBounda === void 0 ? 'viewport' : _evaluate8$rootBounda, _evaluate8$elementCon = _evaluate8.elementContext, elementContext = _evaluate8$elementCon === void 0 ? 'floating' : _evaluate8$elementCon, _evaluate8$altBoundar = _evaluate8.altBoundary, altBoundary = _evaluate8$altBoundar === void 0 ? false : _evaluate8$altBoundar, _evaluate8$padding = _evaluate8.padding, padding = _evaluate8$padding === void 0 ? 0 : _evaluate8$padding;\n          paddingObject = getSideObjectFromPadding(padding);\n          altContext = elementContext === 'floating' ? 'reference' : 'floating';\n          element = elements[altBoundary ? altContext : elementContext];\n          _context10.t0 = rectToClientRect;\n          _context10.t1 = platform;\n          _context10.next = 10;\n          return platform.isElement == null ? void 0 : platform.isElement(element);\n        case 10:\n          _context10.t2 = _await$platform$isEle = _context10.sent;\n          if (!(_context10.t2 != null)) {\n            _context10.next = 15;\n            break;\n          }\n          _context10.t3 = _await$platform$isEle;\n          _context10.next = 16;\n          break;\n        case 15:\n          _context10.t3 = true;\n        case 16:\n          if (!_context10.t3) {\n            _context10.next = 20;\n            break;\n          }\n          _context10.t4 = element;\n          _context10.next = 26;\n          break;\n        case 20:\n          _context10.t5 = element.contextElement;\n          if (_context10.t5) {\n            _context10.next = 25;\n            break;\n          }\n          _context10.next = 24;\n          return platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating);\n        case 24:\n          _context10.t5 = _context10.sent;\n        case 25:\n          _context10.t4 = _context10.t5;\n        case 26:\n          _context10.t6 = _context10.t4;\n          _context10.t7 = boundary;\n          _context10.t8 = rootBoundary;\n          _context10.t9 = strategy;\n          _context10.t10 = {\n            element: _context10.t6,\n            boundary: _context10.t7,\n            rootBoundary: _context10.t8,\n            strategy: _context10.t9\n          };\n          _context10.next = 33;\n          return _context10.t1.getClippingRect.call(_context10.t1, _context10.t10);\n        case 33:\n          _context10.t11 = _context10.sent;\n          clippingClientRect = (0, _context10.t0)(_context10.t11);\n          rect = elementContext === 'floating' ? _objectSpread(_objectSpread({}, rects.floating), {}, {\n            x: x,\n            y: y\n          }) : rects.reference;\n          _context10.next = 38;\n          return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n        case 38:\n          offsetParent = _context10.sent;\n          _context10.next = 41;\n          return platform.isElement == null ? void 0 : platform.isElement(offsetParent);\n        case 41:\n          if (!_context10.sent) {\n            _context10.next = 50;\n            break;\n          }\n          _context10.next = 44;\n          return platform.getScale == null ? void 0 : platform.getScale(offsetParent);\n        case 44:\n          _context10.t13 = _context10.sent;\n          if (_context10.t13) {\n            _context10.next = 47;\n            break;\n          }\n          _context10.t13 = {\n            x: 1,\n            y: 1\n          };\n        case 47:\n          _context10.t12 = _context10.t13;\n          _context10.next = 51;\n          break;\n        case 50:\n          _context10.t12 = {\n            x: 1,\n            y: 1\n          };\n        case 51:\n          offsetScale = _context10.t12;\n          _context10.t14 = rectToClientRect;\n          if (!platform.convertOffsetParentRelativeRectToViewportRelativeRect) {\n            _context10.next = 59;\n            break;\n          }\n          _context10.next = 56;\n          return platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n            rect: rect,\n            offsetParent: offsetParent,\n            strategy: strategy\n          });\n        case 56:\n          _context10.t15 = _context10.sent;\n          _context10.next = 60;\n          break;\n        case 59:\n          _context10.t15 = rect;\n        case 60:\n          _context10.t16 = _context10.t15;\n          elementClientRect = (0, _context10.t14)(_context10.t16);\n          return _context10.abrupt(\"return\", {\n            top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n            bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n            left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n            right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n          });\n        case 63:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10);\n  }));\n  return _detectOverflow.apply(this, arguments);\n}\nvar min = Math.min;\nvar max = Math.max;\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nvar arrow = function arrow(options) {\n  return {\n    name: 'arrow',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _data, _ref4;\n        var x, y, placement, rects, platform, elements, _ref3, element, _ref3$padding, padding, paddingObject, coords, axis, length, arrowDimensions, isYAxis, minProp, maxProp, clientProp, endDiff, startDiff, arrowOffsetParent, clientSize, centerToReference, largestPossiblePadding, minPadding, maxPadding, min$1, max, center, offset, shouldAddOffset, alignmentOffset;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              x = state.x, y = state.y, placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements; // Since `element` is required, we don't Partial<> the type.\n              _ref3 = evaluate(options, state) || {}, element = _ref3.element, _ref3$padding = _ref3.padding, padding = _ref3$padding === void 0 ? 0 : _ref3$padding;\n              if (!(element == null)) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", {});\n            case 4:\n              paddingObject = getSideObjectFromPadding(padding);\n              coords = {\n                x: x,\n                y: y\n              };\n              axis = getMainAxisFromPlacement(placement);\n              length = getLengthFromAxis(axis);\n              _context2.next = 10;\n              return platform.getDimensions(element);\n            case 10:\n              arrowDimensions = _context2.sent;\n              isYAxis = axis === 'y';\n              minProp = isYAxis ? 'top' : 'left';\n              maxProp = isYAxis ? 'bottom' : 'right';\n              clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n              endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n              startDiff = coords[axis] - rects.reference[axis];\n              _context2.next = 19;\n              return platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n            case 19:\n              arrowOffsetParent = _context2.sent;\n              clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0; // DOM platform can return `window` as the `offsetParent`.\n              _context2.t0 = !clientSize;\n              if (_context2.t0) {\n                _context2.next = 26;\n                break;\n              }\n              _context2.next = 25;\n              return platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent);\n            case 25:\n              _context2.t0 = !_context2.sent;\n            case 26:\n              if (!_context2.t0) {\n                _context2.next = 28;\n                break;\n              }\n              clientSize = elements.floating[clientProp] || rects.floating[length];\n            case 28:\n              centerToReference = endDiff / 2 - startDiff / 2; // If the padding is large enough that it causes the arrow to no longer be\n              // centered, modify the padding so that it is centered.\n              largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n              minPadding = min(paddingObject[minProp], largestPossiblePadding);\n              maxPadding = min(paddingObject[maxProp], largestPossiblePadding); // Make sure the arrow doesn't overflow the floating element if the center\n              // point is outside the floating element's bounds.\n              min$1 = minPadding;\n              max = clientSize - arrowDimensions[length] - maxPadding;\n              center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n              offset = within(min$1, center, max); // If the reference is small enough that the arrow's padding causes it to\n              // to point to nothing for an aligned placement, adjust the offset of the\n              // floating element itself. This stops `shift()` from taking action, but can\n              // be worked around by calling it again after the `arrow()` if desired.\n              shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n              alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n              return _context2.abrupt(\"return\", (_ref4 = {}, _defineProperty(_ref4, axis, coords[axis] - alignmentOffset), _defineProperty(_ref4, \"data\", (_data = {}, _defineProperty(_data, axis, offset), _defineProperty(_data, \"centerOffset\", center - offset + alignmentOffset), _data)), _ref4));\n            case 39:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  };\n};\nvar sides = ['top', 'right', 'bottom', 'left'];\nvar allPlacements = /*#__PURE__*/sides.reduce(function (acc, side) {\n  return acc.concat(side, side + \"-start\", side + \"-end\");\n}, []);\nvar oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (side) {\n    return oppositeSideMap[side];\n  });\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  var alignment = getAlignment(placement);\n  var mainAxis = getMainAxisFromPlacement(placement);\n  var length = getLengthFromAxis(mainAxis);\n  var mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\nvar oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, function (alignment) {\n    return oppositeAlignmentMap[alignment];\n  });\n}\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  var allowedPlacementsSortedByAlignment = alignment ? [].concat(_toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) === alignment;\n  })), _toConsumableArray(allowedPlacements.filter(function (placement) {\n    return getAlignment(placement) !== alignment;\n  }))) : allowedPlacements.filter(function (placement) {\n    return getSide(placement) === placement;\n  });\n  return allowedPlacementsSortedByAlignment.filter(function (placement) {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nvar autoPlacement = function autoPlacement(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE, rects, middlewareData, placement, platform, elements, _evaluate, _evaluate$crossAxis, crossAxis, alignment, _evaluate$allowedPlac, allowedPlacements, _evaluate$autoAlignme, autoAlignment, detectOverflowOptions, placements, overflow, currentIndex, currentPlacement, _getAlignmentSides, main, cross, currentOverflows, allOverflows, nextPlacement, placementsSortedByMostSpace, placementsThatFitOnEachSide, resetPlacement;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              rects = state.rects, middlewareData = state.middlewareData, placement = state.placement, platform = state.platform, elements = state.elements;\n              _evaluate = evaluate(options, state), _evaluate$crossAxis = _evaluate.crossAxis, crossAxis = _evaluate$crossAxis === void 0 ? false : _evaluate$crossAxis, alignment = _evaluate.alignment, _evaluate$allowedPlac = _evaluate.allowedPlacements, allowedPlacements = _evaluate$allowedPlac === void 0 ? allPlacements : _evaluate$allowedPlac, _evaluate$autoAlignme = _evaluate.autoAlignment, autoAlignment = _evaluate$autoAlignme === void 0 ? true : _evaluate$autoAlignme, detectOverflowOptions = _objectWithoutProperties(_evaluate, _excluded);\n              placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n              _context3.next = 5;\n              return detectOverflow(state, detectOverflowOptions);\n            case 5:\n              overflow = _context3.sent;\n              currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n              currentPlacement = placements[currentIndex];\n              if (!(currentPlacement == null)) {\n                _context3.next = 10;\n                break;\n              }\n              return _context3.abrupt(\"return\", {});\n            case 10:\n              _context3.t0 = getAlignmentSides;\n              _context3.t1 = currentPlacement;\n              _context3.t2 = rects;\n              _context3.next = 15;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 15:\n              _context3.t3 = _context3.sent;\n              _getAlignmentSides = (0, _context3.t0)(_context3.t1, _context3.t2, _context3.t3);\n              main = _getAlignmentSides.main;\n              cross = _getAlignmentSides.cross;\n              if (!(placement !== currentPlacement)) {\n                _context3.next = 21;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                reset: {\n                  placement: placements[0]\n                }\n              });\n            case 21:\n              currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n              allOverflows = [].concat(_toConsumableArray(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), [{\n                placement: currentPlacement,\n                overflows: currentOverflows\n              }]);\n              nextPlacement = placements[currentIndex + 1]; // There are more placements to check.\n              if (!nextPlacement) {\n                _context3.next = 26;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 26:\n              placementsSortedByMostSpace = allOverflows.map(function (d) {\n                var alignment = getAlignment(d.placement);\n                return [d.placement, alignment && crossAxis ?\n                // Check along the mainAxis and main crossAxis side.\n                d.overflows.slice(0, 2).reduce(function (acc, v) {\n                  return acc + v;\n                }, 0) :\n                // Check only the mainAxis.\n                d.overflows[0], d.overflows];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              });\n              placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(function (d) {\n                return d[2].slice(0,\n                // Aligned placements should not check their opposite crossAxis\n                // side.\n                getAlignment(d[0]) ? 2 : 3).every(function (v) {\n                  return v <= 0;\n                });\n              });\n              resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n              if (!(resetPlacement !== placement)) {\n                _context3.next = 31;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                data: {\n                  index: currentIndex + 1,\n                  overflows: allOverflows\n                },\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 31:\n              return _context3.abrupt(\"return\", {});\n            case 32:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    }\n  };\n};\nfunction getExpandedPlacements(placement) {\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getSideList(side, isStart, rtl) {\n  var lr = ['left', 'right'];\n  var rl = ['right', 'left'];\n  var tb = ['top', 'bottom'];\n  var bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  var alignment = getAlignment(placement);\n  var list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(function (side) {\n      return side + \"-\" + alignment;\n    });\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nvar flip = function flip(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _middlewareData$flip, placement, middlewareData, rects, initialPlacement, platform, elements, _evaluate2, _evaluate2$mainAxis, checkMainAxis, _evaluate2$crossAxis, checkCrossAxis, specifiedFallbackPlacements, _evaluate2$fallbackSt, fallbackStrategy, _evaluate2$fallbackAx, fallbackAxisSideDirection, _evaluate2$flipAlignm, flipAlignment, detectOverflowOptions, side, isBasePlacement, rtl, fallbackPlacements, placements, overflow, overflows, overflowsData, _getAlignmentSides2, main, cross, _middlewareData$flip2, _overflowsData$filter, nextIndex, nextPlacement, resetPlacement, _overflowsData$map$so, _placement;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              placement = state.placement, middlewareData = state.middlewareData, rects = state.rects, initialPlacement = state.initialPlacement, platform = state.platform, elements = state.elements;\n              _evaluate2 = evaluate(options, state), _evaluate2$mainAxis = _evaluate2.mainAxis, checkMainAxis = _evaluate2$mainAxis === void 0 ? true : _evaluate2$mainAxis, _evaluate2$crossAxis = _evaluate2.crossAxis, checkCrossAxis = _evaluate2$crossAxis === void 0 ? true : _evaluate2$crossAxis, specifiedFallbackPlacements = _evaluate2.fallbackPlacements, _evaluate2$fallbackSt = _evaluate2.fallbackStrategy, fallbackStrategy = _evaluate2$fallbackSt === void 0 ? 'bestFit' : _evaluate2$fallbackSt, _evaluate2$fallbackAx = _evaluate2.fallbackAxisSideDirection, fallbackAxisSideDirection = _evaluate2$fallbackAx === void 0 ? 'none' : _evaluate2$fallbackAx, _evaluate2$flipAlignm = _evaluate2.flipAlignment, flipAlignment = _evaluate2$flipAlignm === void 0 ? true : _evaluate2$flipAlignm, detectOverflowOptions = _objectWithoutProperties(_evaluate2, _excluded2);\n              side = getSide(placement);\n              isBasePlacement = getSide(initialPlacement) === initialPlacement;\n              _context4.next = 6;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 6:\n              rtl = _context4.sent;\n              fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n              if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n                fallbackPlacements.push.apply(fallbackPlacements, _toConsumableArray(getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl)));\n              }\n              placements = [initialPlacement].concat(_toConsumableArray(fallbackPlacements));\n              _context4.next = 12;\n              return detectOverflow(state, detectOverflowOptions);\n            case 12:\n              overflow = _context4.sent;\n              overflows = [];\n              overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n              if (checkMainAxis) {\n                overflows.push(overflow[side]);\n              }\n              if (checkCrossAxis) {\n                _getAlignmentSides2 = getAlignmentSides(placement, rects, rtl), main = _getAlignmentSides2.main, cross = _getAlignmentSides2.cross;\n                overflows.push(overflow[main], overflow[cross]);\n              }\n              overflowsData = [].concat(_toConsumableArray(overflowsData), [{\n                placement: placement,\n                overflows: overflows\n              }]);\n\n              // One or more sides is overflowing.\n              if (overflows.every(function (side) {\n                return side <= 0;\n              })) {\n                _context4.next = 35;\n                break;\n              }\n              nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n              nextPlacement = placements[nextIndex];\n              if (!nextPlacement) {\n                _context4.next = 23;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                data: {\n                  index: nextIndex,\n                  overflows: overflowsData\n                },\n                reset: {\n                  placement: nextPlacement\n                }\n              });\n            case 23:\n              // First, find the candidates that fit on the mainAxis side of overflow,\n              // then find the placement that fits the best on the main crossAxis side.\n              resetPlacement = (_overflowsData$filter = overflowsData.filter(function (d) {\n                return d.overflows[0] <= 0;\n              }).sort(function (a, b) {\n                return a.overflows[1] - b.overflows[1];\n              })[0]) == null ? void 0 : _overflowsData$filter.placement; // Otherwise fallback.\n              if (resetPlacement) {\n                _context4.next = 33;\n                break;\n              }\n              _context4.t0 = fallbackStrategy;\n              _context4.next = _context4.t0 === 'bestFit' ? 28 : _context4.t0 === 'initialPlacement' ? 31 : 33;\n              break;\n            case 28:\n              _placement = (_overflowsData$map$so = overflowsData.map(function (d) {\n                return [d.placement, d.overflows.filter(function (overflow) {\n                  return overflow > 0;\n                }).reduce(function (acc, overflow) {\n                  return acc + overflow;\n                }, 0)];\n              }).sort(function (a, b) {\n                return a[1] - b[1];\n              })[0]) == null ? void 0 : _overflowsData$map$so[0];\n              if (_placement) {\n                resetPlacement = _placement;\n              }\n              return _context4.abrupt(\"break\", 33);\n            case 31:\n              resetPlacement = initialPlacement;\n              return _context4.abrupt(\"break\", 33);\n            case 33:\n              if (!(placement !== resetPlacement)) {\n                _context4.next = 35;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                reset: {\n                  placement: resetPlacement\n                }\n              });\n            case 35:\n              return _context4.abrupt(\"return\", {});\n            case 36:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  };\n};\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nvar hide = function hide(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var rects, _evaluate3, _evaluate3$strategy, strategy, detectOverflowOptions, overflow, offsets, _overflow, _offsets;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              rects = state.rects;\n              _evaluate3 = evaluate(options, state), _evaluate3$strategy = _evaluate3.strategy, strategy = _evaluate3$strategy === void 0 ? 'referenceHidden' : _evaluate3$strategy, detectOverflowOptions = _objectWithoutProperties(_evaluate3, _excluded3);\n              _context5.t0 = strategy;\n              _context5.next = _context5.t0 === 'referenceHidden' ? 5 : _context5.t0 === 'escaped' ? 10 : 15;\n              break;\n            case 5:\n              _context5.next = 7;\n              return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                elementContext: 'reference'\n              }));\n            case 7:\n              overflow = _context5.sent;\n              offsets = getSideOffsets(overflow, rects.reference);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  referenceHiddenOffsets: offsets,\n                  referenceHidden: isAnySideFullyClipped(offsets)\n                }\n              });\n            case 10:\n              _context5.next = 12;\n              return detectOverflow(state, _objectSpread(_objectSpread({}, detectOverflowOptions), {}, {\n                altBoundary: true\n              }));\n            case 12:\n              _overflow = _context5.sent;\n              _offsets = getSideOffsets(_overflow, rects.floating);\n              return _context5.abrupt(\"return\", {\n                data: {\n                  escapedOffsets: _offsets,\n                  escaped: isAnySideFullyClipped(_offsets)\n                }\n              });\n            case 15:\n              return _context5.abrupt(\"return\", {});\n            case 16:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    }\n  };\n};\nfunction getBoundingRect(rects) {\n  var minX = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.left;\n  })));\n  var minY = min.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.top;\n  })));\n  var maxX = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.right;\n  })));\n  var maxY = max.apply(void 0, _toConsumableArray(rects.map(function (rect) {\n    return rect.bottom;\n  })));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  var sortedRects = rects.slice().sort(function (a, b) {\n    return a.y - b.y;\n  });\n  var groups = [];\n  var prevRect = null;\n  for (var i = 0; i < sortedRects.length; i++) {\n    var rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(function (rect) {\n    return rectToClientRect(getBoundingRect(rect));\n  });\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nvar inline = function inline(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var placement, elements, rects, platform, strategy, _evaluate4, _evaluate4$padding, padding, x, y, nativeClientRects, clientRects, fallback, paddingObject, getBoundingClientRect, resetRects;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              getBoundingClientRect = function _getBoundingClientRec() {\n                // There are two rects and they are disjoined.\n                if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n                  // Find the first rect in which the point is fully inside.\n                  return clientRects.find(function (rect) {\n                    return x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom;\n                  }) || fallback;\n                }\n\n                // There are 2 or more connected rects.\n                if (clientRects.length >= 2) {\n                  if (getMainAxisFromPlacement(placement) === 'x') {\n                    var firstRect = clientRects[0];\n                    var lastRect = clientRects[clientRects.length - 1];\n                    var isTop = getSide(placement) === 'top';\n                    var _top = firstRect.top;\n                    var _bottom = lastRect.bottom;\n                    var _left = isTop ? firstRect.left : lastRect.left;\n                    var _right = isTop ? firstRect.right : lastRect.right;\n                    var _width = _right - _left;\n                    var _height = _bottom - _top;\n                    return {\n                      top: _top,\n                      bottom: _bottom,\n                      left: _left,\n                      right: _right,\n                      width: _width,\n                      height: _height,\n                      x: _left,\n                      y: _top\n                    };\n                  }\n                  var isLeftSide = getSide(placement) === 'left';\n                  var maxRight = max.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.right;\n                  })));\n                  var minLeft = min.apply(void 0, _toConsumableArray(clientRects.map(function (rect) {\n                    return rect.left;\n                  })));\n                  var measureRects = clientRects.filter(function (rect) {\n                    return isLeftSide ? rect.left === minLeft : rect.right === maxRight;\n                  });\n                  var top = measureRects[0].top;\n                  var bottom = measureRects[measureRects.length - 1].bottom;\n                  var left = minLeft;\n                  var right = maxRight;\n                  var width = right - left;\n                  var height = bottom - top;\n                  return {\n                    top: top,\n                    bottom: bottom,\n                    left: left,\n                    right: right,\n                    width: width,\n                    height: height,\n                    x: left,\n                    y: top\n                  };\n                }\n                return fallback;\n              };\n              placement = state.placement, elements = state.elements, rects = state.rects, platform = state.platform, strategy = state.strategy; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n              // ClientRect's bounds, despite the event listener being triggered. A\n              // padding of 2 seems to handle this issue.\n              _evaluate4 = evaluate(options, state), _evaluate4$padding = _evaluate4.padding, padding = _evaluate4$padding === void 0 ? 2 : _evaluate4$padding, x = _evaluate4.x, y = _evaluate4.y;\n              _context6.t0 = Array;\n              _context6.next = 6;\n              return platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference);\n            case 6:\n              _context6.t1 = _context6.sent;\n              if (_context6.t1) {\n                _context6.next = 9;\n                break;\n              }\n              _context6.t1 = [];\n            case 9:\n              _context6.t2 = _context6.t1;\n              nativeClientRects = _context6.t0.from.call(_context6.t0, _context6.t2);\n              clientRects = getRectsByLine(nativeClientRects);\n              fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n              paddingObject = getSideObjectFromPadding(padding);\n              _context6.next = 16;\n              return platform.getElementRects({\n                reference: {\n                  getBoundingClientRect: getBoundingClientRect\n                },\n                floating: elements.floating,\n                strategy: strategy\n              });\n            case 16:\n              resetRects = _context6.sent;\n              if (!(rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height)) {\n                _context6.next = 19;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                reset: {\n                  rects: resetRects\n                }\n              });\n            case 19:\n              return _context6.abrupt(\"return\", {});\n            case 20:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6);\n      }))();\n    }\n  };\n};\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(state, options) {\n    var placement, platform, elements, rtl, side, alignment, isVertical, mainAxisMulti, crossAxisMulti, rawValue, _ref6, mainAxis, crossAxis, alignmentAxis;\n    return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          placement = state.placement, platform = state.platform, elements = state.elements;\n          _context11.next = 3;\n          return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n        case 3:\n          rtl = _context11.sent;\n          side = getSide(placement);\n          alignment = getAlignment(placement);\n          isVertical = getMainAxisFromPlacement(placement) === 'x';\n          mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n          crossAxisMulti = rtl && isVertical ? -1 : 1;\n          rawValue = evaluate(options, state); // eslint-disable-next-line prefer-const\n          _ref6 = typeof rawValue === 'number' ? {\n            mainAxis: rawValue,\n            crossAxis: 0,\n            alignmentAxis: null\n          } : _objectSpread({\n            mainAxis: 0,\n            crossAxis: 0,\n            alignmentAxis: null\n          }, rawValue), mainAxis = _ref6.mainAxis, crossAxis = _ref6.crossAxis, alignmentAxis = _ref6.alignmentAxis;\n          if (alignment && typeof alignmentAxis === 'number') {\n            crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n          }\n          return _context11.abrupt(\"return\", isVertical ? {\n            x: crossAxis * crossAxisMulti,\n            y: mainAxis * mainAxisMulti\n          } : {\n            x: mainAxis * mainAxisMulti,\n            y: crossAxis * crossAxisMulti\n          });\n        case 13:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee11);\n  }));\n  return _convertValueToCoords.apply(this, arguments);\n}\nvar offset = function offset(options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var x, y, diffCoords;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              x = state.x, y = state.y;\n              _context7.next = 3;\n              return convertValueToCoords(state, options);\n            case 3:\n              diffCoords = _context7.sent;\n              return _context7.abrupt(\"return\", {\n                x: x + diffCoords.x,\n                y: y + diffCoords.y,\n                data: diffCoords\n              });\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7);\n      }))();\n    }\n  };\n};\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nvar shift = function shift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        var _objectSpread3;\n        var x, y, placement, _evaluate5, _evaluate5$mainAxis, checkMainAxis, _evaluate5$crossAxis, checkCrossAxis, _evaluate5$limiter, limiter, detectOverflowOptions, coords, overflow, mainAxis, crossAxis, mainAxisCoord, crossAxisCoord, minSide, maxSide, _min, _max, _minSide, _maxSide, _min2, _max2, limitedCoords;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              x = state.x, y = state.y, placement = state.placement;\n              _evaluate5 = evaluate(options, state), _evaluate5$mainAxis = _evaluate5.mainAxis, checkMainAxis = _evaluate5$mainAxis === void 0 ? true : _evaluate5$mainAxis, _evaluate5$crossAxis = _evaluate5.crossAxis, checkCrossAxis = _evaluate5$crossAxis === void 0 ? false : _evaluate5$crossAxis, _evaluate5$limiter = _evaluate5.limiter, limiter = _evaluate5$limiter === void 0 ? {\n                fn: function fn(_ref) {\n                  var x = _ref.x,\n                    y = _ref.y;\n                  return {\n                    x: x,\n                    y: y\n                  };\n                }\n              } : _evaluate5$limiter, detectOverflowOptions = _objectWithoutProperties(_evaluate5, _excluded4);\n              coords = {\n                x: x,\n                y: y\n              };\n              _context8.next = 5;\n              return detectOverflow(state, detectOverflowOptions);\n            case 5:\n              overflow = _context8.sent;\n              mainAxis = getMainAxisFromPlacement(getSide(placement));\n              crossAxis = getCrossAxis(mainAxis);\n              mainAxisCoord = coords[mainAxis];\n              crossAxisCoord = coords[crossAxis];\n              if (checkMainAxis) {\n                minSide = mainAxis === 'y' ? 'top' : 'left';\n                maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n                _min = mainAxisCoord + overflow[minSide];\n                _max = mainAxisCoord - overflow[maxSide];\n                mainAxisCoord = within(_min, mainAxisCoord, _max);\n              }\n              if (checkCrossAxis) {\n                _minSide = crossAxis === 'y' ? 'top' : 'left';\n                _maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n                _min2 = crossAxisCoord + overflow[_minSide];\n                _max2 = crossAxisCoord - overflow[_maxSide];\n                crossAxisCoord = within(_min2, crossAxisCoord, _max2);\n              }\n              limitedCoords = limiter.fn(_objectSpread(_objectSpread({}, state), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, mainAxis, mainAxisCoord), _defineProperty(_objectSpread3, crossAxis, crossAxisCoord), _objectSpread3)));\n              return _context8.abrupt(\"return\", _objectSpread(_objectSpread({}, limitedCoords), {}, {\n                data: {\n                  x: limitedCoords.x - x,\n                  y: limitedCoords.y - y\n                }\n              }));\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8);\n      }))();\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nvar limitShift = function limitShift(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options: options,\n    fn: function fn(state) {\n      var _ref5;\n      var x = state.x,\n        y = state.y,\n        placement = state.placement,\n        rects = state.rects,\n        middlewareData = state.middlewareData;\n      var _evaluate6 = evaluate(options, state),\n        _evaluate6$offset = _evaluate6.offset,\n        offset = _evaluate6$offset === void 0 ? 0 : _evaluate6$offset,\n        _evaluate6$mainAxis = _evaluate6.mainAxis,\n        checkMainAxis = _evaluate6$mainAxis === void 0 ? true : _evaluate6$mainAxis,\n        _evaluate6$crossAxis = _evaluate6.crossAxis,\n        checkCrossAxis = _evaluate6$crossAxis === void 0 ? true : _evaluate6$crossAxis;\n      var coords = {\n        x: x,\n        y: y\n      };\n      var mainAxis = getMainAxisFromPlacement(placement);\n      var crossAxis = getCrossAxis(mainAxis);\n      var mainAxisCoord = coords[mainAxis];\n      var crossAxisCoord = coords[crossAxis];\n      var rawOffset = evaluate(offset, state);\n      var computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : _objectSpread({\n        mainAxis: 0,\n        crossAxis: 0\n      }, rawOffset);\n      if (checkMainAxis) {\n        var len = mainAxis === 'y' ? 'height' : 'width';\n        var limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        var limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        var _len = mainAxis === 'y' ? 'width' : 'height';\n        var isOriginSide = ['top', 'left'].includes(getSide(placement));\n        var _limitMin = rects.reference[crossAxis] - rects.floating[_len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        var _limitMax = rects.reference[crossAxis] + rects.reference[_len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < _limitMin) {\n          crossAxisCoord = _limitMin;\n        } else if (crossAxisCoord > _limitMax) {\n          crossAxisCoord = _limitMax;\n        }\n      }\n      return _ref5 = {}, _defineProperty(_ref5, mainAxis, mainAxisCoord), _defineProperty(_ref5, crossAxis, crossAxisCoord), _ref5;\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nvar size = function size(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options: options,\n    fn: function fn(state) {\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var placement, rects, platform, elements, _evaluate7, _evaluate7$apply, apply, detectOverflowOptions, overflow, side, alignment, axis, isXAxis, _rects$floating, width, height, heightSide, widthSide, overflowAvailableHeight, overflowAvailableWidth, noShift, availableHeight, availableWidth, maximumClippingWidth, maximumClippingHeight, xMin, xMax, yMin, yMax, nextDimensions;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              placement = state.placement, rects = state.rects, platform = state.platform, elements = state.elements;\n              _evaluate7 = evaluate(options, state), _evaluate7$apply = _evaluate7.apply, apply = _evaluate7$apply === void 0 ? function () {} : _evaluate7$apply, detectOverflowOptions = _objectWithoutProperties(_evaluate7, _excluded5);\n              _context9.next = 4;\n              return detectOverflow(state, detectOverflowOptions);\n            case 4:\n              overflow = _context9.sent;\n              side = getSide(placement);\n              alignment = getAlignment(placement);\n              axis = getMainAxisFromPlacement(placement);\n              isXAxis = axis === 'x';\n              _rects$floating = rects.floating, width = _rects$floating.width, height = _rects$floating.height;\n              if (!(side === 'top' || side === 'bottom')) {\n                _context9.next = 29;\n                break;\n              }\n              heightSide = side;\n              _context9.t0 = alignment;\n              _context9.next = 15;\n              return platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n            case 15:\n              if (!_context9.sent) {\n                _context9.next = 19;\n                break;\n              }\n              _context9.t1 = 'start';\n              _context9.next = 20;\n              break;\n            case 19:\n              _context9.t1 = 'end';\n            case 20:\n              _context9.t2 = _context9.t1;\n              if (!(_context9.t0 === _context9.t2)) {\n                _context9.next = 25;\n                break;\n              }\n              _context9.t3 = 'left';\n              _context9.next = 26;\n              break;\n            case 25:\n              _context9.t3 = 'right';\n            case 26:\n              widthSide = _context9.t3;\n              _context9.next = 31;\n              break;\n            case 29:\n              widthSide = side;\n              heightSide = alignment === 'end' ? 'top' : 'bottom';\n            case 31:\n              overflowAvailableHeight = height - overflow[heightSide];\n              overflowAvailableWidth = width - overflow[widthSide];\n              noShift = !state.middlewareData.shift;\n              availableHeight = overflowAvailableHeight;\n              availableWidth = overflowAvailableWidth;\n              if (isXAxis) {\n                maximumClippingWidth = width - overflow.left - overflow.right;\n                availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n              } else {\n                maximumClippingHeight = height - overflow.top - overflow.bottom;\n                availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n              }\n              if (noShift && !alignment) {\n                xMin = max(overflow.left, 0);\n                xMax = max(overflow.right, 0);\n                yMin = max(overflow.top, 0);\n                yMax = max(overflow.bottom, 0);\n                if (isXAxis) {\n                  availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n                } else {\n                  availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n                }\n              }\n              _context9.next = 40;\n              return apply(_objectSpread(_objectSpread({}, state), {}, {\n                availableWidth: availableWidth,\n                availableHeight: availableHeight\n              }));\n            case 40:\n              _context9.next = 42;\n              return platform.getDimensions(elements.floating);\n            case 42:\n              nextDimensions = _context9.sent;\n              if (!(width !== nextDimensions.width || height !== nextDimensions.height)) {\n                _context9.next = 45;\n                break;\n              }\n              return _context9.abrupt(\"return\", {\n                reset: {\n                  rects: true\n                }\n              });\n            case 45:\n              return _context9.abrupt(\"return\", {});\n            case 46:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9);\n      }))();\n    }\n  };\n};\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","target","arguments","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","getAlignment","placement","split","getLengthFromAxis","axis","getSide","getMainAxisFromPlacement","includes","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","commonAlign","side","isVertical","coords","computePosition","_ref2","_callee","config","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","rects","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","_validMiddleware$i","_yield$fn","nextX","nextY","data","_computeCoordsFromPla2","_callee$","_context","Boolean","isRTL","getElementRects","initialPlacement","elements","t0","_x","_x2","_x3","evaluate","param","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","_x4","_x5","_detectOverflow","_callee10","options","_await$platform$isEle","_evaluate8","_evaluate8$boundary","boundary","_evaluate8$rootBounda","rootBoundary","_evaluate8$elementCon","elementContext","_evaluate8$altBoundar","altBoundary","_evaluate8$padding","paddingObject","altContext","element","clippingClientRect","offsetParent","offsetScale","elementClientRect","_callee10$","_context10","t1","isElement","t2","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","min","Math","max","within","min$1","max$1","arrow","_callee2","_data","_ref4","_ref3","_ref3$padding","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","center","offset","shouldAddOffset","alignmentOffset","_callee2$","_context2","getDimensions","sides","allPlacements","reduce","acc","concat","oppositeSideMap","getOppositePlacement","replace","getAlignmentSides","alignment","mainAlignmentSide","main","cross","oppositeAlignmentMap","start","end","getOppositeAlignmentPlacement","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","_toConsumableArray","autoPlacement","_callee3","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","_evaluate$crossAxis","crossAxis","_evaluate$allowedPlac","_evaluate$autoAlignme","detectOverflowOptions","placements","overflow","currentIndex","currentPlacement","_getAlignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","placementsThatFitOnEachSide","resetPlacement","_callee3$","_context3","_objectWithoutProperties","_excluded","index","overflows","map","d","v","sort","a","b","every","getExpandedPlacements","oppositePlacement","getSideList","isStart","lr","rl","tb","bt","getOppositeAxisPlacements","flipAlignment","direction","list","flip","_callee4","_middlewareData$flip","_evaluate2","_evaluate2$mainAxis","checkMainAxis","_evaluate2$crossAxis","checkCrossAxis","specifiedFallbackPlacements","_evaluate2$fallbackSt","fallbackStrategy","_evaluate2$fallbackAx","fallbackAxisSideDirection","_evaluate2$flipAlignm","isBasePlacement","fallbackPlacements","overflowsData","_getAlignmentSides2","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","_placement","_callee4$","_context4","_excluded2","getSideOffsets","isAnySideFullyClipped","some","hide","_callee5","_evaluate3","_evaluate3$strategy","offsets","_overflow","_offsets","_callee5$","_context5","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","maxX","maxY","getRectsByLine","sortedRects","groups","prevRect","inline","_callee6","_evaluate4","_evaluate4$padding","nativeClientRects","clientRects","fallback","getBoundingClientRect","resetRects","_callee6$","_context6","_getBoundingClientRec","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","from","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee11","mainAxisMulti","crossAxisMulti","rawValue","_ref6","alignmentAxis","_callee11$","_context11","_callee7","diffCoords","_callee7$","_context7","getCrossAxis","shift","_callee8","_objectSpread3","_evaluate5","_evaluate5$mainAxis","_evaluate5$crossAxis","_evaluate5$limiter","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","_min","_max","_minSide","_maxSide","_min2","_max2","limitedCoords","_callee8$","_context8","_excluded4","limitShift","_ref5","_evaluate6","_evaluate6$offset","_evaluate6$mainAxis","_evaluate6$crossAxis","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","isOriginSide","size","_callee9","_evaluate7","_evaluate7$apply","isXAxis","_rects$floating","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","_callee9$","_context9","_excluded5"],"sources":["/Users/nuonuo/Desktop/efficient/node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs"],"sourcesContent":["function getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n      continue;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. This stops `shift()` from taking action, but can\n    // be worked around by calling it again after the `arrow()` if desired.\n    const shouldAddOffset = getAlignment(placement) != null && center != offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? min$1 - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset + alignmentOffset\n      }\n    };\n  }\n});\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements = alignment !== undefined || allowedPlacements === allPlacements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[main], overflow[cross]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getSideObjectFromPadding(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const axis = getMainAxisFromPlacement(placement);\n      const isXAxis = axis === 'x';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isXAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isXAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}