{"ast":null,"code":"var _switchEmits;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT, INPUT_EVENT } from '../../../constants/event.mjs';\nimport { isBoolean, isNumber } from '../../../utils/types.mjs';\nimport { isString } from '@vue/shared';\nvar switchProps = buildProps({\n  modelValue: {\n    type: [Boolean, String, Number],\n    \"default\": false\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  loading: {\n    type: Boolean,\n    \"default\": false\n  },\n  size: {\n    type: String,\n    validator: isValidComponentSize\n  },\n  width: {\n    type: [String, Number],\n    \"default\": \"\"\n  },\n  inlinePrompt: {\n    type: Boolean,\n    \"default\": false\n  },\n  activeIcon: {\n    type: iconPropType\n  },\n  inactiveIcon: {\n    type: iconPropType\n  },\n  activeText: {\n    type: String,\n    \"default\": \"\"\n  },\n  inactiveText: {\n    type: String,\n    \"default\": \"\"\n  },\n  activeValue: {\n    type: [Boolean, String, Number],\n    \"default\": true\n  },\n  inactiveValue: {\n    type: [Boolean, String, Number],\n    \"default\": false\n  },\n  activeColor: {\n    type: String,\n    \"default\": \"\"\n  },\n  inactiveColor: {\n    type: String,\n    \"default\": \"\"\n  },\n  borderColor: {\n    type: String,\n    \"default\": \"\"\n  },\n  name: {\n    type: String,\n    \"default\": \"\"\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  beforeChange: {\n    type: definePropType(Function)\n  },\n  id: String,\n  tabindex: {\n    type: [String, Number]\n  },\n  value: {\n    type: [Boolean, String, Number],\n    \"default\": false\n  }\n});\nvar switchEmits = (_switchEmits = {}, _defineProperty(_switchEmits, UPDATE_MODEL_EVENT, function (val) {\n  return isBoolean(val) || isString(val) || isNumber(val);\n}), _defineProperty(_switchEmits, CHANGE_EVENT, function (val) {\n  return isBoolean(val) || isString(val) || isNumber(val);\n}), _defineProperty(_switchEmits, INPUT_EVENT, function (val) {\n  return isBoolean(val) || isString(val) || isNumber(val);\n}), _switchEmits);\nexport { switchEmits, switchProps };","map":{"version":3,"names":["switchProps","buildProps","modelValue","type","Boolean","String","Number","disabled","loading","size","validator","isValidComponentSize","width","inlinePrompt","activeIcon","iconPropType","inactiveIcon","activeText","inactiveText","activeValue","inactiveValue","activeColor","inactiveColor","borderColor","name","validateEvent","beforeChange","definePropType","Function","id","tabindex","value","switchEmits","_switchEmits","_defineProperty","UPDATE_MODEL_EVENT","val","isBoolean","isString","isNumber","CHANGE_EVENT","INPUT_EVENT"],"sources":["../../../../../../packages/components/switch/src/switch.ts"],"sourcesContent":["import {\n  buildProps,\n  definePropType,\n  iconPropType,\n  isBoolean,\n  isNumber,\n  isString,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport {\n  CHANGE_EVENT,\n  INPUT_EVENT,\n  UPDATE_MODEL_EVENT,\n} from '@element-plus/constants'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type Switch from './switch.vue'\nimport type { ExtractPropTypes, PropType } from 'vue'\n\nexport const switchProps = buildProps({\n  /**\n   * @description binding value, it should be equivalent to either `active-value` or `inactive-value`, by default it's `boolean` type\n   */\n  modelValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  /**\n   * @description whether Switch is disabled\n   */\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description whether Switch is in loading state\n   */\n  loading: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description size of Switch\n   */\n  size: {\n    type: String as PropType<ComponentSize>,\n    validator: isValidComponentSize,\n  },\n  /**\n   * @description width of Switch\n   */\n  width: {\n    type: [String, Number],\n    default: '',\n  },\n  /**\n   * @description whether icon or text is displayed inside dot, only the first character will be rendered for text\n   */\n  inlinePrompt: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description component of the icon displayed when in `on` state, overrides `active-text`\n   */\n  activeIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description component of the icon displayed when in `off` state, overrides `inactive-text`\n   */\n  inactiveIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description text displayed when in `on` state\n   */\n  activeText: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description text displayed when in `off` state\n   */\n  inactiveText: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description switch value when in `on` state\n   */\n  activeValue: {\n    type: [Boolean, String, Number],\n    default: true,\n  },\n  /**\n   * @description switch value when in `off` state\n   */\n  inactiveValue: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n  /**\n   * @deprecated background color when in `on` state ( deprecated, use CSS var `--el-switch-on-color` instead )\n   */\n  activeColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @deprecated background color when in `off` state ( deprecated, use CSS var `--el-switch-off-color` instead )\n   */\n  inactiveColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @deprecated border color of the switch ( deprecated, use CSS var `--el-switch-border-color` instead )\n   */\n  borderColor: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description input name of Switch\n   */\n  name: {\n    type: String,\n    default: '',\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description before-change hook before the switch state changes. If `false` is returned or a `Promise` is returned and then is rejected, will stop switching\n   */\n  beforeChange: {\n    type: definePropType<() => Promise<boolean> | boolean>(Function),\n  },\n  /**\n   * @description id for input\n   */\n  id: String,\n  /**\n   * @description tabindex for input\n   */\n  tabindex: {\n    type: [String, Number],\n  },\n  /**\n   * @deprecated binding value ( deprecated, use `model-value / v-model` instead )\n   */\n  value: {\n    type: [Boolean, String, Number],\n    default: false,\n  },\n} as const)\n\nexport type SwitchProps = ExtractPropTypes<typeof switchProps>\n\nexport const switchEmits = {\n  [UPDATE_MODEL_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [CHANGE_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n  [INPUT_EVENT]: (val: boolean | string | number) =>\n    isBoolean(val) || isString(val) || isNumber(val),\n}\nexport type SwitchEmits = typeof switchEmits\n\nexport type SwitchInstance = InstanceType<typeof Switch>\n"],"mappings":";;;;;;;;;;;;;AAcY,IAACA,WAAW,GAAGC,UAAU,CAAC;EACpCC,UAAU,EAAE;IACVC,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;IAC/B,WAAS;EACb,CAAG;EACDC,QAAQ,EAAE;IACRJ,IAAI,EAAEC,OAAO;IACb,WAAS;EACb,CAAG;EACDI,OAAO,EAAE;IACPL,IAAI,EAAEC,OAAO;IACb,WAAS;EACb,CAAG;EACDK,IAAI,EAAE;IACJN,IAAI,EAAEE,MAAM;IACZK,SAAS,EAAEC;EACf,CAAG;EACDC,KAAK,EAAE;IACLT,IAAI,EAAE,CAACE,MAAM,EAAEC,MAAM,CAAC;IACtB,WAAS;EACb,CAAG;EACDO,YAAY,EAAE;IACZV,IAAI,EAAEC,OAAO;IACb,WAAS;EACb,CAAG;EACDU,UAAU,EAAE;IACVX,IAAI,EAAEY;EACV,CAAG;EACDC,YAAY,EAAE;IACZb,IAAI,EAAEY;EACV,CAAG;EACDE,UAAU,EAAE;IACVd,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDa,YAAY,EAAE;IACZf,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDc,WAAW,EAAE;IACXhB,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;IAC/B,WAAS;EACb,CAAG;EACDc,aAAa,EAAE;IACbjB,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;IAC/B,WAAS;EACb,CAAG;EACDe,WAAW,EAAE;IACXlB,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDiB,aAAa,EAAE;IACbnB,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDkB,WAAW,EAAE;IACXpB,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDmB,IAAI,EAAE;IACJrB,IAAI,EAAEE,MAAM;IACZ,WAAS;EACb,CAAG;EACDoB,aAAa,EAAE;IACbtB,IAAI,EAAEC,OAAO;IACb,WAAS;EACb,CAAG;EACDsB,YAAY,EAAE;IACZvB,IAAI,EAAEwB,cAAc,CAACC,QAAQ;EACjC,CAAG;EACDC,EAAE,EAAExB,MAAM;EACVyB,QAAQ,EAAE;IACR3B,IAAI,EAAE,CAACE,MAAM,EAAEC,MAAM;EACzB,CAAG;EACDyB,KAAK,EAAE;IACL5B,IAAI,EAAE,CAACC,OAAO,EAAEC,MAAM,EAAEC,MAAM,CAAC;IAC/B,WAAS;EACb;AACA,CAAC;AACW,IAAC0B,WAAW,IAAAC,YAAA,OAAAC,eAAA,CAAAD,YAAA,EACrBE,kBAAkB,EAAG,UAACC,GAAG;EAAA,OAAKC,SAAS,CAACD,GAAG,CAAC,IAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIG,QAAQ,CAACH,GAAG,CAAC;AAAA,IAAAF,eAAA,CAAAD,YAAA,EAC9EO,YAAY,EAAG,UAACJ,GAAG;EAAA,OAAKC,SAAS,CAACD,GAAG,CAAC,IAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIG,QAAQ,CAACH,GAAG,CAAC;AAAA,IAAAF,eAAA,CAAAD,YAAA,EACxEQ,WAAW,EAAG,UAACL,GAAG;EAAA,OAAKC,SAAS,CAACD,GAAG,CAAC,IAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIG,QAAQ,CAACH,GAAG,CAAC;AAAA,IAAAH,YAAA,CAC1E"},"metadata":{},"sourceType":"module","externalDependencies":[]}