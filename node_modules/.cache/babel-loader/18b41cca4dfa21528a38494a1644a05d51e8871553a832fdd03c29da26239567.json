{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, computed, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { checkTagProps, checkTagEmits } from './check-tag.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event.mjs';\nvar __default__ = defineComponent({\n  name: \"ElCheckTag\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: checkTagProps,\n  emits: checkTagEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"check-tag\");\n    var containerKls = computed(function () {\n      return [ns.b(), ns.is(\"checked\", props.checked)];\n    });\n    var handleChange = function handleChange() {\n      var checked = !props.checked;\n      emit(CHANGE_EVENT, checked);\n      emit(\"update:checked\", checked);\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"span\", {\n        \"class\": normalizeClass(unref(containerKls)),\n        onClick: handleChange\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n}));\nvar CheckTag = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/check-tag/src/check-tag.vue\"]]);\nexport { CheckTag as default };","map":{"version":3,"names":["name","ns","useNamespace","containerKls","computed","b","is","props","checked","handleChange","emit","CHANGE_EVENT"],"sources":["../../../../../../packages/components/check-tag/src/check-tag.vue"],"sourcesContent":["<template>\n  <span :class=\"containerKls\" @click=\"handleChange\">\n    <slot />\n  </span>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { CHANGE_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { checkTagEmits, checkTagProps } from './check-tag'\n\ndefineOptions({\n  name: 'ElCheckTag',\n})\nconst props = defineProps(checkTagProps)\nconst emit = defineEmits(checkTagEmits)\n\nconst ns = useNamespace('check-tag')\nconst containerKls = computed(() => [ns.b(), ns.is('checked', props.checked)])\n\nconst handleChange = () => {\n  const checked = !props.checked\n  emit(CHANGE_EVENT, checked)\n  emit('update:checked', checked)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;iCAYc;EACZA,IAAM;AACR;;;;;;;IAIM,IAAAC,EAAA,GAAKC,YAAA,CAAa,WAAW;IACnC,IAAMC,YAAe,GAAAC,QAAA,CAAS;MAAA,OAAM,CAACH,EAAG,CAAAI,CAAA,EAAK,EAAAJ,EAAA,CAAGK,EAAG,YAAWC,KAAM,CAAAC,OAAO,CAAC,CAAC;IAAA;IAE7E,IAAMC,YAAA,GAAe,SAAfA,aAAA,EAAqB;MACnB,IAAAD,OAAA,GAAU,CAACD,KAAM,CAAAC,OAAA;MACvBE,IAAA,CAAKC,YAAA,EAAcH,OAAO;MAC1BE,IAAA,CAAK,kBAAkBF,OAAO;IAAA,CAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}