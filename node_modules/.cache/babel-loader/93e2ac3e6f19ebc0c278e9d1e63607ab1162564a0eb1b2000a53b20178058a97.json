{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, ref, computed, resolveComponent, openBlock, createBlock, normalizeClass, withCtx, createElementBlock, Fragment, renderList, createVNode, createTextVNode, toDisplayString, createCommentVNode } from 'vue';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { Loading } from '@element-plus/icons-vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport ElCascaderNode from './node2.mjs';\nimport { CASCADER_PANEL_INJECTION_KEY } from './types.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { generateId } from '../../../utils/rand.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElCascaderMenu\",\n  components: {\n    Loading: Loading,\n    ElIcon: ElIcon,\n    ElScrollbar: ElScrollbar,\n    ElCascaderNode: ElCascaderNode\n  },\n  props: {\n    nodes: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  setup: function setup(props) {\n    var instance = getCurrentInstance();\n    var ns = useNamespace(\"cascader-menu\");\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var id = generateId();\n    var activeNode = null;\n    var hoverTimer = null;\n    var panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    var hoverZone = ref(null);\n    var isEmpty = computed(function () {\n      return !props.nodes.length;\n    });\n    var isLoading = computed(function () {\n      return !panel.initialLoaded;\n    });\n    var menuId = computed(function () {\n      return \"cascader-menu-\".concat(id, \"-\").concat(props.index);\n    });\n    var handleExpand = function handleExpand(e) {\n      activeNode = e.target;\n    };\n    var handleMouseMove = function handleMouseMove(e) {\n      if (!panel.isHoverMenu || !activeNode || !hoverZone.value) return;\n      if (activeNode.contains(e.target)) {\n        clearHoverTimer();\n        var el = instance.vnode.el;\n        var _el$getBoundingClient = el.getBoundingClientRect(),\n          left = _el$getBoundingClient.left;\n        var offsetWidth = el.offsetWidth,\n          offsetHeight = el.offsetHeight;\n        var startX = e.clientX - left;\n        var top = activeNode.offsetTop;\n        var bottom = top + activeNode.offsetHeight;\n        hoverZone.value.innerHTML = \"\\n          <path style=\\\"pointer-events: auto;\\\" fill=\\\"transparent\\\" d=\\\"M\".concat(startX, \" \").concat(top, \" L\").concat(offsetWidth, \" 0 V\").concat(top, \" Z\\\" />\\n          <path style=\\\"pointer-events: auto;\\\" fill=\\\"transparent\\\" d=\\\"M\").concat(startX, \" \").concat(bottom, \" L\").concat(offsetWidth, \" \").concat(offsetHeight, \" V\").concat(bottom, \" Z\\\" />\\n        \");\n      } else if (!hoverTimer) {\n        hoverTimer = window.setTimeout(clearHoverZone, panel.config.hoverThreshold);\n      }\n    };\n    var clearHoverTimer = function clearHoverTimer() {\n      if (!hoverTimer) return;\n      clearTimeout(hoverTimer);\n      hoverTimer = null;\n    };\n    var clearHoverZone = function clearHoverZone() {\n      if (!hoverZone.value) return;\n      hoverZone.value.innerHTML = \"\";\n      clearHoverTimer();\n    };\n    return {\n      ns: ns,\n      panel: panel,\n      hoverZone: hoverZone,\n      isEmpty: isEmpty,\n      isLoading: isLoading,\n      menuId: menuId,\n      t: t,\n      handleExpand: handleExpand,\n      handleMouseMove: handleMouseMove,\n      clearHoverZone: clearHoverZone\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_cascader_node = resolveComponent(\"el-cascader-node\");\n  var _component_loading = resolveComponent(\"loading\");\n  var _component_el_icon = resolveComponent(\"el-icon\");\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  return openBlock(), createBlock(_component_el_scrollbar, {\n    key: _ctx.menuId,\n    tag: \"ul\",\n    role: \"menu\",\n    \"class\": normalizeClass(_ctx.ns.b()),\n    \"wrap-class\": _ctx.ns.e(\"wrap\"),\n    \"view-class\": [_ctx.ns.e(\"list\"), _ctx.ns.is(\"empty\", _ctx.isEmpty)],\n    onMousemove: _ctx.handleMouseMove,\n    onMouseleave: _ctx.clearHoverZone\n  }, {\n    \"default\": withCtx(function () {\n      var _a;\n      return [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.nodes, function (node) {\n        return openBlock(), createBlock(_component_el_cascader_node, {\n          key: node.uid,\n          node: node,\n          \"menu-id\": _ctx.menuId,\n          onExpand: _ctx.handleExpand\n        }, null, 8, [\"node\", \"menu-id\", \"onExpand\"]);\n      }), 128)), _ctx.isLoading ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.e(\"empty-text\"))\n      }, [createVNode(_component_el_icon, {\n        size: \"14\",\n        \"class\": normalizeClass(_ctx.ns.is(\"loading\"))\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_loading)];\n        }),\n        _: 1\n      }, 8, [\"class\"]), createTextVNode(\" \" + toDisplayString(_ctx.t(\"el.cascader.loading\")), 1)], 2)) : _ctx.isEmpty ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        \"class\": normalizeClass(_ctx.ns.e(\"empty-text\"))\n      }, toDisplayString(_ctx.t(\"el.cascader.noData\")), 3)) : ((_a = _ctx.panel) == null ? void 0 : _a.isHoverMenu) ? (openBlock(), createElementBlock(\"svg\", {\n        key: 2,\n        ref: \"hoverZone\",\n        \"class\": normalizeClass(_ctx.ns.e(\"hover-zone\"))\n      }, null, 2)) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  }, 8, [\"class\", \"wrap-class\", \"view-class\", \"onMousemove\", \"onMouseleave\"]);\n}\nvar ElCascaderMenu = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/cascader-panel/src/menu.vue\"]]);\nexport { ElCascaderMenu as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","Loading","ElIcon","ElScrollbar","ElCascaderNode","props","nodes","type","Array","required","index","Number","setup","instance","getCurrentInstance","ns","useNamespace","_useLocale","useLocale","t","id","generateId","activeNode","hoverTimer","panel","inject","CASCADER_PANEL_INJECTION_KEY","hoverZone","ref","isEmpty","computed","length","isLoading","initialLoaded","menuId","concat","handleExpand","e","target","handleMouseMove","isHoverMenu","value","contains","clearHoverTimer","el","vnode","_el$getBoundingClient","getBoundingClientRect","left","offsetWidth","offsetHeight","startX","clientX","top","offsetTop","bottom","innerHTML","window","setTimeout","clearHoverZone","config","hoverThreshold","clearTimeout","createBlock","_component_el_scrollbar","key","_ctx","tag","role","normalizeClass","b","is","onMousemove","onMouseleave","_a","openBlock","createElementBlock","Fragment","renderList","node","_component_el_cascader_node","uid","createVNode","_component_el_icon","size","withCtx","_","createTextVNode","toDisplayString"],"sources":["../../../../../../packages/components/cascader-panel/src/menu.vue"],"sourcesContent":["<template>\n  <el-scrollbar\n    :key=\"menuId\"\n    tag=\"ul\"\n    role=\"menu\"\n    :class=\"ns.b()\"\n    :wrap-class=\"ns.e('wrap')\"\n    :view-class=\"[ns.e('list'), ns.is('empty', isEmpty)]\"\n    @mousemove=\"handleMouseMove\"\n    @mouseleave=\"clearHoverZone\"\n  >\n    <el-cascader-node\n      v-for=\"node in nodes\"\n      :key=\"node.uid\"\n      :node=\"node\"\n      :menu-id=\"menuId\"\n      @expand=\"handleExpand\"\n    />\n    <div v-if=\"isLoading\" :class=\"ns.e('empty-text')\">\n      <el-icon size=\"14\" :class=\"ns.is('loading')\">\n        <loading />\n      </el-icon>\n      {{ t('el.cascader.loading') }}\n    </div>\n    <div v-else-if=\"isEmpty\" :class=\"ns.e('empty-text')\">\n      {{ t('el.cascader.noData') }}\n    </div>\n    <svg\n      v-else-if=\"panel?.isHoverMenu\"\n      ref=\"hoverZone\"\n      :class=\"ns.e('hover-zone')\"\n    />\n  </el-scrollbar>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, getCurrentInstance, inject, ref } from 'vue'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { generateId } from '@element-plus/utils'\nimport { Loading } from '@element-plus/icons-vue'\nimport ElIcon from '@element-plus/components/icon'\nimport ElCascaderNode from './node.vue'\nimport { CASCADER_PANEL_INJECTION_KEY } from './types'\n\nimport type { default as CascaderNode } from './node'\nimport type { PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\nexport default defineComponent({\n  name: 'ElCascaderMenu',\n\n  components: {\n    Loading,\n    ElIcon,\n    ElScrollbar,\n    ElCascaderNode,\n  },\n\n  props: {\n    nodes: {\n      type: Array as PropType<CascaderNode[]>,\n      required: true,\n    },\n    index: {\n      type: Number,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const instance = getCurrentInstance()!\n    const ns = useNamespace('cascader-menu')\n\n    const { t } = useLocale()\n    const id = generateId()\n    let activeNode: Nullable<HTMLElement> = null\n    let hoverTimer: Nullable<number> = null\n\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY)!\n\n    const hoverZone = ref<null | SVGSVGElement>(null)\n\n    const isEmpty = computed(() => !props.nodes.length)\n    const isLoading = computed(() => !panel.initialLoaded)\n    const menuId = computed(() => `cascader-menu-${id}-${props.index}`)\n\n    const handleExpand = (e: MouseEvent) => {\n      activeNode = e.target as HTMLElement\n    }\n\n    const handleMouseMove = (e: MouseEvent) => {\n      if (!panel.isHoverMenu || !activeNode || !hoverZone.value) return\n\n      if (activeNode.contains(e.target as HTMLElement)) {\n        clearHoverTimer()\n\n        const el = instance.vnode.el as HTMLElement\n        const { left } = el.getBoundingClientRect()\n        const { offsetWidth, offsetHeight } = el\n        const startX = e.clientX - left\n        const top = activeNode.offsetTop\n        const bottom = top + activeNode.offsetHeight\n\n        hoverZone.value.innerHTML = `\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${top} L${offsetWidth} 0 V${top} Z\" />\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${bottom} L${offsetWidth} ${offsetHeight} V${bottom} Z\" />\n        `\n      } else if (!hoverTimer) {\n        hoverTimer = window.setTimeout(\n          clearHoverZone,\n          panel.config.hoverThreshold\n        )\n      }\n    }\n\n    const clearHoverTimer = () => {\n      if (!hoverTimer) return\n      clearTimeout(hoverTimer)\n      hoverTimer = null\n    }\n\n    const clearHoverZone = () => {\n      if (!hoverZone.value) return\n      hoverZone.value.innerHTML = ''\n      clearHoverTimer()\n    }\n    return {\n      ns,\n      panel,\n      hoverZone,\n      isEmpty,\n      isLoading,\n      menuId,\n      t,\n      handleExpand,\n      handleMouseMove,\n      clearHoverZone,\n    }\n  },\n})\n</script>\n"],"mappings":";;;;;;;;;;;;AAiDA,IAAKA,SAAA,GAAaC,eAAa;EAC7BC,IAAM;EAENC,UAAY;IACVC,OAAA,EAAAA,OAAA;IACAC,MAAA,EAAAA,MAAA;IACAC,WAAA,EAAAA,WAAA;IACAC,cAAA,EAAAA;EAAA,CACF;EAEAC,KAAO;IACLC,KAAO;MACLC,IAAM,EAAAC,KAAA;MACNC,QAAU;IAAA,CACZ;IACAC,KAAO;MACLH,IAAM,EAAAI,MAAA;MACNF,QAAU;IAAA;EACZ,CACF;EAEAG,KAAA,WAAAA,MAAMP,KAAO;IACX,IAAMQ,QAAA,GAAWC,kBAAmB;IAC9B,IAAAC,EAAA,GAAKC,YAAA,CAAa,eAAe;IAEjC,IAAAC,UAAA,GAAQC,SAAU;MAAhBC,CAAA,GAAAF,UAAA,CAAAE,CAAA;IACR,IAAMC,EAAA,GAAKC,UAAW;IACtB,IAAIC,UAAoC;IACxC,IAAIC,UAA+B;IAE7B,IAAAC,KAAA,GAAQC,MAAA,CAAOC,4BAA4B;IAE3C,IAAAC,SAAA,GAAYC,GAAA,CAA0B,IAAI;IAEhD,IAAMC,OAAA,GAAUC,QAAS;MAAA,OAAM,CAACzB,KAAA,CAAMC,KAAA,CAAMyB,MAAM;IAAA;IAClD,IAAMC,SAAY,GAAAF,QAAA,CAAS;MAAA,OAAM,CAACN,KAAA,CAAMS,aAAa;IAAA;IACrD,IAAMC,MAAA,GAASJ,QAAS;MAAA,wBAAAK,MAAA,CAAuBf,EAAA,OAAAe,MAAA,CAAM9B,KAAA,CAAMK,KAAO;IAAA;IAE5D,IAAA0B,YAAA,GAAe,SAAfA,aAAgBC,CAAkB;MACtCf,UAAA,GAAae,CAAE,CAAAC,MAAA;IAAA,CACjB;IAEM,IAAAC,eAAA,GAAkB,SAAlBA,gBAAmBF,CAAkB;MACzC,IAAI,CAACb,KAAM,CAAAgB,WAAA,IAAe,CAAClB,UAAA,IAAc,CAACK,SAAU,CAAAc,KAAA,EAAO;MAE3D,IAAInB,UAAW,CAAAoB,QAAA,CAASL,CAAE,CAAAC,MAAqB,CAAG;QAChCK,eAAA;QAEV,IAAAC,EAAA,GAAK/B,QAAA,CAASgC,KAAM,CAAAD,EAAA;QACpB,IAAAE,qBAAA,GAAWF,EAAA,CAAGG,qBAAsB;UAAlCC,IAAS,GAAAF,qBAAA,CAATE,IAAS;QACX,IAAEC,WAAA,GAA8BL,EAAA,CAA9BK,WAAA;UAAaC,YAAiB,GAAAN,EAAA,CAAjBM,YAAiB;QAChC,IAAAC,MAAA,GAASd,CAAA,CAAEe,OAAU,GAAAJ,IAAA;QAC3B,IAAMK,GAAA,GAAM/B,UAAW,CAAAgC,SAAA;QACjB,IAAAC,MAAA,GAASF,GAAA,GAAM/B,UAAW,CAAA4B,YAAA;QAEhCvB,SAAA,CAAUc,KAAA,CAAMe,SAAY,kFAAArB,MAAA,CACmCgB,MAAA,OAAAhB,MAAA,CAAUkB,GAAA,QAAAlB,MAAA,CAAQc,WAAkB,UAAAd,MAAA,CAAAkB,GAAA,yFAAAlB,MAAA,CACpCgB,MAAA,OAAAhB,MAAA,CAAUoB,MAAW,QAAApB,MAAA,CAAAc,WAAA,OAAAd,MAAA,CAAee,YAAiB,QAAAf,MAAA,CAAAoB,MAAA;MAAA,CAEtH,UAAW,CAAChC,UAAY;QACtBA,UAAA,GAAakC,MAAO,CAAAC,UAAA,CAClBC,cACA,EAAAnC,KAAA,CAAMoC,MAAA,CAAOC,cACf;MAAA;IACF,CACF;IAEA,IAAMlB,eAAA,GAAkB,SAAlBA,gBAAA,EAAwB;MAC5B,IAAI,CAACpB,UAAA,EAAY;MACjBuC,YAAA,CAAavC,UAAU;MACVA,UAAA;IAAA,CACf;IAEA,IAAMoC,cAAA,GAAiB,SAAjBA,eAAA,EAAuB;MAC3B,IAAI,CAAChC,SAAU,CAAAc,KAAA,EAAO;MACtBd,SAAA,CAAUc,KAAA,CAAMe,SAAY;MACZb,eAAA;IAAA,CAClB;IACO;MACL5B,EAAA,EAAAA,EAAA;MACAS,KAAA,EAAAA,KAAA;MACAG,SAAA,EAAAA,SAAA;MACAE,OAAA,EAAAA,OAAA;MACAG,SAAA,EAAAA,SAAA;MACAE,MAAA,EAAAA,MAAA;MACAf,CAAA,EAAAA,CAAA;MACAiB,YAAA,EAAAA,YAAA;MACAG,eAAA,EAAAA,eAAA;MACAoB,cAAA,EAAAA;IAAA,CACF;EAAA;AAEJ,CAAC;;;;;;sBA3ICI,WA+Be,CAAAC,uBAAA;IA9BZC,GAAK,EAAAC,IAAA,CAAAhC,MAAA;IACNiC,GAAI;IACJC,IAAK;IACJ,SAAKC,cAAE,CAAAH,IAAA,CAAAnD,EAAA,CAAGuD,CAAC;IACX,cAAYJ,IAAA,CAAAnD,EAAA,CAAGsB,CAAC;IAChB,cAAU,CAAG6B,IAAG,CAAAnD,EAAA,CAAAsB,CAAA,CAAC,SAAU6B,IAAG,CAAAnD,EAAA,CAAAwD,EAAA,CAAE,SAAUL,IAAO,CAAArC,OAAA;IACjD2C,WAAW,EAAAN,IAAA,CAAA3B,eAAA;IACXkC,YAAY,EAAAP,IAAA,CAAAP;EAAA;uBAGX,YAAqB;MAAA,IAAAe,EAAA;eAKrBC,SAJW,QAAAC,kBAAA,CAAAC,QAAA,QAAAC,UAAA,CAAAZ,IAAA,CAAA5D,KAAA,YAAAyE,IAAA;QACV,OAAAJ,SAAA,IAAAZ,WAAA,CAAAiB,2BAAA;UACSf,GAAA,EAAAc,IAAA,CAAAE,GAAA;UACDF,IAAA,EAAAA,IAAA;UAAA,WAAAb,IAAA,CAAAhC,MAAA;;QAEA,8BAKL;MAAA,WALiBgC,IAAK,CAAAlC,SAAA,IAAA2C,SAAA,IAAMC,kBAAA;QAAAX,GAAA;QAGtB,SAAAI,cAAA,CAAAH,IAAA,CAAAnD,EAAA,CAAAsB,CAAA;MAAA,GAFI,CAAM6C,WAAO,CAAAC,kBAAG,EAAE;QAAAC,IAAA;+BACnB,CAAAlB,IAAA,CAAAnD,EAAA,CAAAwD,EAAA;MAAA;QAAA,WAAAc,OAAA;UAAA,Q;;QACHC,CAAA;MACN,kBAIAC,eAAA,OAAAC,eAAA,CAAAtB,IAAA,CAAA/C,CAAA,6BAFyB,QAAA+C,IAAA,CAAArC,OAAA,IAAA8C,SAAM,IAAAC,kBAAA;QAAAX,GAAA;QAOnC,SAAAI,cAAA,CAAAH,IAAA,CAAAnD,EAAA,CAAAsB,CAAA;OAFI,EAAAmD,eAAA,CAAAtB,IAAA,CAAA/C,CAAA,iCAAAuD,EAAA,GAAAR,IAAA,CAAA1C,KAAA,qBAAAkD,EAAA,CAAAlC,WAAA,KAAAmC,SAAA,IAAAC,kBAAA;QACHX,GAAA,EAAK,CAAE;QAAIrC,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}