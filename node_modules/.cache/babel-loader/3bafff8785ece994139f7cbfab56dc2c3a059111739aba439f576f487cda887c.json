{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, nextTick, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, withDirectives, isRef, vModelRadio, withModifiers, renderSlot, createTextVNode, toDisplayString } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { radioProps, radioEmits } from './radio.mjs';\nimport { useRadio } from './use-radio.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _hoisted_1 = [\"value\", \"name\", \"disabled\"];\nvar __default__ = defineComponent({\n  name: \"ElRadio\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: radioProps,\n  emits: radioEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var ns = useNamespace(\"radio\");\n    var _useRadio = useRadio(props, emit),\n      radioRef = _useRadio.radioRef,\n      radioGroup = _useRadio.radioGroup,\n      focus = _useRadio.focus,\n      size = _useRadio.size,\n      disabled = _useRadio.disabled,\n      modelValue = _useRadio.modelValue;\n    function handleChange() {\n      nextTick(function () {\n        return emit(\"change\", modelValue.value);\n      });\n    }\n    return function (_ctx, _cache) {\n      var _a;\n      return openBlock(), createElementBlock(\"label\", {\n        \"class\": normalizeClass([unref(ns).b(), unref(ns).is(\"disabled\", unref(disabled)), unref(ns).is(\"focus\", unref(focus)), unref(ns).is(\"bordered\", _ctx.border), unref(ns).is(\"checked\", unref(modelValue) === _ctx.label), unref(ns).m(unref(size))])\n      }, [createElementVNode(\"span\", {\n        \"class\": normalizeClass([unref(ns).e(\"input\"), unref(ns).is(\"disabled\", unref(disabled)), unref(ns).is(\"checked\", unref(modelValue) === _ctx.label)])\n      }, [withDirectives(createElementVNode(\"input\", {\n        ref_key: \"radioRef\",\n        ref: radioRef,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n          return isRef(modelValue) ? modelValue.value = $event : null;\n        }),\n        \"class\": normalizeClass(unref(ns).e(\"original\")),\n        value: _ctx.label,\n        name: _ctx.name || ((_a = unref(radioGroup)) == null ? void 0 : _a.name),\n        disabled: unref(disabled),\n        type: \"radio\",\n        onFocus: _cache[1] || (_cache[1] = function ($event) {\n          return focus.value = true;\n        }),\n        onBlur: _cache[2] || (_cache[2] = function ($event) {\n          return focus.value = false;\n        }),\n        onChange: handleChange\n      }, null, 42, _hoisted_1), [[vModelRadio, unref(modelValue)]]), createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"inner\"))\n      }, null, 2)], 2), createElementVNode(\"span\", {\n        \"class\": normalizeClass(unref(ns).e(\"label\")),\n        onKeydown: _cache[3] || (_cache[3] = withModifiers(function () {}, [\"stop\"]))\n      }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n        return [createTextVNode(toDisplayString(_ctx.label), 1)];\n      })], 34)], 2);\n    };\n  }\n}));\nvar Radio = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/radio/src/radio.vue\"]]);\nexport { Radio as default };","map":{"version":3,"names":["name","ns","useNamespace","_useRadio","useRadio","props","emit","radioRef","radioGroup","focus","size","disabled","modelValue","handleChange","nextTick","value"],"sources":["../../../../../../packages/components/radio/src/radio.vue"],"sourcesContent":["<template>\n  <label\n    :class=\"[\n      ns.b(),\n      ns.is('disabled', disabled),\n      ns.is('focus', focus),\n      ns.is('bordered', border),\n      ns.is('checked', modelValue === label),\n      ns.m(size),\n    ]\"\n  >\n    <span\n      :class=\"[\n        ns.e('input'),\n        ns.is('disabled', disabled),\n        ns.is('checked', modelValue === label),\n      ]\"\n    >\n      <input\n        ref=\"radioRef\"\n        v-model=\"modelValue\"\n        :class=\"ns.e('original')\"\n        :value=\"label\"\n        :name=\"name || radioGroup?.name\"\n        :disabled=\"disabled\"\n        type=\"radio\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n        @change=\"handleChange\"\n      />\n      <span :class=\"ns.e('inner')\" />\n    </span>\n    <span :class=\"ns.e('label')\" @keydown.stop>\n      <slot>\n        {{ label }}\n      </slot>\n    </span>\n  </label>\n</template>\n\n<script lang=\"ts\" setup>\nimport { nextTick } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { radioEmits, radioProps } from './radio'\nimport { useRadio } from './use-radio'\n\ndefineOptions({\n  name: 'ElRadio',\n})\n\nconst props = defineProps(radioProps)\nconst emit = defineEmits(radioEmits)\n\nconst ns = useNamespace('radio')\nconst { radioRef, radioGroup, focus, size, disabled, modelValue } = useRadio(\n  props,\n  emit\n)\n\nfunction handleChange() {\n  nextTick(() => emit('change', modelValue.value))\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;iCA8Cc;EACZA,IAAM;AACR;;;;;;;IAKM,IAAAC,EAAA,GAAKC,YAAA,CAAa,OAAO;IACzB,IAAAC,SAAA,GAA8DC,QAClE,CAAAC,KAAA,EACAC,IACF;MAHQC,QAAA,GAAAJ,SAAA,CAAAI,QAAA;MAAUC,UAAY,GAAAL,SAAA,CAAZK,UAAY;MAAAC,KAAA,GAAAN,SAAA,CAAAM,KAAA;MAAOC,IAAA,GAAAP,SAAA,CAAAO,IAAA;MAAMC,QAAU,GAAAR,SAAA,CAAVQ,QAAU;MAAAC,UAAA,GAAAT,SAAA,CAAAS,UAAA;IAK7B,SAAAC,aAAA;MACtBC,QAAA,CAAS;QAAA,OAAMR,IAAA,CAAK,QAAU,EAAAM,UAAA,CAAWG,KAAK,CAAC;MAAA;IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}