{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, inject, computed, openBlock, createElementBlock, normalizeClass, unref, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { CaretRight } from '@element-plus/icons-vue';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport '../../../hooks/index.mjs';\nimport ElNodeContent from './tree-node-content.mjs';\nimport { treeNodeProps, treeNodeEmits, ROOT_TREE_INJECTION_KEY, NODE_CONTEXTMENU } from './virtual-tree.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar _hoisted_1 = [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"data-key\", \"onClick\"];\nvar __default__ = defineComponent({\n  name: \"ElTreeNode\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: treeNodeProps,\n  emits: treeNodeEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var tree = inject(ROOT_TREE_INJECTION_KEY);\n    var ns = useNamespace(\"tree\");\n    var indent = computed(function () {\n      var _a;\n      return (_a = tree == null ? void 0 : tree.props.indent) != null ? _a : 16;\n    });\n    var icon = computed(function () {\n      var _a;\n      return (_a = tree == null ? void 0 : tree.props.icon) != null ? _a : CaretRight;\n    });\n    var handleClick = function handleClick(e) {\n      emit(\"click\", props.node, e);\n    };\n    var handleExpandIconClick = function handleExpandIconClick() {\n      emit(\"toggle\", props.node);\n    };\n    var handleCheckChange = function handleCheckChange(value) {\n      emit(\"check\", props.node, value);\n    };\n    var handleContextMenu = function handleContextMenu(event) {\n      var _a, _b, _c, _d;\n      if ((_c = (_b = (_a = tree == null ? void 0 : tree.instance) == null ? void 0 : _a.vnode) == null ? void 0 : _b.props) == null ? void 0 : _c[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree == null ? void 0 : tree.ctx.emit(NODE_CONTEXTMENU, event, (_d = props.node) == null ? void 0 : _d.data, props.node);\n    };\n    return function (_ctx, _cache) {\n      var _a, _b, _c;\n      return openBlock(), createElementBlock(\"div\", {\n        ref: \"node$\",\n        \"class\": normalizeClass([unref(ns).b(\"node\"), unref(ns).is(\"expanded\", _ctx.expanded), unref(ns).is(\"current\", _ctx.current), unref(ns).is(\"focusable\", !_ctx.disabled), unref(ns).is(\"checked\", !_ctx.disabled && _ctx.checked)]),\n        role: \"treeitem\",\n        tabindex: \"-1\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-disabled\": _ctx.disabled,\n        \"aria-checked\": _ctx.checked,\n        \"data-key\": (_a = _ctx.node) == null ? void 0 : _a.key,\n        onClick: withModifiers(handleClick, [\"stop\"]),\n        onContextmenu: handleContextMenu\n      }, [createElementVNode(\"div\", {\n        \"class\": normalizeClass(unref(ns).be(\"node\", \"content\")),\n        style: normalizeStyle({\n          paddingLeft: \"\".concat((_ctx.node.level - 1) * unref(indent), \"px\"),\n          height: _ctx.itemSize + \"px\"\n        })\n      }, [unref(icon) ? (openBlock(), createBlock(unref(ElIcon), {\n        key: 0,\n        \"class\": normalizeClass([unref(ns).is(\"leaf\", !!((_b = _ctx.node) == null ? void 0 : _b.isLeaf)), unref(ns).is(\"hidden\", _ctx.hiddenExpandIcon), {\n          expanded: !((_c = _ctx.node) == null ? void 0 : _c.isLeaf) && _ctx.expanded\n        }, unref(ns).be(\"node\", \"expand-icon\")]),\n        onClick: withModifiers(handleExpandIconClick, [\"stop\"])\n      }, {\n        \"default\": withCtx(function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(unref(icon))))];\n        }),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(unref(ElCheckbox), {\n        key: 1,\n        \"model-value\": _ctx.checked,\n        indeterminate: _ctx.indeterminate,\n        disabled: _ctx.disabled,\n        onChange: handleCheckChange,\n        onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"]))\n      }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\"])) : createCommentVNode(\"v-if\", true), createVNode(unref(ElNodeContent), {\n        node: _ctx.node\n      }, null, 8, [\"node\"])], 6)], 42, _hoisted_1);\n    };\n  }\n}));\nvar ElTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree-v2/src/tree-node.vue\"]]);\nexport { ElTreeNode as default };","map":{"version":3,"names":["name","tree","inject","ROOT_TREE_INJECTION_KEY","ns","useNamespace","indent","computed","_a","props","icon","CaretRight","handleClick","e","emit","node","handleExpandIconClick","handleCheckChange","value","handleContextMenu","event","_b","_c","_d","instance","vnode","stopPropagation","preventDefault"],"sources":["../../../../../../packages/components/tree-v2/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', current),\n      ns.is('focusable', !disabled),\n      ns.is('checked', !disabled && checked),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"disabled\"\n    :aria-checked=\"checked\"\n    :data-key=\"node?.key\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{\n        paddingLeft: `${(node.level - 1) * indent}px`,\n        height: itemSize + 'px',\n      }\"\n    >\n      <el-icon\n        v-if=\"icon\"\n        :class=\"[\n          ns.is('leaf', !!node?.isLeaf),\n          ns.is('hidden', hiddenExpandIcon),\n          {\n            expanded: !node?.isLeaf && expanded,\n          },\n          ns.be('node', 'expand-icon'),\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"icon\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"checked\"\n        :indeterminate=\"indeterminate\"\n        :disabled=\"disabled\"\n        @change=\"handleCheckChange\"\n        @click.stop\n      />\n      <el-node-content :node=\"node\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, inject } from 'vue'\nimport ElIcon from '@element-plus/components/icon'\nimport { CaretRight } from '@element-plus/icons-vue'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { useNamespace } from '@element-plus/hooks'\nimport ElNodeContent from './tree-node-content'\nimport {\n  NODE_CONTEXTMENU,\n  ROOT_TREE_INJECTION_KEY,\n  treeNodeEmits,\n  treeNodeProps,\n} from './virtual-tree'\nimport type { CheckboxValueType } from '@element-plus/components/checkbox'\n\ndefineOptions({\n  name: 'ElTreeNode',\n})\n\nconst props = defineProps(treeNodeProps)\nconst emit = defineEmits(treeNodeEmits)\n\nconst tree = inject(ROOT_TREE_INJECTION_KEY)\nconst ns = useNamespace('tree')\n\nconst indent = computed(() => {\n  return tree?.props.indent ?? 16\n})\n\nconst icon = computed(() => {\n  return tree?.props.icon ?? CaretRight\n})\n\nconst handleClick = (e: MouseEvent) => {\n  emit('click', props.node, e)\n}\nconst handleExpandIconClick = () => {\n  emit('toggle', props.node)\n}\nconst handleCheckChange = (value: CheckboxValueType) => {\n  emit('check', props.node, value)\n}\nconst handleContextMenu = (event: Event) => {\n  if (tree?.instance?.vnode?.props?.['onNodeContextmenu']) {\n    event.stopPropagation()\n    event.preventDefault()\n  }\n  tree?.ctx.emit(NODE_CONTEXTMENU, event, props.node?.data, props.node)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;iCAoEc;EACZA,IAAM;AACR;;;;;;;IAKM,IAAAC,IAAA,GAAOC,MAAA,CAAOC,uBAAuB;IACrC,IAAAC,EAAA,GAAKC,YAAA,CAAa,MAAM;IAExB,IAAAC,MAAA,GAASC,QAAA,CAAS,YAAM;MACrB,IAAAC,EAAA;MACR,QAAAA,EAAA,GAAAP,IAAA,oBAAAA,IAAA,CAAAQ,KAAA,CAAAH,MAAA,YAAAE,EAAA;IAED,CAAM;IACG,IAAAE,IAAA,GAAAH,QAAY,CAAQ;MAC5B,IAAAC,EAAA;MAEK,QAAAA,EAAA,GAAAP,IAAA,IAAiC,gBAAAA,IAAA,CAAAQ,KAAA,CAAAC,IAAA,YAAAF,EAAA,GAAAG,UAAA;IACrC,CAAK;IACP,IAAAC,WAAA,YAAAA,YAAAC,CAAA;MACAC,IAAM,UAAAL,KAAA,CAAAM,IAAA,EAAAF,CAAA,CAAwB;IAC5B,CAAK;IACP,IAAAG,qBAAA,YAAAA,sBAAA;MACMF,IAAA,WAAAL,KAAA,CAAAM,IAAqB,CAA6B;IACtD,CAAK;IACP,IAAAE,iBAAA,YAAAA,kBAAAC,KAAA;MACMJ,IAAA,UAAAL,KAAA,CAAAM,IAAoB,EAAkBG,KAAA;IAC1C;IACE,IAAAC,iBAAsB,YAAtBA,iBAAsBA,CAAAC,KAAA;MACtB,IAAAZ,EAAA,EAAMa,EAAe,EAAAC,EAAA,EAAAC,EAAA;MACvB,KAAAD,EAAA,IAAAD,EAAA,IAAAb,EAAA,GAAAP,IAAA,oBAAAA,IAAA,CAAAuB,QAAA,qBAAAhB,EAAA,CAAAiB,KAAA,qBAAAJ,EAAA,CAAAZ,KAAA,qBAAAa,EAAA;QACMF,KAAA,CAAAM,eAA2B;QACnCN,KAAA,CAAAO,cAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}