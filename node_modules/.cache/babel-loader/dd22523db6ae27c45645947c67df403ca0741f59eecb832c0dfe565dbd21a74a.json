{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, useSlots, ref, computed, openBlock, createBlock, Transition, unref, withCtx, withDirectives, createElementVNode, normalizeClass, resolveDynamicComponent, createCommentVNode, createElementBlock, renderSlot, createTextVNode, toDisplayString, Fragment, createVNode, vShow } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { alertProps, alertEmits } from './alert.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElAlert\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: alertProps,\n  emits: alertEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var props = __props;\n    var Close = TypeComponents.Close;\n    var slots = useSlots();\n    var ns = useNamespace(\"alert\");\n    var visible = ref(true);\n    var iconComponent = computed(function () {\n      return TypeComponentsMap[props.type];\n    });\n    var iconClass = computed(function () {\n      return [ns.e(\"icon\"), _defineProperty({}, ns.is(\"big\"), !!props.description || !!slots[\"default\"])];\n    });\n    var isBoldTitle = computed(function () {\n      return _defineProperty({}, ns.is(\"bold\"), props.description || slots[\"default\"]);\n    });\n    var close = function close(evt) {\n      visible.value = false;\n      emit(\"close\", evt);\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(Transition, {\n        name: unref(ns).b(\"fade\"),\n        persisted: \"\"\n      }, {\n        \"default\": withCtx(function () {\n          return [withDirectives(createElementVNode(\"div\", {\n            \"class\": normalizeClass([unref(ns).b(), unref(ns).m(_ctx.type), unref(ns).is(\"center\", _ctx.center), unref(ns).is(_ctx.effect)]),\n            role: \"alert\"\n          }, [_ctx.showIcon && unref(iconComponent) ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 0,\n            \"class\": normalizeClass(unref(iconClass))\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(unref(iconComponent))))];\n            }),\n            _: 1\n          }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n            \"class\": normalizeClass(unref(ns).e(\"content\"))\n          }, [_ctx.title || _ctx.$slots.title ? (openBlock(), createElementBlock(\"span\", {\n            key: 0,\n            \"class\": normalizeClass([unref(ns).e(\"title\"), unref(isBoldTitle)])\n          }, [renderSlot(_ctx.$slots, \"title\", {}, function () {\n            return [createTextVNode(toDisplayString(_ctx.title), 1)];\n          })], 2)) : createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] || _ctx.description ? (openBlock(), createElementBlock(\"p\", {\n            key: 1,\n            \"class\": normalizeClass(unref(ns).e(\"description\"))\n          }, [renderSlot(_ctx.$slots, \"default\", {}, function () {\n            return [createTextVNode(toDisplayString(_ctx.description), 1)];\n          })], 2)) : createCommentVNode(\"v-if\", true), _ctx.closable ? (openBlock(), createElementBlock(Fragment, {\n            key: 2\n          }, [_ctx.closeText ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            \"class\": normalizeClass([unref(ns).e(\"close-btn\"), unref(ns).is(\"customed\")]),\n            onClick: close\n          }, toDisplayString(_ctx.closeText), 3)) : (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            \"class\": normalizeClass(unref(ns).e(\"close-btn\")),\n            onClick: close\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(unref(Close))];\n            }),\n            _: 1\n          }, 8, [\"class\"]))], 64)) : createCommentVNode(\"v-if\", true)], 2)], 2), [[vShow, visible.value]])];\n        }),\n        _: 3\n      }, 8, [\"name\"]);\n    };\n  }\n}));\nvar Alert = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/alert/src/alert.vue\"]]);\nexport { Alert as default };","map":{"version":3,"names":["name","Close","TypeComponents","slots","useSlots","ns","useNamespace","visible","ref","iconComponent","computed","TypeComponentsMap","props","type","iconClass","e","_defineProperty","is","description","isBoldTitle","close","evt","value","emit"],"sources":["../../../../../../packages/components/alert/src/alert.vue"],"sourcesContent":["<template>\n  <transition :name=\"ns.b('fade')\">\n    <div\n      v-show=\"visible\"\n      :class=\"[ns.b(), ns.m(type), ns.is('center', center), ns.is(effect)]\"\n      role=\"alert\"\n    >\n      <el-icon v-if=\"showIcon && iconComponent\" :class=\"iconClass\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n\n      <div :class=\"ns.e('content')\">\n        <span\n          v-if=\"title || $slots.title\"\n          :class=\"[ns.e('title'), isBoldTitle]\"\n        >\n          <slot name=\"title\">{{ title }}</slot>\n        </span>\n        <p v-if=\"$slots.default || description\" :class=\"ns.e('description')\">\n          <slot>\n            {{ description }}\n          </slot>\n        </p>\n        <template v-if=\"closable\">\n          <div\n            v-if=\"closeText\"\n            :class=\"[ns.e('close-btn'), ns.is('customed')]\"\n            @click=\"close\"\n          >\n            {{ closeText }}\n          </div>\n          <el-icon v-else :class=\"ns.e('close-btn')\" @click=\"close\">\n            <Close />\n          </el-icon>\n        </template>\n      </div>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\" setup>\nimport { computed, ref, useSlots } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { alertEmits, alertProps } from './alert'\n\nconst { Close } = TypeComponents\n\ndefineOptions({\n  name: 'ElAlert',\n})\n\nconst props = defineProps(alertProps)\nconst emit = defineEmits(alertEmits)\nconst slots = useSlots()\n\nconst ns = useNamespace('alert')\n\nconst visible = ref(true)\n\nconst iconComponent = computed(() => TypeComponentsMap[props.type])\n\nconst iconClass = computed(() => [\n  ns.e('icon'),\n  { [ns.is('big')]: !!props.description || !!slots.default },\n])\n\nconst isBoldTitle = computed(() => {\n  return { [ns.is('bold')]: props.description || slots.default }\n})\n\nconst close = (evt: MouseEvent) => {\n  visible.value = false\n  emit('close', evt)\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;;iCAgDc;EACZA,IAAM;AACR;;;;;;;IAJA,IAAQC,KAAU,GAAAC,cAAA,CAAVD,KAAU;IAQlB,IAAME,KAAA,GAAQC,QAAS;IAEjB,IAAAC,EAAA,GAAKC,YAAA,CAAa,OAAO;IAEzB,IAAAC,OAAA,GAAUC,GAAA,CAAI,IAAI;IAExB,IAAMC,aAAgB,GAAAC,QAAA,CAAS;MAAA,OAAMC,iBAAA,CAAkBC,KAAA,CAAMC,IAAK;IAAA;IAE5D,IAAAC,SAAA,GAAYJ,QAAA,CAAS;MAAA,OAAM,CAC/BL,EAAA,CAAGU,CAAA,CAAE,MAAM,GAAAC,eAAA,KACRX,EAAG,CAAAY,EAAA,CAAG,KAAK,GAAI,CAAC,CAACL,KAAM,CAAAM,WAAA,IAAe,CAAC,CAACf,KAAA,WAAc,EAC1D;IAAA;IAEK,IAAAgB,WAAA,GAAcT,QAAA,CAAS,YAAM;MAC1B,OAAAM,eAAA,KAAGX,EAAG,CAAAY,EAAA,CAAG,MAAM,CAAI,EAAAL,KAAA,CAAMM,WAAe,IAAAf,KAAA,WAAc;IAAA,CAC9D;IAEK,IAAAiB,KAAA,GAAQ,SAARA,MAASC,GAAoB;MACjCd,OAAA,CAAQe,KAAQ;MAChBC,IAAA,CAAK,SAASF,GAAG;IAAA,CACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}