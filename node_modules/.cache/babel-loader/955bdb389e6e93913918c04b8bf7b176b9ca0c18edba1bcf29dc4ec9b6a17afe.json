{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, inject, ref, unref, toRef, openBlock, createBlock, normalizeClass, withCtx, renderSlot } from 'vue';\nimport '../../popper/index.mjs';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from './constants.mjs';\nimport { useTooltipTriggerProps } from './trigger.mjs';\nimport { whenTrigger } from './utils.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { composeEventHandlers } from '../../../utils/dom/event.mjs';\nimport ElPopperTrigger from '../../popper/src/trigger2.mjs';\nvar __default__ = defineComponent({\n  name: \"ElTooltipTrigger\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: useTooltipTriggerProps,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    var props = __props;\n    var ns = useNamespace(\"tooltip\");\n    var _inject = inject(TOOLTIP_INJECTION_KEY, void 0),\n      controlled = _inject.controlled,\n      id = _inject.id,\n      open = _inject.open,\n      onOpen = _inject.onOpen,\n      onClose = _inject.onClose,\n      onToggle = _inject.onToggle;\n    var triggerRef = ref(null);\n    var stopWhenControlledOrDisabled = function stopWhenControlledOrDisabled() {\n      if (unref(controlled) || props.disabled) {\n        return true;\n      }\n    };\n    var trigger = toRef(props, \"trigger\");\n    var onMouseenter = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"hover\", onOpen));\n    var onMouseleave = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"hover\", onClose));\n    var onClick = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"click\", function (e) {\n      if (e.button === 0) {\n        onToggle(e);\n      }\n    }));\n    var onFocus = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"focus\", onOpen));\n    var onBlur = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"focus\", onClose));\n    var onContextMenu = composeEventHandlers(stopWhenControlledOrDisabled, whenTrigger(trigger, \"contextmenu\", function (e) {\n      e.preventDefault();\n      onToggle(e);\n    }));\n    var onKeydown = composeEventHandlers(stopWhenControlledOrDisabled, function (e) {\n      var code = e.code;\n      if (props.triggerKeys.includes(code)) {\n        e.preventDefault();\n        onToggle(e);\n      }\n    });\n    expose({\n      triggerRef: triggerRef\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(unref(ElPopperTrigger), {\n        id: unref(id),\n        \"virtual-ref\": _ctx.virtualRef,\n        open: unref(open),\n        \"virtual-triggering\": _ctx.virtualTriggering,\n        \"class\": normalizeClass(unref(ns).e(\"trigger\")),\n        onBlur: unref(onBlur),\n        onClick: unref(onClick),\n        onContextmenu: unref(onContextMenu),\n        onFocus: unref(onFocus),\n        onMouseenter: unref(onMouseenter),\n        onMouseleave: unref(onMouseleave),\n        onKeydown: unref(onKeydown)\n      }, {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"id\", \"virtual-ref\", \"open\", \"virtual-triggering\", \"class\", \"onBlur\", \"onClick\", \"onContextmenu\", \"onFocus\", \"onMouseenter\", \"onMouseleave\", \"onKeydown\"]);\n    };\n  }\n}));\nvar ElTooltipTrigger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tooltip/src/trigger.vue\"]]);\nexport { ElTooltipTrigger as default };","map":{"version":3,"names":["name","ns","useNamespace","_inject","inject","TOOLTIP_INJECTION_KEY","controlled","id","open","onOpen","onClose","onToggle","triggerRef","ref","stopWhenControlledOrDisabled","unref","props","disabled","trigger","toRef","onMouseenter","composeEventHandlers","whenTrigger","onMouseleave","onClick","e","button","onFocus","onBlur","onContextMenu","preventDefault","onKeydown","code","triggerKeys","includes","expose"],"sources":["../../../../../../packages/components/tooltip/src/trigger.vue"],"sourcesContent":["<template>\n  <el-popper-trigger\n    :id=\"id\"\n    :virtual-ref=\"virtualRef\"\n    :open=\"open\"\n    :virtual-triggering=\"virtualTriggering\"\n    :class=\"ns.e('trigger')\"\n    @blur=\"onBlur\"\n    @click=\"onClick\"\n    @contextmenu=\"onContextMenu\"\n    @focus=\"onFocus\"\n    @mouseenter=\"onMouseenter\"\n    @mouseleave=\"onMouseleave\"\n    @keydown=\"onKeydown\"\n  >\n    <slot />\n  </el-popper-trigger>\n</template>\n<script lang=\"ts\" setup>\nimport { inject, ref, toRef, unref } from 'vue'\nimport { ElPopperTrigger } from '@element-plus/components/popper'\nimport { composeEventHandlers } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { TOOLTIP_INJECTION_KEY } from './constants'\nimport { useTooltipTriggerProps } from './trigger'\nimport { whenTrigger } from './utils'\nimport type { OnlyChildExpose } from '@element-plus/components/slot'\n\ndefineOptions({\n  name: 'ElTooltipTrigger',\n})\n\nconst props = defineProps(useTooltipTriggerProps)\n\nconst ns = useNamespace('tooltip')\nconst { controlled, id, open, onOpen, onClose, onToggle } = inject(\n  TOOLTIP_INJECTION_KEY,\n  undefined\n)!\n\nconst triggerRef = ref<OnlyChildExpose | null>(null)\n\nconst stopWhenControlledOrDisabled = () => {\n  if (unref(controlled) || props.disabled) {\n    return true\n  }\n}\nconst trigger = toRef(props, 'trigger')\nconst onMouseenter = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onOpen)\n)\nconst onMouseleave = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'hover', onClose)\n)\nconst onClick = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'click', (e) => {\n    // distinguish left click\n    if ((e as MouseEvent).button === 0) {\n      onToggle(e)\n    }\n  })\n)\n\nconst onFocus = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onOpen)\n)\n\nconst onBlur = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'focus', onClose)\n)\n\nconst onContextMenu = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  whenTrigger(trigger, 'contextmenu', (e: Event) => {\n    e.preventDefault()\n    onToggle(e)\n  })\n)\n\nconst onKeydown = composeEventHandlers(\n  stopWhenControlledOrDisabled,\n  (e: KeyboardEvent) => {\n    const { code } = e\n    if (props.triggerKeys.includes(code)) {\n      e.preventDefault()\n      onToggle(e)\n    }\n  }\n)\n\ndefineExpose({\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;iCA4Bc;EACZA,IAAM;AACR;;;;;;IAIM,IAAAC,EAAA,GAAKC,YAAA,CAAa,SAAS;IAC3B,IAAAC,OAAA,GAAsDC,MAC1D,CAAAC,qBAAA,EACA,KACF;MAHQC,UAAA,GAAAH,OAAA,CAAAG,UAAA;MAAYC,EAAI,GAAAJ,OAAA,CAAJI,EAAI;MAAAC,IAAA,GAAAL,OAAA,CAAAK,IAAA;MAAMC,MAAA,GAAAN,OAAA,CAAAM,MAAA;MAAQC,OAAS,GAAAP,OAAA,CAATO,OAAS;MAAAC,QAAA,GAAAR,OAAA,CAAAQ,QAAA;IAKzC,IAAAC,UAAA,GAAaC,GAAA,CAA4B,IAAI;IAEnD,IAAMC,4BAAA,GAA+B,SAA/BA,6BAAA,EAAqC;MACzC,IAAIC,KAAM,CAAAT,UAAU,CAAK,IAAAU,KAAA,CAAMC,QAAU;QAChC;MAAA;IACT,CACF;IACM,IAAAC,OAAA,GAAUC,KAAM,CAAAH,KAAA,EAAO,SAAS;IACtC,IAAMI,YAAA,GAAeC,oBACnB,CAAAP,4BAAA,EACAQ,WAAA,CAAYJ,OAAS,WAAST,MAAM,CACtC;IACA,IAAMc,YAAA,GAAeF,oBACnB,CAAAP,4BAAA,EACAQ,WAAA,CAAYJ,OAAS,WAASR,OAAO,CACvC;IACA,IAAMc,OAAA,GAAUH,oBACd,CAAAP,4BAAA,EACAQ,WAAA,CAAYJ,OAAS,WAAS,UAACO,CAAM;MAE9B,IAAAA,CAAA,CAAiBC,MAAA,KAAW,CAAG;QAClCf,QAAA,CAASc,CAAC;MAAA;IACZ,CACD,CACH;IAEA,IAAME,OAAA,GAAUN,oBACd,CAAAP,4BAAA,EACAQ,WAAA,CAAYJ,OAAS,WAAST,MAAM,CACtC;IAEA,IAAMmB,MAAA,GAASP,oBACb,CAAAP,4BAAA,EACAQ,WAAA,CAAYJ,OAAS,WAASR,OAAO,CACvC;IAEA,IAAMmB,aAAA,GAAgBR,oBACpB,CAAAP,4BAAA,EACAQ,WAAA,CAAYJ,OAAS,iBAAe,UAACO,CAAa;MAChDA,CAAA,CAAEK,cAAe;MACjBnB,QAAA,CAASc,CAAC;IAAA,CACX,CACH;IAEA,IAAMM,SAAY,GAAAV,oBAAA,CAChBP,4BACA,YAACW,CAAqB;MACpB,IAAQO,IAAS,GAAAP,CAAA,CAATO,IAAS;MACjB,IAAIhB,KAAM,CAAAiB,WAAA,CAAYC,QAAS,CAAAF,IAAI,CAAG;QACpCP,CAAA,CAAEK,cAAe;QACjBnB,QAAA,CAASc,CAAC;MAAA;IACZ,CAEJ;IAEaU,MAAA;MAIXvB,UAAA,EAAAA;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}