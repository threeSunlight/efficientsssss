{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport MenuItem from './menu-item.mjs';\nvar Menu = /*#__PURE__*/function () {\n  function Menu(domNode, namespace) {\n    _classCallCheck(this, Menu);\n    this.domNode = domNode;\n    this.init(namespace);\n  }\n  _createClass(Menu, [{\n    key: \"init\",\n    value: function init(namespace) {\n      var menuChildren = this.domNode.childNodes;\n      Array.from(menuChildren).forEach(function (child) {\n        if (child.nodeType === 1) {\n          new MenuItem(child, namespace);\n        }\n      });\n    }\n  }]);\n  return Menu;\n}();\nexport { Menu as default };","map":{"version":3,"names":["Menu","domNode","namespace","_classCallCheck","init","_createClass","key","value","menuChildren","childNodes","Array","from","forEach","child","nodeType","MenuItem"],"sources":["../../../../../../../packages/components/menu/src/utils/menu-bar.ts"],"sourcesContent":["import MenuItem from './menu-item'\n\nimport type { RendererNode } from 'vue'\n\nclass Menu {\n  constructor(public domNode: RendererNode, namespace: string) {\n    this.init(namespace)\n  }\n  init(namespace: string): void {\n    const menuChildren = this.domNode.childNodes\n    Array.from<Node>(menuChildren).forEach((child) => {\n      if (child.nodeType === 1) {\n        new MenuItem(child as HTMLElement, namespace)\n      }\n    })\n  }\n}\n\nexport default Menu\n"],"mappings":";;;;;;;IACMA,IAAI;EACR,SAAAA,KAAYC,OAAO,EAAEC,SAAS,EAAE;IAAAC,eAAA,OAAAH,IAAA;IAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,IAAI,CAACF,SAAS,CAAC;EACxB;EAAGG,YAAA,CAAAL,IAAA;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAH,KAAKF,SAAS,EAAE;MACd,IAAMM,YAAY,GAAG,IAAI,CAACP,OAAO,CAACQ,UAAU;MAC5CC,KAAK,CAACC,IAAI,CAACH,YAAY,CAAC,CAACI,OAAO,CAAC,UAACC,KAAK,EAAK;QAC1C,IAAIA,KAAK,CAACC,QAAQ,KAAK,CAAC,EAAE;UACxB,IAAIC,QAAQ,CAACF,KAAK,EAAEX,SAAS,CAAC;QACtC;MACA,CAAK,CAAC;IACN;EAAG;EAAA,OAAAF,IAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}