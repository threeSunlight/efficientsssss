{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { ref, computed, unref, defineComponent, inject, createVNode } from 'vue';\nimport '../../virtual-list/index.mjs';\nimport '../../../utils/index.mjs';\nimport './components/index.mjs';\nimport { TableV2InjectionKey } from './tokens.mjs';\nimport { tableV2GridProps } from './grid.mjs';\nimport { sum } from './utils.mjs';\nimport { isObject } from '@vue/shared';\nimport { isNumber } from '../../../utils/types.mjs';\nimport DynamicSizeGrid from '../../virtual-list/src/components/dynamic-size-grid.mjs';\nimport FixedSizeGrid from '../../virtual-list/src/components/fixed-size-grid.mjs';\nimport TableV2Header from './components/header.mjs';\nvar COMPONENT_NAME = \"ElTableV2Grid\";\nvar useTableGrid = function useTableGrid(props) {\n  var headerRef = ref();\n  var bodyRef = ref();\n  var totalHeight = computed(function () {\n    var data = props.data,\n      rowHeight = props.rowHeight,\n      estimatedRowHeight = props.estimatedRowHeight;\n    if (estimatedRowHeight) {\n      return;\n    }\n    return data.length * rowHeight;\n  });\n  var fixedRowHeight = computed(function () {\n    var fixedData = props.fixedData,\n      rowHeight = props.rowHeight;\n    return ((fixedData == null ? void 0 : fixedData.length) || 0) * rowHeight;\n  });\n  var headerHeight = computed(function () {\n    return sum(props.headerHeight);\n  });\n  var gridHeight = computed(function () {\n    var height = props.height;\n    return Math.max(0, height - unref(headerHeight) - unref(fixedRowHeight));\n  });\n  var hasHeader = computed(function () {\n    return unref(headerHeight) + unref(fixedRowHeight) > 0;\n  });\n  var itemKey = function itemKey(_ref) {\n    var data = _ref.data,\n      rowIndex = _ref.rowIndex;\n    return data[rowIndex][props.rowKey];\n  };\n  function onItemRendered(_ref2) {\n    var rowCacheStart = _ref2.rowCacheStart,\n      rowCacheEnd = _ref2.rowCacheEnd,\n      rowVisibleStart = _ref2.rowVisibleStart,\n      rowVisibleEnd = _ref2.rowVisibleEnd;\n    var _a;\n    (_a = props.onRowsRendered) == null ? void 0 : _a.call(props, {\n      rowCacheStart: rowCacheStart,\n      rowCacheEnd: rowCacheEnd,\n      rowVisibleStart: rowVisibleStart,\n      rowVisibleEnd: rowVisibleEnd\n    });\n  }\n  function resetAfterRowIndex(index, forceUpdate2) {\n    var _a;\n    (_a = bodyRef.value) == null ? void 0 : _a.resetAfterRowIndex(index, forceUpdate2);\n  }\n  function scrollTo(leftOrOptions, top) {\n    var header$ = unref(headerRef);\n    var body$ = unref(bodyRef);\n    if (!header$ || !body$) return;\n    if (isObject(leftOrOptions)) {\n      header$.scrollToLeft(leftOrOptions.scrollLeft);\n      body$.scrollTo(leftOrOptions);\n    } else {\n      header$.scrollToLeft(leftOrOptions);\n      body$.scrollTo({\n        scrollLeft: leftOrOptions,\n        scrollTop: top\n      });\n    }\n  }\n  function scrollToTop(scrollTop) {\n    var _a;\n    (_a = unref(bodyRef)) == null ? void 0 : _a.scrollTo({\n      scrollTop: scrollTop\n    });\n  }\n  function scrollToRow(row, strategy) {\n    var _a;\n    (_a = unref(bodyRef)) == null ? void 0 : _a.scrollToItem(row, 1, strategy);\n  }\n  function forceUpdate() {\n    var _a, _b;\n    (_a = unref(bodyRef)) == null ? void 0 : _a.$forceUpdate();\n    (_b = unref(headerRef)) == null ? void 0 : _b.$forceUpdate();\n  }\n  return {\n    bodyRef: bodyRef,\n    forceUpdate: forceUpdate,\n    fixedRowHeight: fixedRowHeight,\n    gridHeight: gridHeight,\n    hasHeader: hasHeader,\n    headerHeight: headerHeight,\n    headerRef: headerRef,\n    totalHeight: totalHeight,\n    itemKey: itemKey,\n    onItemRendered: onItemRendered,\n    resetAfterRowIndex: resetAfterRowIndex,\n    scrollTo: scrollTo,\n    scrollToTop: scrollToTop,\n    scrollToRow: scrollToRow\n  };\n};\nvar TableGrid = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2GridProps,\n  setup: function setup(props, _ref3) {\n    var slots = _ref3.slots,\n      expose = _ref3.expose;\n    var _inject = inject(TableV2InjectionKey),\n      ns = _inject.ns;\n    var _useTableGrid = useTableGrid(props),\n      bodyRef = _useTableGrid.bodyRef,\n      fixedRowHeight = _useTableGrid.fixedRowHeight,\n      gridHeight = _useTableGrid.gridHeight,\n      hasHeader = _useTableGrid.hasHeader,\n      headerRef = _useTableGrid.headerRef,\n      headerHeight = _useTableGrid.headerHeight,\n      totalHeight = _useTableGrid.totalHeight,\n      forceUpdate = _useTableGrid.forceUpdate,\n      itemKey = _useTableGrid.itemKey,\n      onItemRendered = _useTableGrid.onItemRendered,\n      resetAfterRowIndex = _useTableGrid.resetAfterRowIndex,\n      scrollTo = _useTableGrid.scrollTo,\n      scrollToTop = _useTableGrid.scrollToTop,\n      scrollToRow = _useTableGrid.scrollToRow;\n    expose({\n      forceUpdate: forceUpdate,\n      totalHeight: totalHeight,\n      scrollTo: scrollTo,\n      scrollToTop: scrollToTop,\n      scrollToRow: scrollToRow,\n      resetAfterRowIndex: resetAfterRowIndex\n    });\n    var getColumnWidth = function getColumnWidth() {\n      return props.bodyWidth;\n    };\n    return function () {\n      var cache = props.cache,\n        columns = props.columns,\n        data = props.data,\n        fixedData = props.fixedData,\n        useIsScrolling = props.useIsScrolling,\n        scrollbarAlwaysOn = props.scrollbarAlwaysOn,\n        scrollbarEndGap = props.scrollbarEndGap,\n        scrollbarStartGap = props.scrollbarStartGap,\n        style = props.style,\n        rowHeight = props.rowHeight,\n        bodyWidth = props.bodyWidth,\n        estimatedRowHeight = props.estimatedRowHeight,\n        headerWidth = props.headerWidth,\n        height = props.height,\n        width = props.width,\n        getRowHeight = props.getRowHeight,\n        onScroll = props.onScroll;\n      var isDynamicRowEnabled = isNumber(estimatedRowHeight);\n      var Grid = isDynamicRowEnabled ? DynamicSizeGrid : FixedSizeGrid;\n      var _headerHeight = unref(headerHeight);\n      return createVNode(\"div\", {\n        \"role\": \"table\",\n        \"class\": [ns.e(\"table\"), props[\"class\"]],\n        \"style\": style\n      }, [createVNode(Grid, {\n        \"ref\": bodyRef,\n        \"data\": data,\n        \"useIsScrolling\": useIsScrolling,\n        \"itemKey\": itemKey,\n        \"columnCache\": 0,\n        \"columnWidth\": isDynamicRowEnabled ? getColumnWidth : bodyWidth,\n        \"totalColumn\": 1,\n        \"totalRow\": data.length,\n        \"rowCache\": cache,\n        \"rowHeight\": isDynamicRowEnabled ? getRowHeight : rowHeight,\n        \"width\": width,\n        \"height\": unref(gridHeight),\n        \"class\": ns.e(\"body\"),\n        \"role\": \"rowgroup\",\n        \"scrollbarStartGap\": scrollbarStartGap,\n        \"scrollbarEndGap\": scrollbarEndGap,\n        \"scrollbarAlwaysOn\": scrollbarAlwaysOn,\n        \"onScroll\": onScroll,\n        \"onItemRendered\": onItemRendered,\n        \"perfMode\": false\n      }, {\n        \"default\": function _default(params) {\n          var _a;\n          var rowData = data[params.rowIndex];\n          return (_a = slots.row) == null ? void 0 : _a.call(slots, _objectSpread(_objectSpread({}, params), {}, {\n            columns: columns,\n            rowData: rowData\n          }));\n        }\n      }), unref(hasHeader) && createVNode(TableV2Header, {\n        \"ref\": headerRef,\n        \"class\": ns.e(\"header-wrapper\"),\n        \"columns\": columns,\n        \"headerData\": data,\n        \"headerHeight\": props.headerHeight,\n        \"fixedHeaderData\": fixedData,\n        \"rowWidth\": headerWidth,\n        \"rowHeight\": rowHeight,\n        \"width\": width,\n        \"height\": Math.min(_headerHeight + unref(fixedRowHeight), height)\n      }, {\n        dynamic: slots.header,\n        fixed: slots.row\n      })]);\n    };\n  }\n});\nexport { TableGrid as default };","map":{"version":3,"names":["COMPONENT_NAME","headerRef","ref","bodyRef","totalHeight","computed","data","props","rowHeight","estimatedRowHeight","length","fixedData","headerHeight","sum","gridHeight","height","Math","max","unref","fixedRowHeight","hasHeader","itemKey","_ref","rowIndex","onItemRendered","_ref2","rowCacheStart","rowCacheEnd","rowVisibleStart","_a","onRowsRendered","call","rowVisibleEnd","resetAfterRowIndex","index","forceUpdate2","value","header$","body$","isObject","leftOrOptions","scrollToLeft","scrollLeft","scrollTo","scrollTop","top","scrollToTop","scrollToRow","row","strategy","scrollToItem","forceUpdate","$forceUpdate","_b","TableGrid","defineComponent","tableV2GridProps","setup","_ref3","slots","expose","_inject","inject","TableV2InjectionKey","ns","useTableGrid","_useTableGrid","getColumnWidth","bodyWidth","cache","columns","scrollbarAlwaysOn","scrollbarEndGap","scrollbarStartGap","style","headerWidth","getRowHeight","onScroll","isDynamicRowEnabled","isNumber","Grid","DynamicSizeGrid","FixedSizeGrid","_headerHeight","e","createVNode","useIsScrolling","width","_default","params","rowData","_objectSpread","TableV2Header","min","dynamic","header","fixed"],"sources":["../../../../../../packages/components/table-v2/src/table-grid.tsx"],"sourcesContent":["import { computed, defineComponent, inject, ref, unref } from 'vue'\nimport {\n  DynamicSizeGrid,\n  FixedSizeGrid,\n} from '@element-plus/components/virtual-list'\nimport { isNumber, isObject } from '@element-plus/utils'\nimport { Header } from './components'\nimport { TableV2InjectionKey } from './tokens'\nimport { tableV2GridProps } from './grid'\nimport { sum } from './utils'\n\nimport type { UnwrapRef } from 'vue'\nimport type {\n  DynamicSizeGridInstance,\n  GridDefaultSlotParams,\n  GridItemKeyGetter,\n  GridItemRenderedEvtParams,\n  GridScrollOptions,\n  ResetAfterIndex,\n  Alignment as ScrollStrategy,\n} from '@element-plus/components/virtual-list'\nimport type { TableV2HeaderInstance } from './components'\nimport type { TableV2GridProps } from './grid'\n\nconst COMPONENT_NAME = 'ElTableV2Grid'\n\nconst useTableGrid = (props: TableV2GridProps) => {\n  const headerRef = ref<TableV2HeaderInstance>()\n  const bodyRef = ref<DynamicSizeGridInstance>()\n\n  const totalHeight = computed(() => {\n    const { data, rowHeight, estimatedRowHeight } = props\n\n    if (estimatedRowHeight) {\n      return\n    }\n\n    return data.length * (rowHeight as number)\n  })\n\n  const fixedRowHeight = computed(() => {\n    const { fixedData, rowHeight } = props\n\n    return (fixedData?.length || 0) * (rowHeight as number)\n  })\n\n  const headerHeight = computed(() => sum(props.headerHeight))\n\n  const gridHeight = computed(() => {\n    const { height } = props\n    return Math.max(0, height - unref(headerHeight) - unref(fixedRowHeight))\n  })\n\n  const hasHeader = computed(() => {\n    return unref(headerHeight) + unref(fixedRowHeight) > 0\n  })\n\n  const itemKey: GridItemKeyGetter = ({ data, rowIndex }) =>\n    data[rowIndex][props.rowKey]\n\n  function onItemRendered({\n    rowCacheStart,\n    rowCacheEnd,\n    rowVisibleStart,\n    rowVisibleEnd,\n  }: GridItemRenderedEvtParams) {\n    props.onRowsRendered?.({\n      rowCacheStart,\n      rowCacheEnd,\n      rowVisibleStart,\n      rowVisibleEnd,\n    })\n  }\n\n  function resetAfterRowIndex(index: number, forceUpdate: boolean) {\n    bodyRef.value?.resetAfterRowIndex(index, forceUpdate)\n  }\n\n  function scrollTo(x: number, y: number): void\n  function scrollTo(options: GridScrollOptions): void\n  function scrollTo(leftOrOptions: number | GridScrollOptions, top?: number) {\n    const header$ = unref(headerRef)\n    const body$ = unref(bodyRef)\n\n    if (!header$ || !body$) return\n\n    if (isObject(leftOrOptions)) {\n      header$.scrollToLeft(leftOrOptions.scrollLeft)\n      body$.scrollTo(leftOrOptions)\n    } else {\n      header$.scrollToLeft(leftOrOptions)\n      body$.scrollTo({\n        scrollLeft: leftOrOptions,\n        scrollTop: top,\n      })\n    }\n  }\n\n  function scrollToTop(scrollTop: number) {\n    unref(bodyRef)?.scrollTo({\n      scrollTop,\n    })\n  }\n\n  function scrollToRow(row: number, strategy: ScrollStrategy) {\n    unref(bodyRef)?.scrollToItem(row, 1, strategy)\n  }\n\n  function forceUpdate() {\n    unref(bodyRef)?.$forceUpdate()\n    unref(headerRef)?.$forceUpdate()\n  }\n\n  return {\n    bodyRef,\n    forceUpdate,\n    fixedRowHeight,\n    gridHeight,\n    hasHeader,\n    headerHeight,\n    headerRef,\n    totalHeight,\n\n    itemKey,\n    onItemRendered,\n    resetAfterRowIndex,\n    scrollTo,\n    scrollToTop,\n    scrollToRow,\n  }\n}\n\nconst TableGrid = defineComponent({\n  name: COMPONENT_NAME,\n  props: tableV2GridProps,\n  setup(props, { slots, expose }) {\n    const { ns } = inject(TableV2InjectionKey)!\n\n    const {\n      bodyRef,\n      fixedRowHeight,\n      gridHeight,\n      hasHeader,\n      headerRef,\n      headerHeight,\n      totalHeight,\n\n      forceUpdate,\n      itemKey,\n      onItemRendered,\n      resetAfterRowIndex,\n      scrollTo,\n      scrollToTop,\n      scrollToRow,\n    } = useTableGrid(props)\n\n    expose({\n      forceUpdate,\n      /**\n       * @description fetch total height\n       */\n      totalHeight,\n      /**\n       * @description scroll to a position\n       */\n      scrollTo,\n      /**\n       * @description scroll vertically to position y\n       */\n      scrollToTop,\n      /**\n       * @description scroll to a given row\n       * @params row {Number} which row to scroll to\n       * @params strategy {ScrollStrategy} use what strategy to scroll to\n       */\n      scrollToRow,\n      /**\n       * @description reset rendered state after row index\n       */\n      resetAfterRowIndex,\n    })\n\n    const getColumnWidth = () => props.bodyWidth\n\n    return () => {\n      const {\n        cache,\n        columns,\n        data,\n        fixedData,\n        useIsScrolling,\n        scrollbarAlwaysOn,\n        scrollbarEndGap,\n        scrollbarStartGap,\n        style,\n        rowHeight,\n        bodyWidth,\n        estimatedRowHeight,\n        headerWidth,\n        height,\n        width,\n\n        getRowHeight,\n        onScroll,\n      } = props\n\n      const isDynamicRowEnabled = isNumber(estimatedRowHeight)\n      const Grid = isDynamicRowEnabled ? DynamicSizeGrid : FixedSizeGrid\n      const _headerHeight = unref(headerHeight)\n\n      return (\n        <div role=\"table\" class={[ns.e('table'), props.class]} style={style}>\n          <Grid\n            ref={bodyRef}\n            // special attrs\n            data={data}\n            useIsScrolling={useIsScrolling}\n            itemKey={itemKey}\n            // column attrs\n            columnCache={0}\n            columnWidth={isDynamicRowEnabled ? getColumnWidth : bodyWidth}\n            totalColumn={1}\n            // row attrs\n            totalRow={data.length}\n            rowCache={cache}\n            rowHeight={isDynamicRowEnabled ? getRowHeight : rowHeight}\n            // DOM attrs\n            width={width}\n            height={unref(gridHeight)}\n            class={ns.e('body')}\n            role=\"rowgroup\"\n            scrollbarStartGap={scrollbarStartGap}\n            scrollbarEndGap={scrollbarEndGap}\n            scrollbarAlwaysOn={scrollbarAlwaysOn}\n            // handlers\n            onScroll={onScroll}\n            onItemRendered={onItemRendered}\n            perfMode={false}\n          >\n            {{\n              default: (params: GridDefaultSlotParams) => {\n                const rowData = data[params.rowIndex]\n                return slots.row?.({\n                  ...params,\n                  columns,\n                  rowData,\n                })\n              },\n            }}\n          </Grid>\n          {unref(hasHeader) && (\n            <Header\n              ref={headerRef}\n              class={ns.e('header-wrapper')}\n              columns={columns}\n              headerData={data}\n              headerHeight={props.headerHeight}\n              fixedHeaderData={fixedData}\n              rowWidth={headerWidth}\n              rowHeight={rowHeight}\n              width={width}\n              height={Math.min(_headerHeight + unref(fixedRowHeight), height)}\n            >\n              {{\n                dynamic: slots.header,\n                fixed: slots.row,\n              }}\n            </Header>\n          )}\n        </div>\n      )\n    }\n  },\n})\n\nexport default TableGrid\n\nexport type TableGridRowSlotParams = {\n  columns: TableV2GridProps['columns']\n  rowData: any\n} & GridDefaultSlotParams\n\nexport type TableGridInstance = InstanceType<typeof TableGrid> &\n  UnwrapRef<{\n    forceUpdate: () => void\n    /**\n     * @description fetch total height\n     */\n    totalHeight: number\n\n    /**\n     * @description scrollTo a position\n     * @param { number | ScrollToOptions } arg1\n     * @param { number } arg2\n     */\n    scrollTo(leftOrOptions: number | GridScrollOptions, top?: number): void\n\n    /**\n     * @description scroll vertically to position y\n     */\n    scrollToTop(scrollTop: number): void\n    /**\n     * @description scroll to a given row\n     * @params row {Number} which row to scroll to\n     * @params @optional strategy {ScrollStrategy} use what strategy to scroll to\n     */\n    scrollToRow(row: number, strategy: ScrollStrategy): void\n    /**\n     * @description reset rendered state after row index\n     * @param { number } rowIndex\n     * @param { boolean } forceUpdate\n     */\n    resetAfterRowIndex: ResetAfterIndex\n  }>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}