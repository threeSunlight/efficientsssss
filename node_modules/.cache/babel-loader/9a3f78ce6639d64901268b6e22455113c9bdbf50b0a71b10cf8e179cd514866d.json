{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { inject, provide } from 'vue';\nfunction useNodeExpandEventBroadcast(props) {\n  var parentNodeMap = inject(\"TreeNodeMap\", null);\n  var currentNodeMap = {\n    treeNodeExpand: function treeNodeExpand(node) {\n      if (props.node !== node) {\n        props.node.collapse();\n      }\n    },\n    children: []\n  };\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap);\n  }\n  provide(\"TreeNodeMap\", currentNodeMap);\n  return {\n    broadcastExpanded: function broadcastExpanded(node) {\n      if (!props.accordion) return;\n      var _iterator = _createForOfIteratorHelper(currentNodeMap.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var childNode = _step.value;\n          childNode.treeNodeExpand(node);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n}\nexport { useNodeExpandEventBroadcast };","map":{"version":3,"names":["useNodeExpandEventBroadcast","props","parentNodeMap","inject","currentNodeMap","treeNodeExpand","node","collapse","children","push","provide","broadcastExpanded","accordion","_iterator","_createForOfIteratorHelper","_step","s","n","done","childNode","value","err","e","f"],"sources":["../../../../../../../packages/components/tree/src/model/useNodeExpandEventBroadcast.ts"],"sourcesContent":["// @ts-nocheck\nimport { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n"],"mappings":";;;;AACO,SAASA,2BAA2BA,CAACC,KAAK,EAAE;EACjD,IAAMC,aAAa,GAAGC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;EACjD,IAAMC,cAAc,GAAG;IACrBC,cAAc,EAAE,SAAAA,eAACC,IAAI,EAAK;MACxB,IAAIL,KAAK,CAACK,IAAI,KAAKA,IAAI,EAAE;QACvBL,KAAK,CAACK,IAAI,CAACC,QAAQ,EAAE;MAC7B;IACA,CAAK;IACDC,QAAQ,EAAE;EACd,CAAG;EACD,IAAIN,aAAa,EAAE;IACjBA,aAAa,CAACM,QAAQ,CAACC,IAAI,CAACL,cAAc,CAAC;EAC/C;EACEM,OAAO,CAAC,aAAa,EAAEN,cAAc,CAAC;EACtC,OAAO;IACLO,iBAAiB,EAAE,SAAAA,kBAACL,IAAI,EAAK;MAC3B,IAAI,CAACL,KAAK,CAACW,SAAS,EAClB;MAAO,IAAAC,SAAA,GAAAC,0BAAA,CACeV,cAAc,CAACI,QAAQ;QAAAO,KAAA;MAAA;QAA/C,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA,GAAiD;UAAA,IAAtCC,SAAS,GAAAJ,KAAA,CAAAK,KAAA;UAClBD,SAAS,CAACd,cAAc,CAACC,IAAI,CAAC;QACtC;MAAO,SAAAe,GAAA;QAAAR,SAAA,CAAAS,CAAA,CAAAD,GAAA;MAAA;QAAAR,SAAA,CAAAU,CAAA;MAAA;IACP;EACA,CAAG;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}