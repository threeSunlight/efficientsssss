{"ast":null,"code":"var _checkboxEmits;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { isString } from '@vue/shared';\nimport { isNumber, isBoolean } from '../../../utils/types.mjs';\nvar checkboxProps = {\n  modelValue: {\n    type: [Number, String, Boolean],\n    \"default\": void 0\n  },\n  label: {\n    type: [String, Boolean, Number, Object]\n  },\n  indeterminate: Boolean,\n  disabled: Boolean,\n  checked: Boolean,\n  name: {\n    type: String,\n    \"default\": void 0\n  },\n  trueLabel: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  falseLabel: {\n    type: [String, Number],\n    \"default\": void 0\n  },\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  controls: {\n    type: String,\n    \"default\": void 0\n  },\n  border: Boolean,\n  size: useSizeProp,\n  tabindex: [String, Number],\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  }\n};\nvar checkboxEmits = (_checkboxEmits = {}, _defineProperty(_checkboxEmits, UPDATE_MODEL_EVENT, function (val) {\n  return isString(val) || isNumber(val) || isBoolean(val);\n}), _defineProperty(_checkboxEmits, \"change\", function change(val) {\n  return isString(val) || isNumber(val) || isBoolean(val);\n}), _checkboxEmits);\nexport { checkboxEmits, checkboxProps };","map":{"version":3,"names":["checkboxProps","modelValue","type","Number","String","Boolean","label","Object","indeterminate","disabled","checked","name","trueLabel","falseLabel","id","controls","border","size","useSizeProp","tabindex","validateEvent","checkboxEmits","_checkboxEmits","_defineProperty","UPDATE_MODEL_EVENT","val","isString","isNumber","isBoolean","change"],"sources":["../../../../../../packages/components/checkbox/src/checkbox.ts"],"sourcesContent":["import { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport { isBoolean, isNumber, isString } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type Checkbox from './checkbox.vue'\n\nexport type CheckboxValueType = string | number | boolean\n\nexport const checkboxProps = {\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: [Number, String, Boolean],\n    default: undefined,\n  },\n  /**\n   * @description value of the Checkbox when used inside a `checkbox-group`\n   */\n  label: {\n    type: [String, Boolean, Number, Object],\n  },\n  /**\n   * @description Set indeterminate state, only responsible for style control\n   */\n  indeterminate: Boolean,\n  /**\n   * @description whether the Checkbox is disabled\n   */\n  disabled: Boolean,\n  /**\n   * @description if the Checkbox is checked\n   */\n  checked: Boolean,\n  /**\n   * @description native 'name' attribute\n   */\n  name: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description value of the Checkbox if it's checked\n   */\n  trueLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  /**\n   * @description value of the Checkbox if it's not checked\n   */\n  falseLabel: {\n    type: [String, Number],\n    default: undefined,\n  },\n  /**\n   * @description input id\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description same as [aria-controls](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls), takes effect when `indeterminate` is `true`\n   */\n  controls: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description whether to add a border around Checkbox\n   */\n  border: Boolean,\n  /**\n   * @description size of the Checkbox\n   */\n  size: useSizeProp,\n  /**\n   * @description input tabindex\n   */\n  tabindex: [String, Number],\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n}\n\nexport const checkboxEmits = {\n  [UPDATE_MODEL_EVENT]: (val: CheckboxValueType) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n  change: (val: CheckboxValueType) =>\n    isString(val) || isNumber(val) || isBoolean(val),\n}\n\nexport type CheckboxProps = ExtractPropTypes<typeof checkboxProps>\nexport type CheckboxEmits = typeof checkboxEmits\nexport type CheckboxInstance = InstanceType<typeof Checkbox>\n"],"mappings":";;;;;;;;;;;;AAGY,IAACA,aAAa,GAAG;EAC3BC,UAAU,EAAE;IACVC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,EAAEC,OAAO,CAAC;IAC/B,WAAS,KAAK;EAClB,CAAG;EACDC,KAAK,EAAE;IACLJ,IAAI,EAAE,CAACE,MAAM,EAAEC,OAAO,EAAEF,MAAM,EAAEI,MAAM;EAC1C,CAAG;EACDC,aAAa,EAAEH,OAAO;EACtBI,QAAQ,EAAEJ,OAAO;EACjBK,OAAO,EAAEL,OAAO;EAChBM,IAAI,EAAE;IACJT,IAAI,EAAEE,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDQ,SAAS,EAAE;IACTV,IAAI,EAAE,CAACE,MAAM,EAAED,MAAM,CAAC;IACtB,WAAS,KAAK;EAClB,CAAG;EACDU,UAAU,EAAE;IACVX,IAAI,EAAE,CAACE,MAAM,EAAED,MAAM,CAAC;IACtB,WAAS,KAAK;EAClB,CAAG;EACDW,EAAE,EAAE;IACFZ,IAAI,EAAEE,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDW,QAAQ,EAAE;IACRb,IAAI,EAAEE,MAAM;IACZ,WAAS,KAAK;EAClB,CAAG;EACDY,MAAM,EAAEX,OAAO;EACfY,IAAI,EAAEC,WAAW;EACjBC,QAAQ,EAAE,CAACf,MAAM,EAAED,MAAM,CAAC;EAC1BiB,aAAa,EAAE;IACblB,IAAI,EAAEG,OAAO;IACb,WAAS;EACb;AACA;AACY,IAACgB,aAAa,IAAAC,cAAA,OAAAC,eAAA,CAAAD,cAAA,EACvBE,kBAAkB,EAAG,UAACC,GAAG;EAAA,OAAKC,QAAQ,CAACD,GAAG,CAAC,IAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIG,SAAS,CAACH,GAAG,CAAC;AAAA,IAAAF,eAAA,CAAAD,cAAA,YACvE,SAAAO,OAACJ,GAAG;EAAA,OAAKC,QAAQ,CAACD,GAAG,CAAC,IAAIE,QAAQ,CAACF,GAAG,CAAC,IAAIG,SAAS,CAACH,GAAG,CAAC;AAAA,IAAAH,cAAA,CACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}