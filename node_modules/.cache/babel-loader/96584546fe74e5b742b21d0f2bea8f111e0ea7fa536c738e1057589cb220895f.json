{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, openBlock, createElementBlock, normalizeClass, unref, renderSlot } from 'vue';\nimport { collapseProps, collapseEmits } from './collapse.mjs';\nimport { useCollapse, useCollapseDOM } from './use-collapse.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nvar __default__ = defineComponent({\n  name: \"ElCollapse\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: collapseProps,\n  emits: collapseEmits,\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose,\n      emit = _ref.emit;\n    var props = __props;\n    var _useCollapse = useCollapse(props, emit),\n      activeNames = _useCollapse.activeNames,\n      setActiveNames = _useCollapse.setActiveNames;\n    var _useCollapseDOM = useCollapseDOM(),\n      rootKls = _useCollapseDOM.rootKls;\n    expose({\n      activeNames: activeNames,\n      setActiveNames: setActiveNames\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass(unref(rootKls)),\n        role: \"tablist\",\n        \"aria-multiselectable\": \"true\"\n      }, [renderSlot(_ctx.$slots, \"default\")], 2);\n    };\n  }\n}));\nvar Collapse = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/collapse/src/collapse.vue\"]]);\nexport { Collapse as default };","map":{"version":3,"names":["name","_useCollapse","useCollapse","props","emit","activeNames","setActiveNames","_useCollapseDOM","useCollapseDOM","rootKls","expose"],"sources":["../../../../../../packages/components/collapse/src/collapse.vue"],"sourcesContent":["<template>\n  <div :class=\"rootKls\" role=\"tablist\" aria-multiselectable=\"true\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { collapseEmits, collapseProps } from './collapse'\nimport { useCollapse, useCollapseDOM } from './use-collapse'\n\ndefineOptions({\n  name: 'ElCollapse',\n})\nconst props = defineProps(collapseProps)\nconst emit = defineEmits(collapseEmits)\n\nconst { activeNames, setActiveNames } = useCollapse(props, emit)\n\nconst { rootKls } = useCollapseDOM()\n\ndefineExpose({\n  /** @description active names */\n  activeNames,\n  /** @description set active names */\n  setActiveNames,\n})\n</script>\n"],"mappings":";;;;;;;;;;iCAUc;EACZA,IAAM;AACR;;;;;;;;IAIA,IAAAC,YAAA,GAAwCC,WAAA,CAAYC,KAAA,EAAOC,IAAI;MAAvDC,WAAA,GAAAJ,YAAA,CAAAI,WAAA;MAAaC,cAAmB,GAAAL,YAAA,CAAnBK,cAAmB;IAElC,IAAAC,eAAA,GAAcC,cAAe;MAA3BC,OAAA,GAAAF,eAAA,CAAAE,OAAA;IAEKC,MAAA;MAEXL,WAAA,EAAAA,WAAA;MAEAC,cAAA,EAAAA;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}