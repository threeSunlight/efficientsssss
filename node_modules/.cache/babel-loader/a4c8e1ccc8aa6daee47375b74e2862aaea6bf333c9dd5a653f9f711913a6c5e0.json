{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, inject, ref, openBlock, createElementBlock, normalizeClass, unref, withModifiers, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../form/index.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { uploadContextKey } from './constants.mjs';\nimport { uploadDraggerProps, uploadDraggerEmits } from './upload-dragger.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useFormDisabled } from '../../form/src/hooks/use-form-common-props.mjs';\nvar _hoisted_1 = [\"onDrop\", \"onDragover\"];\nvar COMPONENT_NAME = \"ElUploadDrag\";\nvar __default__ = defineComponent({\n  name: COMPONENT_NAME\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: uploadDraggerProps,\n  emits: uploadDraggerEmits,\n  setup: function setup(__props, _ref) {\n    var emit = _ref.emit;\n    var uploaderContext = inject(uploadContextKey);\n    if (!uploaderContext) {\n      throwError(COMPONENT_NAME, \"usage: <el-upload><el-upload-dragger /></el-upload>\");\n    }\n    var ns = useNamespace(\"upload\");\n    var dragover = ref(false);\n    var disabled = useFormDisabled();\n    var onDrop = function onDrop(e) {\n      if (disabled.value) return;\n      dragover.value = false;\n      e.stopPropagation();\n      var files = Array.from(e.dataTransfer.files);\n      var accept = uploaderContext.accept.value;\n      if (!accept) {\n        emit(\"file\", files);\n        return;\n      }\n      var filesFiltered = files.filter(function (file) {\n        var type = file.type,\n          name = file.name;\n        var extension = name.includes(\".\") ? \".\".concat(name.split(\".\").pop()) : \"\";\n        var baseType = type.replace(/\\/.*$/, \"\");\n        return accept.split(\",\").map(function (type2) {\n          return type2.trim();\n        }).filter(function (type2) {\n          return type2;\n        }).some(function (acceptedType) {\n          if (acceptedType.startsWith(\".\")) {\n            return extension === acceptedType;\n          }\n          if (/\\/\\*$/.test(acceptedType)) {\n            return baseType === acceptedType.replace(/\\/\\*$/, \"\");\n          }\n          if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n            return type === acceptedType;\n          }\n          return false;\n        });\n      });\n      emit(\"file\", filesFiltered);\n    };\n    var onDragover = function onDragover() {\n      if (!disabled.value) dragover.value = true;\n    };\n    return function (_ctx, _cache) {\n      return openBlock(), createElementBlock(\"div\", {\n        \"class\": normalizeClass([unref(ns).b(\"dragger\"), unref(ns).is(\"dragover\", dragover.value)]),\n        onDrop: withModifiers(onDrop, [\"prevent\"]),\n        onDragover: withModifiers(onDragover, [\"prevent\"]),\n        onDragleave: _cache[0] || (_cache[0] = withModifiers(function ($event) {\n          return dragover.value = false;\n        }, [\"prevent\"]))\n      }, [renderSlot(_ctx.$slots, \"default\")], 42, _hoisted_1);\n    };\n  }\n}));\nvar UploadDragger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/upload/src/upload-dragger.vue\"]]);\nexport { UploadDragger as default };","map":{"version":3,"names":["name","COMPONENT_NAME","uploaderContext","inject","uploadContextKey","throwError","ns","useNamespace","dragover","ref","disabled","useFormDisabled","onDrop","e","value","stopPropagation","files","Array","from","dataTransfer","accept","emit","filesFiltered","filter","file","type","extension","includes","concat","split","pop","baseType","replace","map","type2","trim","some","acceptedType","startsWith","test","onDragover"],"sources":["../../../../../../packages/components/upload/src/upload-dragger.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b('dragger'), ns.is('dragover', dragover)]\"\n    @drop.prevent=\"onDrop\"\n    @dragover.prevent=\"onDragover\"\n    @dragleave.prevent=\"dragover = false\"\n  >\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { inject, ref } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useFormDisabled } from '@element-plus/components/form'\nimport { throwError } from '@element-plus/utils/error'\nimport { uploadContextKey } from './constants'\nimport { uploadDraggerEmits, uploadDraggerProps } from './upload-dragger'\n\nconst COMPONENT_NAME = 'ElUploadDrag'\n\ndefineOptions({\n  name: COMPONENT_NAME,\n})\n\ndefineProps(uploadDraggerProps)\nconst emit = defineEmits(uploadDraggerEmits)\n\nconst uploaderContext = inject(uploadContextKey)\nif (!uploaderContext) {\n  throwError(\n    COMPONENT_NAME,\n    'usage: <el-upload><el-upload-dragger /></el-upload>'\n  )\n}\n\nconst ns = useNamespace('upload')\nconst dragover = ref(false)\nconst disabled = useFormDisabled()\n\nconst onDrop = (e: DragEvent) => {\n  if (disabled.value) return\n  dragover.value = false\n\n  e.stopPropagation()\n\n  const files = Array.from(e.dataTransfer!.files)\n  const accept = uploaderContext.accept.value\n  if (!accept) {\n    emit('file', files)\n    return\n  }\n\n  const filesFiltered = files.filter((file) => {\n    const { type, name } = file\n    const extension = name.includes('.') ? `.${name.split('.').pop()}` : ''\n    const baseType = type.replace(/\\/.*$/, '')\n    return accept\n      .split(',')\n      .map((type) => type.trim())\n      .filter((type) => type)\n      .some((acceptedType) => {\n        if (acceptedType.startsWith('.')) {\n          return extension === acceptedType\n        }\n        if (/\\/\\*$/.test(acceptedType)) {\n          return baseType === acceptedType.replace(/\\/\\*$/, '')\n        }\n        if (/^[^/]+\\/[^/]+$/.test(acceptedType)) {\n          return type === acceptedType\n        }\n        return false\n      })\n  })\n\n  emit('file', filesFiltered)\n}\n\nconst onDragover = () => {\n  if (!disabled.value) dragover.value = true\n}\n</script>\n"],"mappings":";;;;;;;;;;;;;;;;;iCAoBc;EACZA,IAAM,EAAAC;AACR;;;;;;IAKM,IAAAC,eAAA,GAAkBC,MAAA,CAAOC,gBAAgB;IAC/C,IAAI,CAACF,eAAiB;MACpBG,UAAA,CACEJ,cAAA,EACA,qDACF;IAAA;IAGI,IAAAK,EAAA,GAAKC,YAAA,CAAa,QAAQ;IAC1B,IAAAC,QAAA,GAAWC,GAAA,CAAI,KAAK;IAC1B,IAAMC,QAAA,GAAWC,eAAgB;IAE3B,IAAAC,MAAA,GAAS,SAATA,OAAUC,CAAiB;MAC/B,IAAIH,QAAS,CAAAI,KAAA,EAAO;MACpBN,QAAA,CAASM,KAAQ;MAEjBD,CAAA,CAAEE,eAAgB;MAElB,IAAMC,KAAQ,GAAAC,KAAA,CAAMC,IAAK,CAAAL,CAAA,CAAEM,YAAA,CAAcH,KAAK;MACxC,IAAAI,MAAA,GAASlB,eAAA,CAAgBkB,MAAO,CAAAN,KAAA;MACtC,IAAI,CAACM,MAAQ;QACXC,IAAA,CAAK,QAAQL,KAAK;QAClB;MAAA;MAGF,IAAMM,aAAgB,GAAAN,KAAA,CAAMO,MAAO,WAACC,IAAS;QACrC,IAAEC,IAAA,GAAeD,IAAA,CAAfC,IAAA;UAAMzB,IAAS,GAAAwB,IAAA,CAATxB,IAAS;QACjB,IAAA0B,SAAA,GAAY1B,IAAK,CAAA2B,QAAA,CAAS,GAAG,QAAAC,MAAA,CAAQ5B,IAAA,CAAK6B,KAAM,IAAG,CAAE,CAAAC,GAAA,EAAU;QACrE,IAAMC,QAAW,GAAAN,IAAA,CAAKO,OAAQ,UAAS,EAAE;QACzC,OAAOZ,MAAA,CACJS,KAAM,IAAG,EACTI,GAAI,WAACC,KAAA;UAAA,OAASA,KAAK,CAAAC,IAAA,EAAM;QAAA,GACzBZ,MAAA,CAAO,UAACW,KAAA;UAAA,OAASA,KAAI;QAAA,EACrB,CAAAE,IAAA,CAAK,UAACC,YAAiB;UAClB,IAAAA,YAAA,CAAaC,UAAW,IAAG,CAAG;YAChC,OAAOZ,SAAc,KAAAW,YAAA;UAAA;UAEnB,YAAQE,IAAK,CAAAF,YAAY,CAAG;YAC9B,OAAON,QAAa,KAAAM,YAAA,CAAaL,OAAQ,UAAS,EAAE;UAAA;UAElD,qBAAiBO,IAAK,CAAAF,YAAY,CAAG;YACvC,OAAOZ,IAAS,KAAAY,YAAA;UAAA;UAEX;QAAA,CACR;MAAA,CACJ;MAEDhB,IAAA,CAAK,QAAQC,aAAa;IAAA,CAC5B;IAEA,IAAMkB,UAAA,GAAa,SAAbA,WAAA,EAAmB;MACvB,IAAI,CAAC9B,QAAS,CAAAI,KAAA,EAAON,QAAA,CAASM,KAAQ;IAAA,CACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}