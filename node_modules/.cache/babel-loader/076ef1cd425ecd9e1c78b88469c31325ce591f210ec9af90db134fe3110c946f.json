{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar GAP = 4;\nvar BAR_MAP = {\n  vertical: {\n    offset: \"offsetHeight\",\n    scroll: \"scrollTop\",\n    scrollSize: \"scrollHeight\",\n    size: \"height\",\n    key: \"vertical\",\n    axis: \"Y\",\n    client: \"clientY\",\n    direction: \"top\"\n  },\n  horizontal: {\n    offset: \"offsetWidth\",\n    scroll: \"scrollLeft\",\n    scrollSize: \"scrollWidth\",\n    size: \"width\",\n    key: \"horizontal\",\n    axis: \"X\",\n    client: \"clientX\",\n    direction: \"left\"\n  }\n};\nvar renderThumbStyle = function renderThumbStyle(_ref) {\n  var _ref2;\n  var move = _ref.move,\n    size = _ref.size,\n    bar = _ref.bar;\n  return _ref2 = {}, _defineProperty(_ref2, bar.size, size), _defineProperty(_ref2, \"transform\", \"translate\".concat(bar.axis, \"(\").concat(move, \"%)\")), _ref2;\n};\nexport { BAR_MAP, GAP, renderThumbStyle };","map":{"version":3,"names":["GAP","BAR_MAP","vertical","offset","scroll","scrollSize","size","key","axis","client","direction","horizontal","renderThumbStyle","_ref","_ref2","move","bar","_defineProperty","concat"],"sources":["../../../../../../packages/components/scrollbar/src/util.ts"],"sourcesContent":["import type { CSSProperties } from 'vue'\nimport type { ThumbProps } from './thumb'\n\nexport const GAP = 4 // top 2 + bottom 2 of bar instance\n\nexport const BAR_MAP = {\n  vertical: {\n    offset: 'offsetHeight',\n    scroll: 'scrollTop',\n    scrollSize: 'scrollHeight',\n    size: 'height',\n    key: 'vertical',\n    axis: 'Y',\n    client: 'clientY',\n    direction: 'top',\n  },\n  horizontal: {\n    offset: 'offsetWidth',\n    scroll: 'scrollLeft',\n    scrollSize: 'scrollWidth',\n    size: 'width',\n    key: 'horizontal',\n    axis: 'X',\n    client: 'clientX',\n    direction: 'left',\n  },\n} as const\n\nexport const renderThumbStyle = ({\n  move,\n  size,\n  bar,\n}: Pick<ThumbProps, 'move' | 'size'> & {\n  bar: typeof BAR_MAP[keyof typeof BAR_MAP]\n}): CSSProperties => ({\n  [bar.size]: size,\n  transform: `translate${bar.axis}(${move}%)`,\n})\n"],"mappings":";;;;AAAY,IAACA,GAAG,GAAG;AACP,IAACC,OAAO,GAAG;EACrBC,QAAQ,EAAE;IACRC,MAAM,EAAE,cAAc;IACtBC,MAAM,EAAE,WAAW;IACnBC,UAAU,EAAE,cAAc;IAC1BC,IAAI,EAAE,QAAQ;IACdC,GAAG,EAAE,UAAU;IACfC,IAAI,EAAE,GAAG;IACTC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACf,CAAG;EACDC,UAAU,EAAE;IACVR,MAAM,EAAE,aAAa;IACrBC,MAAM,EAAE,YAAY;IACpBC,UAAU,EAAE,aAAa;IACzBC,IAAI,EAAE,OAAO;IACbC,GAAG,EAAE,YAAY;IACjBC,IAAI,EAAE,GAAG;IACTC,MAAM,EAAE,SAAS;IACjBC,SAAS,EAAE;EACf;AACA;AACY,IAACE,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA;EAAA,IAAAC,KAAA;EAAA,IAC3BC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IACJT,IAAI,GAAAO,IAAA,CAAJP,IAAI;IACJU,GAAG,GAAAH,IAAA,CAAHG,GAAG;EAAA,OAAAF,KAAA,OAAAG,eAAA,CAAAH,KAAA,EAEFE,GAAG,CAACV,IAAI,EAAGA,IAAI,GAAAW,eAAA,CAAAH,KAAA,2BAAAI,MAAA,CACOF,GAAG,CAACR,IAAI,OAAAU,MAAA,CAAIH,IAAI,UAAAD,KAAA;AAAA,CACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}