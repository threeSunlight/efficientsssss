{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport '../../../utils/index.mjs';\nimport '../../dialog/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { dialogProps, dialogEmits } from '../../dialog/src/dialog.mjs';\nvar drawerProps = buildProps(_objectSpread(_objectSpread({}, dialogProps), {}, {\n  direction: {\n    type: String,\n    \"default\": \"rtl\",\n    values: [\"ltr\", \"rtl\", \"ttb\", \"btt\"]\n  },\n  size: {\n    type: [String, Number],\n    \"default\": \"30%\"\n  },\n  withHeader: {\n    type: Boolean,\n    \"default\": true\n  },\n  modalFade: {\n    type: Boolean,\n    \"default\": true\n  }\n}));\nvar drawerEmits = dialogEmits;\nexport { drawerEmits, drawerProps };","map":{"version":3,"names":["drawerProps","buildProps","_objectSpread","dialogProps","direction","type","String","values","size","Number","withHeader","Boolean","modalFade","drawerEmits","dialogEmits"],"sources":["../../../../../../packages/components/drawer/src/drawer.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\nimport { dialogEmits, dialogProps } from '@element-plus/components/dialog'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const drawerProps = buildProps({\n  ...dialogProps,\n  direction: {\n    type: String,\n    default: 'rtl',\n    values: ['ltr', 'rtl', 'ttb', 'btt'],\n  },\n  size: {\n    type: [String, Number],\n    default: '30%',\n  },\n  withHeader: {\n    type: Boolean,\n    default: true,\n  },\n  modalFade: {\n    type: Boolean,\n    default: true,\n  },\n} as const)\n\nexport type DrawerProps = ExtractPropTypes<typeof drawerProps>\n\nexport const drawerEmits = dialogEmits\n"],"mappings":";;;;;;;;;;AAEY,IAACA,WAAW,GAAGC,UAAU,CAAAC,aAAA,CAAAA,aAAA,KAChCC,WAAW;EACdC,SAAS,EAAE;IACTC,IAAI,EAAEC,MAAM;IACZ,WAAS,KAAK;IACdC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;EACvC,CAAG;EACDC,IAAI,EAAE;IACJH,IAAI,EAAE,CAACC,MAAM,EAAEG,MAAM,CAAC;IACtB,WAAS;EACb,CAAG;EACDC,UAAU,EAAE;IACVL,IAAI,EAAEM,OAAO;IACb,WAAS;EACb,CAAG;EACDC,SAAS,EAAE;IACTP,IAAI,EAAEM,OAAO;IACb,WAAS;EACb;AAAG,EACF;AACW,IAACE,WAAW,GAAGC,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}