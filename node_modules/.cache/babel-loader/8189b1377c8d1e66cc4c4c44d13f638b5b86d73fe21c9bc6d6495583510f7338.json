{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport { defineComponent, inject, ref, getCurrentInstance, provide, watch, nextTick, resolveComponent, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createElementVNode, normalizeStyle, createBlock, withCtx, resolveDynamicComponent, createCommentVNode, createVNode, Fragment, renderList, vShow } from 'vue';\nimport { isFunction, isString } from '@vue/shared';\nimport _CollapseTransition from '../../collapse-transition/index.mjs';\nimport { ElCheckbox } from '../../checkbox/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { Loading, CaretRight } from '@element-plus/icons-vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport NodeContent from './tree-node-content.mjs';\nimport { getNodeKey, handleCurrentChange } from './model/util.mjs';\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast.mjs';\nimport { dragEventsKey } from './model/useDragNode.mjs';\nimport Node from './model/node.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nvar _sfc_main = defineComponent({\n  name: \"ElTreeNode\",\n  components: {\n    ElCollapseTransition: _CollapseTransition,\n    ElCheckbox: ElCheckbox,\n    NodeContent: NodeContent,\n    ElIcon: ElIcon,\n    Loading: Loading\n  },\n  props: {\n    node: {\n      type: Node,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    props: {\n      type: Object,\n      \"default\": function _default() {\n        return {};\n      }\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  emits: [\"node-expand\"],\n  setup: function setup(props, ctx) {\n    var ns = useNamespace(\"tree\");\n    var _useNodeExpandEventBr = useNodeExpandEventBroadcast(props),\n      broadcastExpanded = _useNodeExpandEventBr.broadcastExpanded;\n    var tree = inject(\"RootTree\");\n    var expanded = ref(false);\n    var childNodeRendered = ref(false);\n    var oldChecked = ref(null);\n    var oldIndeterminate = ref(null);\n    var node$ = ref(null);\n    var dragEvents = inject(dragEventsKey);\n    var instance = getCurrentInstance();\n    provide(\"NodeInstance\", instance);\n    if (!tree) {\n      debugWarn(\"Tree\", \"Can not find node's tree.\");\n    }\n    if (props.node.expanded) {\n      expanded.value = true;\n      childNodeRendered.value = true;\n    }\n    var childrenKey = tree.props[\"children\"] || \"children\";\n    watch(function () {\n      var children = props.node.data[childrenKey];\n      return children && _toConsumableArray(children);\n    }, function () {\n      props.node.updateChildren();\n    });\n    watch(function () {\n      return props.node.indeterminate;\n    }, function (val) {\n      handleSelectChange(props.node.checked, val);\n    });\n    watch(function () {\n      return props.node.checked;\n    }, function (val) {\n      handleSelectChange(val, props.node.indeterminate);\n    });\n    watch(function () {\n      return props.node.expanded;\n    }, function (val) {\n      nextTick(function () {\n        return expanded.value = val;\n      });\n      if (val) {\n        childNodeRendered.value = true;\n      }\n    });\n    var getNodeKey$1 = function getNodeKey$1(node) {\n      return getNodeKey(tree.props.nodeKey, node.data);\n    };\n    var getNodeClass = function getNodeClass(node) {\n      var nodeClassFunc = props.props[\"class\"];\n      if (!nodeClassFunc) {\n        return {};\n      }\n      var className;\n      if (isFunction(nodeClassFunc)) {\n        var data = node.data;\n        className = nodeClassFunc(data, node);\n      } else {\n        className = nodeClassFunc;\n      }\n      if (isString(className)) {\n        return _defineProperty({}, className, true);\n      } else {\n        return className;\n      }\n    };\n    var handleSelectChange = function handleSelectChange(checked, indeterminate) {\n      if (oldChecked.value !== checked || oldIndeterminate.value !== indeterminate) {\n        tree.ctx.emit(\"check-change\", props.node.data, checked, indeterminate);\n      }\n      oldChecked.value = checked;\n      oldIndeterminate.value = indeterminate;\n    };\n    var handleClick = function handleClick(e) {\n      handleCurrentChange(tree.store, tree.ctx.emit, function () {\n        return tree.store.value.setCurrentNode(props.node);\n      });\n      tree.currentNode.value = props.node;\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick();\n      }\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: {\n            checked: !props.node.checked\n          }\n        });\n      }\n      tree.ctx.emit(\"node-click\", props.node.data, props.node, instance, e);\n    };\n    var handleContextMenu = function handleContextMenu(event) {\n      if (tree.instance.vnode.props[\"onNodeContextmenu\"]) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n      tree.ctx.emit(\"node-contextmenu\", event, props.node.data, props.node, instance);\n    };\n    var handleExpandIconClick = function handleExpandIconClick() {\n      if (props.node.isLeaf) return;\n      if (expanded.value) {\n        tree.ctx.emit(\"node-collapse\", props.node.data, props.node, instance);\n        props.node.collapse();\n      } else {\n        props.node.expand();\n        ctx.emit(\"node-expand\", props.node.data, props.node, instance);\n      }\n    };\n    var handleCheckChange = function handleCheckChange(value, ev) {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly);\n      nextTick(function () {\n        var store = tree.store.value;\n        tree.ctx.emit(\"check\", props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys()\n        });\n      });\n    };\n    var handleChildNodeExpand = function handleChildNodeExpand(nodeData, node, instance2) {\n      broadcastExpanded(node);\n      tree.ctx.emit(\"node-expand\", nodeData, node, instance2);\n    };\n    var handleDragStart = function handleDragStart(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragStart({\n        event: event,\n        treeNode: props\n      });\n    };\n    var handleDragOver = function handleDragOver(event) {\n      event.preventDefault();\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragOver({\n        event: event,\n        treeNode: {\n          $el: node$.value,\n          node: props.node\n        }\n      });\n    };\n    var handleDrop = function handleDrop(event) {\n      event.preventDefault();\n    };\n    var handleDragEnd = function handleDragEnd(event) {\n      if (!tree.props.draggable) return;\n      dragEvents.treeNodeDragEnd(event);\n    };\n    return {\n      ns: ns,\n      node$: node$,\n      tree: tree,\n      expanded: expanded,\n      childNodeRendered: childNodeRendered,\n      oldChecked: oldChecked,\n      oldIndeterminate: oldIndeterminate,\n      getNodeKey: getNodeKey$1,\n      getNodeClass: getNodeClass,\n      handleSelectChange: handleSelectChange,\n      handleClick: handleClick,\n      handleContextMenu: handleContextMenu,\n      handleExpandIconClick: handleExpandIconClick,\n      handleCheckChange: handleCheckChange,\n      handleChildNodeExpand: handleChildNodeExpand,\n      handleDragStart: handleDragStart,\n      handleDragOver: handleDragOver,\n      handleDrop: handleDrop,\n      handleDragEnd: handleDragEnd,\n      CaretRight: CaretRight\n    };\n  }\n});\nvar _hoisted_1 = [\"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"draggable\", \"data-key\"];\nvar _hoisted_2 = [\"aria-expanded\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_icon = resolveComponent(\"el-icon\");\n  var _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  var _component_loading = resolveComponent(\"loading\");\n  var _component_node_content = resolveComponent(\"node-content\");\n  var _component_el_tree_node = resolveComponent(\"el-tree-node\");\n  var _component_el_collapse_transition = resolveComponent(\"el-collapse-transition\");\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"node$\",\n    \"class\": normalizeClass([_ctx.ns.b(\"node\"), _ctx.ns.is(\"expanded\", _ctx.expanded), _ctx.ns.is(\"current\", _ctx.node.isCurrent), _ctx.ns.is(\"hidden\", !_ctx.node.visible), _ctx.ns.is(\"focusable\", !_ctx.node.disabled), _ctx.ns.is(\"checked\", !_ctx.node.disabled && _ctx.node.checked), _ctx.getNodeClass(_ctx.node)]),\n    role: \"treeitem\",\n    tabindex: \"-1\",\n    \"aria-expanded\": _ctx.expanded,\n    \"aria-disabled\": _ctx.node.disabled,\n    \"aria-checked\": _ctx.node.checked,\n    draggable: _ctx.tree.props.draggable,\n    \"data-key\": _ctx.getNodeKey(_ctx.node),\n    onClick: _cache[1] || (_cache[1] = withModifiers(function () {\n      return _ctx.handleClick && _ctx.handleClick.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onContextmenu: _cache[2] || (_cache[2] = function () {\n      return _ctx.handleContextMenu && _ctx.handleContextMenu.apply(_ctx, arguments);\n    }),\n    onDragstart: _cache[3] || (_cache[3] = withModifiers(function () {\n      return _ctx.handleDragStart && _ctx.handleDragStart.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragover: _cache[4] || (_cache[4] = withModifiers(function () {\n      return _ctx.handleDragOver && _ctx.handleDragOver.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDragend: _cache[5] || (_cache[5] = withModifiers(function () {\n      return _ctx.handleDragEnd && _ctx.handleDragEnd.apply(_ctx, arguments);\n    }, [\"stop\"])),\n    onDrop: _cache[6] || (_cache[6] = withModifiers(function () {\n      return _ctx.handleDrop && _ctx.handleDrop.apply(_ctx, arguments);\n    }, [\"stop\"]))\n  }, [createElementVNode(\"div\", {\n    \"class\": normalizeClass(_ctx.ns.be(\"node\", \"content\")),\n    style: normalizeStyle({\n      paddingLeft: (_ctx.node.level - 1) * _ctx.tree.props.indent + \"px\"\n    })\n  }, [_ctx.tree.props.icon || _ctx.CaretRight ? (openBlock(), createBlock(_component_el_icon, {\n    key: 0,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"expand-icon\"), _ctx.ns.is(\"leaf\", _ctx.node.isLeaf), {\n      expanded: !_ctx.node.isLeaf && _ctx.expanded\n    }]),\n    onClick: withModifiers(_ctx.handleExpandIconClick, [\"stop\"])\n  }, {\n    \"default\": withCtx(function () {\n      return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.tree.props.icon || _ctx.CaretRight)))];\n    }),\n    _: 1\n  }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.showCheckbox ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 1,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: !!_ctx.node.disabled,\n    onClick: _cache[0] || (_cache[0] = withModifiers(function () {}, [\"stop\"])),\n    onChange: _ctx.handleCheckChange\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onChange\"])) : createCommentVNode(\"v-if\", true), _ctx.node.loading ? (openBlock(), createBlock(_component_el_icon, {\n    key: 2,\n    \"class\": normalizeClass([_ctx.ns.be(\"node\", \"loading-icon\"), _ctx.ns.is(\"loading\")])\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_loading)];\n    }),\n    _: 1\n  }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), createVNode(_component_node_content, {\n    node: _ctx.node,\n    \"render-content\": _ctx.renderContent\n  }, null, 8, [\"node\", \"render-content\"])], 6), createVNode(_component_el_collapse_transition, null, {\n    \"default\": withCtx(function () {\n      return [!_ctx.renderAfterExpand || _ctx.childNodeRendered ? withDirectives((openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        \"class\": normalizeClass(_ctx.ns.be(\"node\", \"children\")),\n        role: \"group\",\n        \"aria-expanded\": _ctx.expanded\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.node.childNodes, function (child) {\n        return openBlock(), createBlock(_component_el_tree_node, {\n          key: _ctx.getNodeKey(child),\n          \"render-content\": _ctx.renderContent,\n          \"render-after-expand\": _ctx.renderAfterExpand,\n          \"show-checkbox\": _ctx.showCheckbox,\n          node: child,\n          accordion: _ctx.accordion,\n          props: _ctx.props,\n          onNodeExpand: _ctx.handleChildNodeExpand\n        }, null, 8, [\"render-content\", \"render-after-expand\", \"show-checkbox\", \"node\", \"accordion\", \"props\", \"onNodeExpand\"]);\n      }), 128))], 10, _hoisted_2)), [[vShow, _ctx.expanded]]) : createCommentVNode(\"v-if\", true)];\n    }),\n    _: 1\n  })], 42, _hoisted_1)), [[vShow, _ctx.node.visible]]);\n}\nvar ElTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node.vue\"]]);\nexport { ElTreeNode as default };","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","ElCollapseTransition","_CollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","props","node","type","Node","_default","Object","accordion","Boolean","renderContent","Function","renderAfterExpand","showCheckbox","emits","setup","ctx","ns","useNamespace","_useNodeExpandEventBr","useNodeExpandEventBroadcast","broadcastExpanded","tree","inject","expanded","ref","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","dragEventsKey","instance","getCurrentInstance","provide","debugWarn","value","childrenKey","watch","children","data","_toConsumableArray","updateChildren","indeterminate","val","handleSelectChange","checked","nextTick","getNodeKey$1","getNodeKey","nodeKey","getNodeClass","nodeClassFunc","className","isFunction","isString","_defineProperty","emit","handleClick","e","handleCurrentChange","store","setCurrentNode","currentNode","expandOnClickNode","handleExpandIconClick","checkOnClickNode","disabled","handleCheckChange","target","handleContextMenu","event","vnode","stopPropagation","preventDefault","isLeaf","collapse","expand","ev","setChecked","checkStrictly","checkedNodes","getCheckedNodes","checkedKeys","getCheckedKeys","halfCheckedNodes","getHalfCheckedNodes","halfCheckedKeys","getHalfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","treeNodeDragStart","treeNode","handleDragOver","treeNodeDragOver","$el","handleDrop","handleDragEnd","treeNodeDragEnd","CaretRight","createElementBlock","normalizeClass","_ctx","b","is","isCurrent","visible","role","tabindex","onClick","_cache","withModifiers","apply","arguments","onContextmenu","onDragstart","onDragover","onDragend","onDrop","createElementVNode","be","style","normalizeStyle","paddingLeft","level","indent","icon","openBlock","createBlock","_component_el_icon","key","resolveDynamicComponent","_component_el_checkbox","onChange","createCommentVNode","loading","createVNode","_component_loading","_component_node_content","_component_el_collapse_transition","withCtx","withDirectives","Fragment","renderList","childNodes","child","_component_el_tree_node","onNodeExpand","vShow"],"sources":["../../../../../../packages/components/tree/src/tree-node.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil, handleCurrentChange } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      handleCurrentChange(tree.store, tree.ctx.emit, () =>\n        tree.store.value.setCurrentNode(props.node)\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}