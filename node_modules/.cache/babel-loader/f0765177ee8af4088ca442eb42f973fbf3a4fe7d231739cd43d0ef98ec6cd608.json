{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { nextTick } from 'vue';\nimport { isFunction } from '@vue/shared';\nimport { throttle } from 'lodash-unified';\nimport '../../../utils/index.mjs';\nimport { getOffsetTopDistance } from '../../../utils/dom/position.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\nvar SCOPE = \"ElInfiniteScroll\";\nvar CHECK_INTERVAL = 50;\nvar DEFAULT_DELAY = 200;\nvar DEFAULT_DISTANCE = 0;\nvar attributes = {\n  delay: {\n    type: Number,\n    \"default\": DEFAULT_DELAY\n  },\n  distance: {\n    type: Number,\n    \"default\": DEFAULT_DISTANCE\n  },\n  disabled: {\n    type: Boolean,\n    \"default\": false\n  },\n  immediate: {\n    type: Boolean,\n    \"default\": true\n  }\n};\nvar getScrollOptions = function getScrollOptions(el, instance) {\n  return Object.entries(attributes).reduce(function (acm, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      name = _ref2[0],\n      option = _ref2[1];\n    var _a, _b;\n    var type = option.type,\n      defaultValue = option[\"default\"];\n    var attrVal = el.getAttribute(\"infinite-scroll-\".concat(name));\n    var value = (_b = (_a = instance[attrVal]) != null ? _a : attrVal) != null ? _b : defaultValue;\n    value = value === \"false\" ? false : value;\n    value = type(value);\n    acm[name] = Number.isNaN(value) ? defaultValue : value;\n    return acm;\n  }, {});\n};\nvar destroyObserver = function destroyObserver(el) {\n  var observer = el[SCOPE].observer;\n  if (observer) {\n    observer.disconnect();\n    delete el[SCOPE].observer;\n  }\n};\nvar handleScroll = function handleScroll(el, cb) {\n  var _el$SCOPE = el[SCOPE],\n    container = _el$SCOPE.container,\n    containerEl = _el$SCOPE.containerEl,\n    instance = _el$SCOPE.instance,\n    observer = _el$SCOPE.observer,\n    lastScrollTop = _el$SCOPE.lastScrollTop;\n  var _getScrollOptions = getScrollOptions(el, instance),\n    disabled = _getScrollOptions.disabled,\n    distance = _getScrollOptions.distance;\n  var clientHeight = containerEl.clientHeight,\n    scrollHeight = containerEl.scrollHeight,\n    scrollTop = containerEl.scrollTop;\n  var delta = scrollTop - lastScrollTop;\n  el[SCOPE].lastScrollTop = scrollTop;\n  if (observer || disabled || delta < 0) return;\n  var shouldTrigger = false;\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance;\n  } else {\n    var clientTop = el.clientTop,\n      height = el.scrollHeight;\n    var offsetTop = getOffsetTopDistance(el, containerEl);\n    shouldTrigger = scrollTop + clientHeight >= offsetTop + clientTop + height - distance;\n  }\n  if (shouldTrigger) {\n    cb.call(instance);\n  }\n};\nfunction checkFull(el, cb) {\n  var _el$SCOPE2 = el[SCOPE],\n    containerEl = _el$SCOPE2.containerEl,\n    instance = _el$SCOPE2.instance;\n  var _getScrollOptions2 = getScrollOptions(el, instance),\n    disabled = _getScrollOptions2.disabled;\n  if (disabled || containerEl.clientHeight === 0) return;\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance);\n  } else {\n    destroyObserver(el);\n  }\n}\nvar InfiniteScroll = {\n  mounted: function mounted(el, binding) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var instance, cb, _getScrollOptions3, delay, immediate, container, containerEl, onScroll, observer;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            instance = binding.instance, cb = binding.value;\n            if (!isFunction(cb)) {\n              throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\");\n            }\n            _context.next = 4;\n            return nextTick();\n          case 4:\n            _getScrollOptions3 = getScrollOptions(el, instance), delay = _getScrollOptions3.delay, immediate = _getScrollOptions3.immediate;\n            container = getScrollContainer(el, true);\n            containerEl = container === window ? document.documentElement : container;\n            onScroll = throttle(handleScroll.bind(null, el, cb), delay);\n            if (container) {\n              _context.next = 10;\n              break;\n            }\n            return _context.abrupt(\"return\");\n          case 10:\n            el[SCOPE] = {\n              instance: instance,\n              container: container,\n              containerEl: containerEl,\n              delay: delay,\n              cb: cb,\n              onScroll: onScroll,\n              lastScrollTop: containerEl.scrollTop\n            };\n            if (immediate) {\n              observer = new MutationObserver(throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL));\n              el[SCOPE].observer = observer;\n              observer.observe(el, {\n                childList: true,\n                subtree: true\n              });\n              checkFull(el, cb);\n            }\n            container.addEventListener(\"scroll\", onScroll);\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  unmounted: function unmounted(el) {\n    var _el$SCOPE3 = el[SCOPE],\n      container = _el$SCOPE3.container,\n      onScroll = _el$SCOPE3.onScroll;\n    container == null ? void 0 : container.removeEventListener(\"scroll\", onScroll);\n    destroyObserver(el);\n  },\n  updated: function updated(el) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _el$SCOPE4, containerEl, cb, observer;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (el[SCOPE]) {\n              _context2.next = 5;\n              break;\n            }\n            _context2.next = 3;\n            return nextTick();\n          case 3:\n            _context2.next = 7;\n            break;\n          case 5:\n            _el$SCOPE4 = el[SCOPE], containerEl = _el$SCOPE4.containerEl, cb = _el$SCOPE4.cb, observer = _el$SCOPE4.observer;\n            if (containerEl.clientHeight && observer) {\n              checkFull(el, cb);\n            }\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }))();\n  }\n};\nexport { CHECK_INTERVAL, DEFAULT_DELAY, DEFAULT_DISTANCE, SCOPE, InfiniteScroll as default };","map":{"version":3,"names":["SCOPE","CHECK_INTERVAL","DEFAULT_DELAY","DEFAULT_DISTANCE","attributes","delay","type","Number","distance","disabled","Boolean","immediate","getScrollOptions","el","instance","Object","entries","reduce","acm","_ref","_ref2","_slicedToArray","name","option","_a","_b","defaultValue","attrVal","getAttribute","concat","value","isNaN","destroyObserver","observer","disconnect","handleScroll","cb","_el$SCOPE","container","containerEl","lastScrollTop","_getScrollOptions","clientHeight","scrollHeight","scrollTop","delta","shouldTrigger","clientTop","height","offsetTop","getOffsetTopDistance","call","checkFull","_el$SCOPE2","_getScrollOptions2","InfiniteScroll","mounted","binding","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_getScrollOptions3","onScroll","wrap","_callee$","_context","prev","next","isFunction","throwError","nextTick","getScrollContainer","window","document","documentElement","throttle","bind","abrupt","MutationObserver","observe","childList","subtree","addEventListener","stop","unmounted","_el$SCOPE3","removeEventListener","updated","_callee2","_el$SCOPE4","_callee2$","_context2"],"sources":["../../../../../../packages/components/infinite-scroll/src/index.ts"],"sourcesContent":["// @ts-nocheck\nimport { nextTick } from 'vue'\nimport { isFunction } from '@vue/shared'\nimport { throttle } from 'lodash-unified'\nimport {\n  getOffsetTopDistance,\n  getScrollContainer,\n  throwError,\n} from '@element-plus/utils'\n\nimport type { ComponentPublicInstance, ObjectDirective } from 'vue'\n\nexport const SCOPE = 'ElInfiniteScroll'\nexport const CHECK_INTERVAL = 50\nexport const DEFAULT_DELAY = 200\nexport const DEFAULT_DISTANCE = 0\n\nconst attributes = {\n  delay: {\n    type: Number,\n    default: DEFAULT_DELAY,\n  },\n  distance: {\n    type: Number,\n    default: DEFAULT_DISTANCE,\n  },\n  disabled: {\n    type: Boolean,\n    default: false,\n  },\n  immediate: {\n    type: Boolean,\n    default: true,\n  },\n}\n\ntype Attrs = typeof attributes\ntype ScrollOptions = { [K in keyof Attrs]: Attrs[K]['default'] }\ntype InfiniteScrollCallback = () => void\ntype InfiniteScrollEl = HTMLElement & {\n  [SCOPE]: {\n    container: HTMLElement | Window\n    containerEl: HTMLElement\n    instance: ComponentPublicInstance\n    delay: number // export for test\n    lastScrollTop: number\n    cb: InfiniteScrollCallback\n    onScroll: () => void\n    observer?: MutationObserver\n  }\n}\n\nconst getScrollOptions = (\n  el: HTMLElement,\n  instance: ComponentPublicInstance\n): ScrollOptions => {\n  return Object.entries(attributes).reduce((acm, [name, option]) => {\n    const { type, default: defaultValue } = option\n    const attrVal = el.getAttribute(`infinite-scroll-${name}`)\n    let value = instance[attrVal] ?? attrVal ?? defaultValue\n    value = value === 'false' ? false : value\n    value = type(value)\n    acm[name] = Number.isNaN(value) ? defaultValue : value\n    return acm\n  }, {} as ScrollOptions)\n}\n\nconst destroyObserver = (el: InfiniteScrollEl) => {\n  const { observer } = el[SCOPE]\n\n  if (observer) {\n    observer.disconnect()\n    delete el[SCOPE].observer\n  }\n}\n\nconst handleScroll = (el: InfiniteScrollEl, cb: InfiniteScrollCallback) => {\n  const { container, containerEl, instance, observer, lastScrollTop } =\n    el[SCOPE]\n  const { disabled, distance } = getScrollOptions(el, instance)\n  const { clientHeight, scrollHeight, scrollTop } = containerEl\n  const delta = scrollTop - lastScrollTop\n\n  el[SCOPE].lastScrollTop = scrollTop\n\n  // trigger only if full check has done and not disabled and scroll down\n  if (observer || disabled || delta < 0) return\n\n  let shouldTrigger = false\n\n  if (container === el) {\n    shouldTrigger = scrollHeight - (clientHeight + scrollTop) <= distance\n  } else {\n    // get the scrollHeight since el might be visible overflow\n    const { clientTop, scrollHeight: height } = el\n    const offsetTop = getOffsetTopDistance(el, containerEl)\n    shouldTrigger =\n      scrollTop + clientHeight >= offsetTop + clientTop + height - distance\n  }\n\n  if (shouldTrigger) {\n    cb.call(instance)\n  }\n}\n\nfunction checkFull(el: InfiniteScrollEl, cb: InfiniteScrollCallback) {\n  const { containerEl, instance } = el[SCOPE]\n  const { disabled } = getScrollOptions(el, instance)\n\n  if (disabled || containerEl.clientHeight === 0) return\n\n  if (containerEl.scrollHeight <= containerEl.clientHeight) {\n    cb.call(instance)\n  } else {\n    destroyObserver(el)\n  }\n}\n\nconst InfiniteScroll: ObjectDirective<\n  InfiniteScrollEl,\n  InfiniteScrollCallback\n> = {\n  async mounted(el, binding) {\n    const { instance, value: cb } = binding\n\n    if (!isFunction(cb)) {\n      throwError(SCOPE, \"'v-infinite-scroll' binding value must be a function\")\n    }\n\n    // ensure parentNode mounted\n    await nextTick()\n\n    const { delay, immediate } = getScrollOptions(el, instance)\n    const container = getScrollContainer(el, true)\n    const containerEl =\n      container === window\n        ? document.documentElement\n        : (container as HTMLElement)\n    const onScroll = throttle(handleScroll.bind(null, el, cb), delay)\n\n    if (!container) return\n\n    el[SCOPE] = {\n      instance,\n      container,\n      containerEl,\n      delay,\n      cb,\n      onScroll,\n      lastScrollTop: containerEl.scrollTop,\n    }\n\n    if (immediate) {\n      const observer = new MutationObserver(\n        throttle(checkFull.bind(null, el, cb), CHECK_INTERVAL)\n      )\n      el[SCOPE].observer = observer\n      observer.observe(el, { childList: true, subtree: true })\n      checkFull(el, cb)\n    }\n\n    container.addEventListener('scroll', onScroll)\n  },\n  unmounted(el) {\n    const { container, onScroll } = el[SCOPE]\n\n    container?.removeEventListener('scroll', onScroll)\n    destroyObserver(el)\n  },\n  async updated(el) {\n    if (!el[SCOPE]) {\n      await nextTick()\n    } else {\n      const { containerEl, cb, observer } = el[SCOPE]\n      if (containerEl.clientHeight && observer) {\n        checkFull(el, cb)\n      }\n    }\n  },\n}\n\nexport default InfiniteScroll\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}