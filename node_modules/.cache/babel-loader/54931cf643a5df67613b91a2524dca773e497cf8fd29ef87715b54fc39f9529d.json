{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { defineComponent, getCurrentInstance, ref, computed, watch, toRef, onBeforeUnmount, unref, provide, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, createSlots, withCtx, renderSlot, createBlock, mergeProps, createCommentVNode } from 'vue';\nimport { ElButton } from '../../button/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../roving-focus-group/index.mjs';\nimport '../../slot/index.mjs';\nimport '../../form/index.mjs';\nimport '../../../utils/index.mjs';\nimport { ArrowDown } from '@element-plus/icons-vue';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElCollection, dropdownProps } from './dropdown.mjs';\nimport { DROPDOWN_INJECTION_KEY } from './tokens.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ElRovingFocusGroup from '../../roving-focus-group/src/roving-focus-group2.mjs';\nimport { OnlyChild } from '../../slot/src/only-child.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nimport { addUnit } from '../../../utils/dom/style.mjs';\nimport { useId } from '../../../hooks/use-id/index.mjs';\nimport { isArray } from '@vue/shared';\nimport { useFormSize } from '../../form/src/hooks/use-form-common-props.mjs';\nvar ElButtonGroup = ElButton.ButtonGroup;\nvar _sfc_main = defineComponent({\n  name: \"ElDropdown\",\n  components: {\n    ElButton: ElButton,\n    ElButtonGroup: ElButtonGroup,\n    ElScrollbar: ElScrollbar,\n    ElDropdownCollection: ElCollection,\n    ElTooltip: ElTooltip,\n    ElRovingFocusGroup: ElRovingFocusGroup,\n    ElOnlyChild: OnlyChild,\n    ElIcon: ElIcon,\n    ArrowDown: ArrowDown\n  },\n  props: dropdownProps,\n  emits: [\"visible-change\", \"click\", \"command\"],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit;\n    var _instance = getCurrentInstance();\n    var ns = useNamespace(\"dropdown\");\n    var _useLocale = useLocale(),\n      t = _useLocale.t;\n    var triggeringElementRef = ref();\n    var referenceElementRef = ref();\n    var popperRef = ref(null);\n    var contentRef = ref(null);\n    var scrollbar = ref(null);\n    var currentTabId = ref(null);\n    var isUsingKeyboard = ref(false);\n    var triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down];\n    var wrapStyle = computed(function () {\n      return {\n        maxHeight: addUnit(props.maxHeight)\n      };\n    });\n    var dropdownTriggerKls = computed(function () {\n      return [ns.m(dropdownSize.value)];\n    });\n    var defaultTriggerId = useId().value;\n    var triggerId = computed(function () {\n      return props.id || defaultTriggerId;\n    });\n    watch([triggeringElementRef, toRef(props, \"trigger\")], function (_ref2, _ref3) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n        triggeringElement = _ref4[0],\n        trigger = _ref4[1];\n      var _ref5 = _slicedToArray(_ref3, 1),\n        prevTriggeringElement = _ref5[0];\n      var _a, _b, _c;\n      var triggerArray = isArray(trigger) ? trigger : [trigger];\n      if ((_a = prevTriggeringElement == null ? void 0 : prevTriggeringElement.$el) == null ? void 0 : _a.removeEventListener) {\n        prevTriggeringElement.$el.removeEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n      if ((_b = triggeringElement == null ? void 0 : triggeringElement.$el) == null ? void 0 : _b.removeEventListener) {\n        triggeringElement.$el.removeEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n      if (((_c = triggeringElement == null ? void 0 : triggeringElement.$el) == null ? void 0 : _c.addEventListener) && triggerArray.includes(\"hover\")) {\n        triggeringElement.$el.addEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n    }, {\n      immediate: true\n    });\n    onBeforeUnmount(function () {\n      var _a, _b;\n      if ((_b = (_a = triggeringElementRef.value) == null ? void 0 : _a.$el) == null ? void 0 : _b.removeEventListener) {\n        triggeringElementRef.value.$el.removeEventListener(\"pointerenter\", onAutofocusTriggerEnter);\n      }\n    });\n    function handleClick() {\n      handleClose();\n    }\n    function handleClose() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onClose();\n    }\n    function handleOpen() {\n      var _a;\n      (_a = popperRef.value) == null ? void 0 : _a.onOpen();\n    }\n    var dropdownSize = useFormSize();\n    function commandHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      emit.apply(void 0, [\"command\"].concat(args));\n    }\n    function onAutofocusTriggerEnter() {\n      var _a, _b;\n      (_b = (_a = triggeringElementRef.value) == null ? void 0 : _a.$el) == null ? void 0 : _b.focus();\n    }\n    function onItemEnter() {}\n    function onItemLeave() {\n      var contentEl = unref(contentRef);\n      contentEl == null ? void 0 : contentEl.focus();\n      currentTabId.value = null;\n    }\n    function handleCurrentTabIdChange(id) {\n      currentTabId.value = id;\n    }\n    function handleEntryFocus(e) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n    function handleBeforeShowTooltip() {\n      emit(\"visible-change\", true);\n    }\n    function handleShowTooltip(event) {\n      if ((event == null ? void 0 : event.type) === \"keydown\") {\n        contentRef.value.focus();\n      }\n    }\n    function handleBeforeHideTooltip() {\n      emit(\"visible-change\", false);\n    }\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef: contentRef,\n      role: computed(function () {\n        return props.role;\n      }),\n      triggerId: triggerId,\n      isUsingKeyboard: isUsingKeyboard,\n      onItemEnter: onItemEnter,\n      onItemLeave: onItemLeave\n    });\n    provide(\"elDropdown\", {\n      instance: _instance,\n      dropdownSize: dropdownSize,\n      handleClick: handleClick,\n      commandHandler: commandHandler,\n      trigger: toRef(props, \"trigger\"),\n      hideOnClick: toRef(props, \"hideOnClick\")\n    });\n    var onFocusAfterTrapped = function onFocusAfterTrapped(e) {\n      var _a, _b;\n      e.preventDefault();\n      (_b = (_a = contentRef.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a, {\n        preventScroll: true\n      });\n    };\n    var handlerMainButtonClick = function handlerMainButtonClick(event) {\n      emit(\"click\", event);\n    };\n    return {\n      t: t,\n      ns: ns,\n      scrollbar: scrollbar,\n      wrapStyle: wrapStyle,\n      dropdownTriggerKls: dropdownTriggerKls,\n      dropdownSize: dropdownSize,\n      triggerId: triggerId,\n      triggerKeys: triggerKeys,\n      currentTabId: currentTabId,\n      handleCurrentTabIdChange: handleCurrentTabIdChange,\n      handlerMainButtonClick: handlerMainButtonClick,\n      handleEntryFocus: handleEntryFocus,\n      handleClose: handleClose,\n      handleOpen: handleOpen,\n      handleBeforeShowTooltip: handleBeforeShowTooltip,\n      handleShowTooltip: handleShowTooltip,\n      handleBeforeHideTooltip: handleBeforeHideTooltip,\n      onFocusAfterTrapped: onFocusAfterTrapped,\n      popperRef: popperRef,\n      contentRef: contentRef,\n      triggeringElementRef: triggeringElementRef,\n      referenceElementRef: referenceElementRef\n    };\n  }\n});\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _a;\n  var _component_el_dropdown_collection = resolveComponent(\"el-dropdown-collection\");\n  var _component_el_roving_focus_group = resolveComponent(\"el-roving-focus-group\");\n  var _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  var _component_el_only_child = resolveComponent(\"el-only-child\");\n  var _component_el_tooltip = resolveComponent(\"el-tooltip\");\n  var _component_el_button = resolveComponent(\"el-button\");\n  var _component_arrow_down = resolveComponent(\"arrow-down\");\n  var _component_el_icon = resolveComponent(\"el-icon\");\n  var _component_el_button_group = resolveComponent(\"el-button-group\");\n  return openBlock(), createElementBlock(\"div\", {\n    \"class\": normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"disabled\", _ctx.disabled)])\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popperRef\",\n    role: _ctx.role,\n    effect: _ctx.effect,\n    \"fallback-placements\": [\"bottom\", \"top\"],\n    \"popper-options\": _ctx.popperOptions,\n    \"gpu-acceleration\": false,\n    \"hide-after\": _ctx.trigger === \"hover\" ? _ctx.hideTimeout : 0,\n    \"manual-mode\": true,\n    placement: _ctx.placement,\n    \"popper-class\": [_ctx.ns.e(\"popper\"), _ctx.popperClass],\n    \"reference-element\": (_a = _ctx.referenceElementRef) == null ? void 0 : _a.$el,\n    trigger: _ctx.trigger,\n    \"trigger-keys\": _ctx.triggerKeys,\n    \"trigger-target-el\": _ctx.contentRef,\n    \"show-after\": _ctx.trigger === \"hover\" ? _ctx.showTimeout : 0,\n    \"stop-popper-mouse-event\": false,\n    \"virtual-ref\": _ctx.triggeringElementRef,\n    \"virtual-triggering\": _ctx.splitButton,\n    disabled: _ctx.disabled,\n    transition: \"\".concat(_ctx.ns.namespace.value, \"-zoom-in-top\"),\n    teleported: _ctx.teleported,\n    pure: \"\",\n    persistent: \"\",\n    onBeforeShow: _ctx.handleBeforeShowTooltip,\n    onShow: _ctx.handleShowTooltip,\n    onBeforeHide: _ctx.handleBeforeHideTooltip\n  }, createSlots({\n    content: withCtx(function () {\n      return [createVNode(_component_el_scrollbar, {\n        ref: \"scrollbar\",\n        \"wrap-style\": _ctx.wrapStyle,\n        tag: \"div\",\n        \"view-class\": _ctx.ns.e(\"list\")\n      }, {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_el_roving_focus_group, {\n            loop: _ctx.loop,\n            \"current-tab-id\": _ctx.currentTabId,\n            orientation: \"horizontal\",\n            onCurrentTabIdChange: _ctx.handleCurrentTabIdChange,\n            onEntryFocus: _ctx.handleEntryFocus\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_el_dropdown_collection, null, {\n                \"default\": withCtx(function () {\n                  return [renderSlot(_ctx.$slots, \"dropdown\")];\n                }),\n                _: 3\n              })];\n            }),\n            _: 3\n          }, 8, [\"loop\", \"current-tab-id\", \"onCurrentTabIdChange\", \"onEntryFocus\"])];\n        }),\n        _: 3\n      }, 8, [\"wrap-style\", \"view-class\"])];\n    }),\n    _: 2\n  }, [!_ctx.splitButton ? {\n    name: \"default\",\n    fn: withCtx(function () {\n      return [createVNode(_component_el_only_child, {\n        id: _ctx.triggerId,\n        ref: \"triggeringElementRef\",\n        role: \"button\",\n        tabindex: _ctx.tabindex\n      }, {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 8, [\"id\", \"tabindex\"])];\n    })\n  } : void 0]), 1032, [\"role\", \"effect\", \"popper-options\", \"hide-after\", \"placement\", \"popper-class\", \"reference-element\", \"trigger\", \"trigger-keys\", \"trigger-target-el\", \"show-after\", \"virtual-ref\", \"virtual-triggering\", \"disabled\", \"transition\", \"teleported\", \"onBeforeShow\", \"onShow\", \"onBeforeHide\"]), _ctx.splitButton ? (openBlock(), createBlock(_component_el_button_group, {\n    key: 0\n  }, {\n    \"default\": withCtx(function () {\n      return [createVNode(_component_el_button, mergeProps({\n        ref: \"referenceElementRef\"\n      }, _ctx.buttonProps, {\n        size: _ctx.dropdownSize,\n        type: _ctx.type,\n        disabled: _ctx.disabled,\n        tabindex: _ctx.tabindex,\n        onClick: _ctx.handlerMainButtonClick\n      }), {\n        \"default\": withCtx(function () {\n          return [renderSlot(_ctx.$slots, \"default\")];\n        }),\n        _: 3\n      }, 16, [\"size\", \"type\", \"disabled\", \"tabindex\", \"onClick\"]), createVNode(_component_el_button, mergeProps({\n        id: _ctx.triggerId,\n        ref: \"triggeringElementRef\"\n      }, _ctx.buttonProps, {\n        role: \"button\",\n        size: _ctx.dropdownSize,\n        type: _ctx.type,\n        \"class\": _ctx.ns.e(\"caret-button\"),\n        disabled: _ctx.disabled,\n        tabindex: _ctx.tabindex,\n        \"aria-label\": _ctx.t(\"el.dropdown.toggleDropdown\")\n      }), {\n        \"default\": withCtx(function () {\n          return [createVNode(_component_el_icon, {\n            \"class\": normalizeClass(_ctx.ns.e(\"icon\"))\n          }, {\n            \"default\": withCtx(function () {\n              return [createVNode(_component_arrow_down)];\n            }),\n            _: 1\n          }, 8, [\"class\"])];\n        }),\n        _: 1\n      }, 16, [\"id\", \"size\", \"type\", \"class\", \"disabled\", \"tabindex\", \"aria-label\"])];\n    }),\n    _: 3\n  })) : createCommentVNode(\"v-if\", true)], 2);\n}\nvar Dropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/dropdown/src/dropdown.vue\"]]);\nexport { Dropdown as default };","map":{"version":3,"names":["ElButtonGroup","ElButton","ButtonGroup","_sfc_main","defineComponent","name","components","ElScrollbar","ElDropdownCollection","ElCollection","ElTooltip","ElRovingFocusGroup","ElOnlyChild","OnlyChild","ElIcon","ArrowDown","props","dropdownProps","emits","setup","_ref","emit","_instance","getCurrentInstance","ns","useNamespace","_useLocale","useLocale","t","triggeringElementRef","ref","referenceElementRef","popperRef","contentRef","scrollbar","currentTabId","isUsingKeyboard","triggerKeys","EVENT_CODE","enter","space","down","wrapStyle","computed","maxHeight","addUnit","dropdownTriggerKls","m","dropdownSize","value","defaultTriggerId","useId","triggerId","id","watch","toRef","_ref2","_ref3","_ref4","_slicedToArray","triggeringElement","trigger","_ref5","prevTriggeringElement","_a","_b","_c","triggerArray","isArray","$el","removeEventListener","onAutofocusTriggerEnter","addEventListener","includes","immediate","onBeforeUnmount","handleClick","handleClose","onClose","handleOpen","onOpen","useFormSize","commandHandler","_len","arguments","length","args","Array","_key","apply","concat","focus","onItemEnter","onItemLeave","contentEl","unref","handleCurrentTabIdChange","handleEntryFocus","e","preventDefault","stopImmediatePropagation","handleBeforeShowTooltip","handleShowTooltip","event","type","handleBeforeHideTooltip","provide","DROPDOWN_INJECTION_KEY","role","instance","hideOnClick","onFocusAfterTrapped","call","preventScroll","handlerMainButtonClick","resolveComponent","_component_el_only_child","_component_el_tooltip","_component_el_button","_component_arrow_down","_component_el_icon","_component_el_button_group","openBlock","createElementBlock","normalizeClass","_ctx","b","is","disabled","createVNode","effect","popperOptions","hideTimeout","placement","popperClass","showTimeout","splitButton","transition","namespace","teleported","pure","persistent","onBeforeShow","onShow","onBeforeHide","createSlots","_component_el_scrollbar","tag","withCtx","loop","orientation","onCurrentTabIdChange","_","renderSlot","$slots","createBlock","key","mergeProps","buttonProps","size","onClick"],"sources":["../../../../../../packages/components/dropdown/src/dropdown.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.is('disabled', disabled)]\">\n    <el-tooltip\n      ref=\"popperRef\"\n      :role=\"role\"\n      :effect=\"effect\"\n      :fallback-placements=\"['bottom', 'top']\"\n      :popper-options=\"popperOptions\"\n      :gpu-acceleration=\"false\"\n      :hide-after=\"trigger === 'hover' ? hideTimeout : 0\"\n      :manual-mode=\"true\"\n      :placement=\"placement\"\n      :popper-class=\"[ns.e('popper'), popperClass]\"\n      :reference-element=\"referenceElementRef?.$el\"\n      :trigger=\"trigger\"\n      :trigger-keys=\"triggerKeys\"\n      :trigger-target-el=\"contentRef\"\n      :show-after=\"trigger === 'hover' ? showTimeout : 0\"\n      :stop-popper-mouse-event=\"false\"\n      :virtual-ref=\"triggeringElementRef\"\n      :virtual-triggering=\"splitButton\"\n      :disabled=\"disabled\"\n      :transition=\"`${ns.namespace.value}-zoom-in-top`\"\n      :teleported=\"teleported\"\n      pure\n      persistent\n      @before-show=\"handleBeforeShowTooltip\"\n      @show=\"handleShowTooltip\"\n      @before-hide=\"handleBeforeHideTooltip\"\n    >\n      <template #content>\n        <el-scrollbar\n          ref=\"scrollbar\"\n          :wrap-style=\"wrapStyle\"\n          tag=\"div\"\n          :view-class=\"ns.e('list')\"\n        >\n          <el-roving-focus-group\n            :loop=\"loop\"\n            :current-tab-id=\"currentTabId\"\n            orientation=\"horizontal\"\n            @current-tab-id-change=\"handleCurrentTabIdChange\"\n            @entry-focus=\"handleEntryFocus\"\n          >\n            <el-dropdown-collection>\n              <slot name=\"dropdown\" />\n            </el-dropdown-collection>\n          </el-roving-focus-group>\n        </el-scrollbar>\n      </template>\n      <template v-if=\"!splitButton\" #default>\n        <el-only-child\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          role=\"button\"\n          :tabindex=\"tabindex\"\n        >\n          <slot name=\"default\" />\n        </el-only-child>\n      </template>\n    </el-tooltip>\n    <template v-if=\"splitButton\">\n      <el-button-group>\n        <el-button\n          ref=\"referenceElementRef\"\n          v-bind=\"buttonProps\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          @click=\"handlerMainButtonClick\"\n        >\n          <slot name=\"default\" />\n        </el-button>\n        <el-button\n          :id=\"triggerId\"\n          ref=\"triggeringElementRef\"\n          v-bind=\"buttonProps\"\n          role=\"button\"\n          :size=\"dropdownSize\"\n          :type=\"type\"\n          :class=\"ns.e('caret-button')\"\n          :disabled=\"disabled\"\n          :tabindex=\"tabindex\"\n          :aria-label=\"t('el.dropdown.toggleDropdown')\"\n        >\n          <el-icon :class=\"ns.e('icon')\"><arrow-down /></el-icon>\n        </el-button>\n      </el-button-group>\n    </template>\n  </div>\n</template>\n<script lang=\"ts\">\n// @ts-nocheck\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  onBeforeUnmount,\n  provide,\n  ref,\n  toRef,\n  unref,\n  watch,\n} from 'vue'\nimport ElButton from '@element-plus/components/button'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElIcon from '@element-plus/components/icon'\nimport ElRovingFocusGroup from '@element-plus/components/roving-focus-group'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useFormSize } from '@element-plus/components/form'\nimport { addUnit, isArray } from '@element-plus/utils'\nimport { ArrowDown } from '@element-plus/icons-vue'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useId, useLocale, useNamespace } from '@element-plus/hooks'\nimport { ElCollection as ElDropdownCollection, dropdownProps } from './dropdown'\nimport { DROPDOWN_INJECTION_KEY } from './tokens'\n\nimport type { CSSProperties } from 'vue'\n\nconst { ButtonGroup: ElButtonGroup } = ElButton\n\nexport default defineComponent({\n  name: 'ElDropdown',\n  components: {\n    ElButton,\n    ElButtonGroup,\n    ElScrollbar,\n    ElDropdownCollection,\n    ElTooltip,\n    ElRovingFocusGroup,\n    ElOnlyChild,\n    ElIcon,\n    ArrowDown,\n  },\n  props: dropdownProps,\n  emits: ['visible-change', 'click', 'command'],\n  setup(props, { emit }) {\n    const _instance = getCurrentInstance()\n    const ns = useNamespace('dropdown')\n    const { t } = useLocale()\n\n    const triggeringElementRef = ref()\n    const referenceElementRef = ref()\n    const popperRef = ref<InstanceType<typeof ElTooltip> | null>(null)\n    const contentRef = ref<HTMLElement | null>(null)\n    const scrollbar = ref(null)\n    const currentTabId = ref<string | null>(null)\n    const isUsingKeyboard = ref(false)\n    const triggerKeys = [EVENT_CODE.enter, EVENT_CODE.space, EVENT_CODE.down]\n\n    const wrapStyle = computed<CSSProperties>(() => ({\n      maxHeight: addUnit(props.maxHeight),\n    }))\n    const dropdownTriggerKls = computed(() => [ns.m(dropdownSize.value)])\n\n    const defaultTriggerId = useId().value\n    const triggerId = computed<string>(() => {\n      return props.id || defaultTriggerId\n    })\n\n    // The goal of this code is to focus on the tooltip triggering element when it is hovered.\n    // This is a temporary fix for where closing the dropdown through pointerleave event focuses on a\n    // completely different element. For a permanent solution, remove all calls to any \"element.focus()\"\n    // that are triggered through pointer enter/leave events.\n    watch(\n      [triggeringElementRef, toRef(props, 'trigger')],\n      ([triggeringElement, trigger], [prevTriggeringElement]) => {\n        const triggerArray = isArray(trigger) ? trigger : [trigger]\n        if (prevTriggeringElement?.$el?.removeEventListener) {\n          prevTriggeringElement.$el.removeEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n        if (triggeringElement?.$el?.removeEventListener) {\n          triggeringElement.$el.removeEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n        if (\n          triggeringElement?.$el?.addEventListener &&\n          triggerArray.includes('hover')\n        ) {\n          triggeringElement.$el.addEventListener(\n            'pointerenter',\n            onAutofocusTriggerEnter\n          )\n        }\n      },\n      { immediate: true }\n    )\n\n    onBeforeUnmount(() => {\n      if (triggeringElementRef.value?.$el?.removeEventListener) {\n        triggeringElementRef.value.$el.removeEventListener(\n          'pointerenter',\n          onAutofocusTriggerEnter\n        )\n      }\n    })\n\n    function handleClick() {\n      handleClose()\n    }\n\n    function handleClose() {\n      popperRef.value?.onClose()\n    }\n\n    function handleOpen() {\n      popperRef.value?.onOpen()\n    }\n\n    const dropdownSize = useFormSize()\n\n    function commandHandler(...args: any[]) {\n      emit('command', ...args)\n    }\n\n    function onAutofocusTriggerEnter() {\n      triggeringElementRef.value?.$el?.focus()\n    }\n\n    function onItemEnter() {\n      // NOOP for now\n    }\n\n    function onItemLeave() {\n      const contentEl = unref(contentRef)\n\n      contentEl?.focus()\n      currentTabId.value = null\n    }\n\n    function handleCurrentTabIdChange(id: string) {\n      currentTabId.value = id\n    }\n\n    function handleEntryFocus(e: Event) {\n      if (!isUsingKeyboard.value) {\n        e.preventDefault()\n        e.stopImmediatePropagation()\n      }\n    }\n\n    function handleBeforeShowTooltip() {\n      emit('visible-change', true)\n    }\n\n    function handleShowTooltip(event?: Event) {\n      if (event?.type === 'keydown') {\n        contentRef.value.focus()\n      }\n    }\n\n    function handleBeforeHideTooltip() {\n      emit('visible-change', false)\n    }\n\n    provide(DROPDOWN_INJECTION_KEY, {\n      contentRef,\n      role: computed(() => props.role),\n      triggerId,\n      isUsingKeyboard,\n      onItemEnter,\n      onItemLeave,\n    })\n\n    provide('elDropdown', {\n      instance: _instance,\n      dropdownSize,\n      handleClick,\n      commandHandler,\n      trigger: toRef(props, 'trigger'),\n      hideOnClick: toRef(props, 'hideOnClick'),\n    })\n\n    const onFocusAfterTrapped = (e: Event) => {\n      e.preventDefault()\n      contentRef.value?.focus?.({\n        preventScroll: true,\n      })\n    }\n\n    const handlerMainButtonClick = (event: MouseEvent) => {\n      emit('click', event)\n    }\n\n    return {\n      t,\n      ns,\n      scrollbar,\n      wrapStyle,\n      dropdownTriggerKls,\n      dropdownSize,\n      triggerId,\n      triggerKeys,\n      currentTabId,\n      handleCurrentTabIdChange,\n      handlerMainButtonClick,\n      handleEntryFocus,\n      handleClose,\n      handleOpen,\n      handleBeforeShowTooltip,\n      handleShowTooltip,\n      handleBeforeHideTooltip,\n      onFocusAfterTrapped,\n      popperRef,\n      contentRef,\n      triggeringElementRef,\n      referenceElementRef,\n    }\n  },\n})\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}