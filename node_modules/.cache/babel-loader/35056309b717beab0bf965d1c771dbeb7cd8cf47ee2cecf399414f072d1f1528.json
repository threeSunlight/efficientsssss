{"ast":null,"code":"import { ref, provide } from 'vue';\nimport '../../../../utils/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { removeClass, addClass } from '../../../../utils/dom/style.mjs';\nvar dragEventsKey = Symbol(\"dragEvents\");\nfunction useDragNodeHandler(_ref) {\n  var props = _ref.props,\n    ctx = _ref.ctx,\n    el$ = _ref.el$,\n    dropIndicator$ = _ref.dropIndicator$,\n    store = _ref.store;\n  var ns = useNamespace(\"tree\");\n  var dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null\n  });\n  var treeNodeDragStart = function treeNodeDragStart(_ref2) {\n    var event = _ref2.event,\n      treeNode = _ref2.treeNode;\n    if (typeof props.allowDrag === \"function\" && !props.allowDrag(treeNode.node)) {\n      event.preventDefault();\n      return false;\n    }\n    event.dataTransfer.effectAllowed = \"move\";\n    try {\n      event.dataTransfer.setData(\"text/plain\", \"\");\n    } catch (e) {}\n    dragState.value.draggingNode = treeNode;\n    ctx.emit(\"node-drag-start\", treeNode.node, event);\n  };\n  var treeNodeDragOver = function treeNodeDragOver(_ref3) {\n    var event = _ref3.event,\n      treeNode = _ref3.treeNode;\n    var dropNode = treeNode;\n    var oldDropNode = dragState.value.dropNode;\n    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {\n      removeClass(oldDropNode.$el, ns.is(\"drop-inner\"));\n    }\n    var draggingNode = dragState.value.draggingNode;\n    if (!draggingNode || !dropNode) return;\n    var dropPrev = true;\n    var dropInner = true;\n    var dropNext = true;\n    var userAllowDropInner = true;\n    if (typeof props.allowDrop === \"function\") {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, \"prev\");\n      userAllowDropInner = dropInner = props.allowDrop(draggingNode.node, dropNode.node, \"inner\");\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, \"next\");\n    }\n    event.dataTransfer.dropEffect = dropInner || dropPrev || dropNext ? \"move\" : \"none\";\n    if ((dropPrev || dropInner || dropNext) && (oldDropNode == null ? void 0 : oldDropNode.node.id) !== dropNode.node.id) {\n      if (oldDropNode) {\n        ctx.emit(\"node-drag-leave\", draggingNode.node, oldDropNode.node, event);\n      }\n      ctx.emit(\"node-drag-enter\", draggingNode.node, dropNode.node, event);\n    }\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode;\n    }\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false;\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false;\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false;\n    }\n    if (draggingNode.node === dropNode.node || draggingNode.node.contains(dropNode.node)) {\n      dropPrev = false;\n      dropInner = false;\n      dropNext = false;\n    }\n    var targetPosition = dropNode.$el.getBoundingClientRect();\n    var treePosition = el$.value.getBoundingClientRect();\n    var dropType;\n    var prevPercent = dropPrev ? dropInner ? 0.25 : dropNext ? 0.45 : 1 : -1;\n    var nextPercent = dropNext ? dropInner ? 0.75 : dropPrev ? 0.55 : 0 : 1;\n    var indicatorTop = -9999;\n    var distance = event.clientY - targetPosition.top;\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = \"before\";\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = \"after\";\n    } else if (dropInner) {\n      dropType = \"inner\";\n    } else {\n      dropType = \"none\";\n    }\n    var iconPosition = dropNode.$el.querySelector(\".\".concat(ns.be(\"node\", \"expand-icon\"))).getBoundingClientRect();\n    var dropIndicator = dropIndicator$.value;\n    if (dropType === \"before\") {\n      indicatorTop = iconPosition.top - treePosition.top;\n    } else if (dropType === \"after\") {\n      indicatorTop = iconPosition.bottom - treePosition.top;\n    }\n    dropIndicator.style.top = \"\".concat(indicatorTop, \"px\");\n    dropIndicator.style.left = \"\".concat(iconPosition.right - treePosition.left, \"px\");\n    if (dropType === \"inner\") {\n      addClass(dropNode.$el, ns.is(\"drop-inner\"));\n    } else {\n      removeClass(dropNode.$el, ns.is(\"drop-inner\"));\n    }\n    dragState.value.showDropIndicator = dropType === \"before\" || dropType === \"after\";\n    dragState.value.allowDrop = dragState.value.showDropIndicator || userAllowDropInner;\n    dragState.value.dropType = dropType;\n    ctx.emit(\"node-drag-over\", draggingNode.node, dropNode.node, event);\n  };\n  var treeNodeDragEnd = function treeNodeDragEnd(event) {\n    var _dragState$value = dragState.value,\n      draggingNode = _dragState$value.draggingNode,\n      dropType = _dragState$value.dropType,\n      dropNode = _dragState$value.dropNode;\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n    if (draggingNode && dropNode) {\n      var draggingNodeCopy = {\n        data: draggingNode.node.data\n      };\n      if (dropType !== \"none\") {\n        draggingNode.node.remove();\n      }\n      if (dropType === \"before\") {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"after\") {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node);\n      } else if (dropType === \"inner\") {\n        dropNode.node.insertChild(draggingNodeCopy);\n      }\n      if (dropType !== \"none\") {\n        store.value.registerNode(draggingNodeCopy);\n      }\n      removeClass(dropNode.$el, ns.is(\"drop-inner\"));\n      ctx.emit(\"node-drag-end\", draggingNode.node, dropNode.node, dropType, event);\n      if (dropType !== \"none\") {\n        ctx.emit(\"node-drop\", draggingNode.node, dropNode.node, dropType, event);\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit(\"node-drag-end\", draggingNode.node, null, dropType, event);\n    }\n    dragState.value.showDropIndicator = false;\n    dragState.value.draggingNode = null;\n    dragState.value.dropNode = null;\n    dragState.value.allowDrop = true;\n  };\n  provide(dragEventsKey, {\n    treeNodeDragStart: treeNodeDragStart,\n    treeNodeDragOver: treeNodeDragOver,\n    treeNodeDragEnd: treeNodeDragEnd\n  });\n  return {\n    dragState: dragState\n  };\n}\nexport { dragEventsKey, useDragNodeHandler };","map":{"version":3,"names":["dragEventsKey","Symbol","useDragNodeHandler","_ref","props","ctx","el$","dropIndicator$","store","ns","useNamespace","dragState","ref","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","treeNodeDragStart","_ref2","event","treeNode","allowDrag","node","preventDefault","dataTransfer","effectAllowed","setData","e","value","emit","treeNodeDragOver","_ref3","oldDropNode","id","removeClass","$el","is","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","nextSibling","previousSibling","contains","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","concat","be","dropIndicator","bottom","style","left","right","addClass","treeNodeDragEnd","_dragState$value","draggingNodeCopy","data","remove","parent","insertBefore","insertAfter","insertChild","registerNode","provide"],"sources":["../../../../../../../packages/components/tree/src/model/useDragNode.ts"],"sourcesContent":["// @ts-nocheck\nimport { provide, ref } from 'vue'\nimport { addClass, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { InjectionKey } from 'vue'\nimport type Node from './node'\nimport type { NodeDropType } from '../tree.type'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace('tree')\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (\n      typeof props.allowDrag === 'function' &&\n      !props.allowDrag(treeNode.node)\n    ) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode.node.id !== dropNode.node.id) {\n      removeClass(oldDropNode.$el, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (typeof props.allowDrop === 'function') {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if (\n      (dropPrev || dropInner || dropNext) &&\n      oldDropNode?.node.id !== dropNode.node.id\n    ) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n\n    const targetPosition = dropNode.$el.getBoundingClientRect()\n    const treePosition = el$.value.getBoundingClientRect()\n\n    let dropType: NodeDropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator.style.top = `${indicatorTop}px`\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropNode.$el, ns.is('drop-inner'))\n    } else {\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy)\n      }\n\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}