{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defineComponent, openBlock, createBlock, resolveDynamicComponent, mergeProps, unref, withCtx, createElementBlock, Fragment, renderSlot, normalizeClass, createCommentVNode } from 'vue';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useButton } from './use-button.mjs';\nimport { buttonProps, buttonEmits } from './button.mjs';\nimport { useButtonCustomStyle } from './button-custom.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nvar __default__ = defineComponent({\n  name: \"ElButton\"\n});\nvar _sfc_main = /* @__PURE__ */defineComponent(_objectSpread(_objectSpread({}, __default__), {}, {\n  props: buttonProps,\n  emits: buttonEmits,\n  setup: function setup(__props, _ref2) {\n    var expose = _ref2.expose,\n      emit = _ref2.emit;\n    var props = __props;\n    var buttonStyle = useButtonCustomStyle(props);\n    var ns = useNamespace(\"button\");\n    var _useButton = useButton(props, emit),\n      _ref = _useButton._ref,\n      _size = _useButton._size,\n      _type = _useButton._type,\n      _disabled = _useButton._disabled,\n      _props = _useButton._props,\n      shouldAddSpace = _useButton.shouldAddSpace,\n      handleClick = _useButton.handleClick;\n    expose({\n      ref: _ref,\n      size: _size,\n      type: _type,\n      disabled: _disabled,\n      shouldAddSpace: shouldAddSpace\n    });\n    return function (_ctx, _cache) {\n      return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), mergeProps({\n        ref_key: \"_ref\",\n        ref: _ref\n      }, unref(_props), {\n        \"class\": [unref(ns).b(), unref(ns).m(unref(_type)), unref(ns).m(unref(_size)), unref(ns).is(\"disabled\", unref(_disabled)), unref(ns).is(\"loading\", _ctx.loading), unref(ns).is(\"plain\", _ctx.plain), unref(ns).is(\"round\", _ctx.round), unref(ns).is(\"circle\", _ctx.circle), unref(ns).is(\"text\", _ctx.text), unref(ns).is(\"link\", _ctx.link), unref(ns).is(\"has-bg\", _ctx.bg)],\n        style: unref(buttonStyle),\n        onClick: unref(handleClick)\n      }), {\n        \"default\": withCtx(function () {\n          return [_ctx.loading ? (openBlock(), createElementBlock(Fragment, {\n            key: 0\n          }, [_ctx.$slots.loading ? renderSlot(_ctx.$slots, \"loading\", {\n            key: 0\n          }) : (openBlock(), createBlock(unref(ElIcon), {\n            key: 1,\n            \"class\": normalizeClass(unref(ns).is(\"loading\"))\n          }, {\n            \"default\": withCtx(function () {\n              return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.loadingIcon)))];\n            }),\n            _: 1\n          }, 8, [\"class\"]))], 64)) : _ctx.icon || _ctx.$slots.icon ? (openBlock(), createBlock(unref(ElIcon), {\n            key: 1\n          }, {\n            \"default\": withCtx(function () {\n              return [_ctx.icon ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.icon), {\n                key: 0\n              })) : renderSlot(_ctx.$slots, \"icon\", {\n                key: 1\n              })];\n            }),\n            _: 3\n          })) : createCommentVNode(\"v-if\", true), _ctx.$slots[\"default\"] ? (openBlock(), createElementBlock(\"span\", {\n            key: 2,\n            \"class\": normalizeClass(_defineProperty({}, unref(ns).em(\"text\", \"expand\"), unref(shouldAddSpace)))\n          }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true)];\n        }),\n        _: 3\n      }, 16, [\"class\", \"style\", \"onClick\"]);\n    };\n  }\n}));\nvar Button = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/button/src/button.vue\"]]);\nexport { Button as default };","map":{"version":3,"names":["name","buttonStyle","useButtonCustomStyle","props","ns","useNamespace","_useButton","useButton","emit","_ref","_size","_type","_disabled","_props","shouldAddSpace","handleClick","expose","ref","size","type","disabled"],"sources":["../../../../../../packages/components/button/src/button.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    ref=\"_ref\"\n    v-bind=\"_props\"\n    :class=\"[\n      ns.b(),\n      ns.m(_type),\n      ns.m(_size),\n      ns.is('disabled', _disabled),\n      ns.is('loading', loading),\n      ns.is('plain', plain),\n      ns.is('round', round),\n      ns.is('circle', circle),\n      ns.is('text', text),\n      ns.is('link', link),\n      ns.is('has-bg', bg),\n    ]\"\n    :style=\"buttonStyle\"\n    @click=\"handleClick\"\n  >\n    <template v-if=\"loading\">\n      <slot v-if=\"$slots.loading\" name=\"loading\" />\n      <el-icon v-else :class=\"ns.is('loading')\">\n        <component :is=\"loadingIcon\" />\n      </el-icon>\n    </template>\n    <el-icon v-else-if=\"icon || $slots.icon\">\n      <component :is=\"icon\" v-if=\"icon\" />\n      <slot v-else name=\"icon\" />\n    </el-icon>\n    <span\n      v-if=\"$slots.default\"\n      :class=\"{ [ns.em('text', 'expand')]: shouldAddSpace }\"\n    >\n      <slot />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ElIcon } from '@element-plus/components/icon'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useButton } from './use-button'\nimport { buttonEmits, buttonProps } from './button'\nimport { useButtonCustomStyle } from './button-custom'\n\ndefineOptions({\n  name: 'ElButton',\n})\n\nconst props = defineProps(buttonProps)\nconst emit = defineEmits(buttonEmits)\n\nconst buttonStyle = useButtonCustomStyle(props)\nconst ns = useNamespace('button')\nconst { _ref, _size, _type, _disabled, _props, shouldAddSpace, handleClick } =\n  useButton(props, emit)\n\ndefineExpose({\n  /** @description button html element */\n  ref: _ref,\n  /** @description button size */\n  size: _size,\n  /** @description button type */\n  type: _type,\n  /** @description button disabled */\n  disabled: _disabled,\n  /** @description whether adding space */\n  shouldAddSpace,\n})\n</script>\n"],"mappings":";;;;;;;;;;;;;;iCA+Cc;EACZA,IAAM;AACR;;;;;;;;IAKM,IAAAC,WAAA,GAAcC,oBAAA,CAAqBC,KAAK;IACxC,IAAAC,EAAA,GAAKC,YAAA,CAAa,QAAQ;IAC1B,IAAAC,UAAA,GACJC,SAAU,CAAAJ,KAAA,EAAOK,IAAI;MADfC,IAAM,GAAAH,UAAA,CAANG,IAAM;MAAAC,KAAA,GAAAJ,UAAA,CAAAI,KAAA;MAAOC,KAAO,GAAAL,UAAA,CAAPK,KAAO;MAAAC,SAAA,GAAAN,UAAA,CAAAM,SAAA;MAAWC,MAAA,GAAAP,UAAA,CAAAO,MAAA;MAAQC,cAAgB,GAAAR,UAAA,CAAhBQ,cAAgB;MAAAC,WAAA,GAAAT,UAAA,CAAAS,WAAA;IAGlDC,MAAA;MAEXC,GAAK,EAAAR,IAAA;MAELS,IAAM,EAAAR,KAAA;MAENS,IAAM,EAAAR,KAAA;MAENS,QAAU,EAAAR,SAAA;MAEVE,cAAA,EAAAA;IAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}