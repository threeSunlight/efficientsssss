{"ast":null,"code":"var _inputEmits;\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { isString } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { useSizeProp } from '../../../hooks/use-size/index.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nvar inputProps = buildProps({\n  id: {\n    type: String,\n    \"default\": void 0\n  },\n  size: useSizeProp,\n  disabled: Boolean,\n  modelValue: {\n    type: definePropType([String, Number, Object]),\n    \"default\": \"\"\n  },\n  type: {\n    type: String,\n    \"default\": \"text\"\n  },\n  resize: {\n    type: String,\n    values: [\"none\", \"both\", \"horizontal\", \"vertical\"]\n  },\n  autosize: {\n    type: definePropType([Boolean, Object]),\n    \"default\": false\n  },\n  autocomplete: {\n    type: String,\n    \"default\": \"off\"\n  },\n  formatter: {\n    type: Function\n  },\n  parser: {\n    type: Function\n  },\n  placeholder: {\n    type: String\n  },\n  form: {\n    type: String\n  },\n  readonly: {\n    type: Boolean,\n    \"default\": false\n  },\n  clearable: {\n    type: Boolean,\n    \"default\": false\n  },\n  showPassword: {\n    type: Boolean,\n    \"default\": false\n  },\n  showWordLimit: {\n    type: Boolean,\n    \"default\": false\n  },\n  suffixIcon: {\n    type: iconPropType\n  },\n  prefixIcon: {\n    type: iconPropType\n  },\n  containerRole: {\n    type: String,\n    \"default\": void 0\n  },\n  label: {\n    type: String,\n    \"default\": void 0\n  },\n  tabindex: {\n    type: [String, Number],\n    \"default\": 0\n  },\n  validateEvent: {\n    type: Boolean,\n    \"default\": true\n  },\n  inputStyle: {\n    type: definePropType([Object, Array, String]),\n    \"default\": function _default() {\n      return mutable({});\n    }\n  }\n});\nvar inputEmits = (_inputEmits = {}, _defineProperty(_inputEmits, UPDATE_MODEL_EVENT, function (value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"input\", function input(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"change\", function change(value) {\n  return isString(value);\n}), _defineProperty(_inputEmits, \"focus\", function focus(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"blur\", function blur(evt) {\n  return evt instanceof FocusEvent;\n}), _defineProperty(_inputEmits, \"clear\", function clear() {\n  return true;\n}), _defineProperty(_inputEmits, \"mouseleave\", function mouseleave(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"mouseenter\", function mouseenter(evt) {\n  return evt instanceof MouseEvent;\n}), _defineProperty(_inputEmits, \"keydown\", function keydown(evt) {\n  return evt instanceof Event;\n}), _defineProperty(_inputEmits, \"compositionstart\", function compositionstart(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionupdate\", function compositionupdate(evt) {\n  return evt instanceof CompositionEvent;\n}), _defineProperty(_inputEmits, \"compositionend\", function compositionend(evt) {\n  return evt instanceof CompositionEvent;\n}), _inputEmits);\nexport { inputEmits, inputProps };","map":{"version":3,"names":["inputProps","buildProps","id","type","String","size","useSizeProp","disabled","Boolean","modelValue","definePropType","Number","Object","resize","values","autosize","autocomplete","formatter","Function","parser","placeholder","form","readonly","clearable","showPassword","showWordLimit","suffixIcon","iconPropType","prefixIcon","containerRole","label","tabindex","validateEvent","inputStyle","Array","_default","mutable","inputEmits","_inputEmits","_defineProperty","UPDATE_MODEL_EVENT","value","isString","input","change","focus","evt","FocusEvent","blur","clear","mouseleave","MouseEvent","mouseenter","keydown","Event","compositionstart","CompositionEvent","compositionupdate","compositionend"],"sources":["../../../../../../packages/components/input/src/input.ts"],"sourcesContent":["import { isString } from '@vue/shared'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useSizeProp } from '@element-plus/hooks'\nimport type Input from './input.vue'\nimport type { ExtractPropTypes, StyleValue } from 'vue'\n\nexport type InputAutoSize = { minRows?: number; maxRows?: number } | boolean\n\nexport const inputProps = buildProps({\n  /**\n   * @description native input id\n   */\n  id: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input box size\n   */\n  size: useSizeProp,\n  /**\n   * @description whether to disable\n   */\n  disabled: Boolean,\n  /**\n   * @description binding value\n   */\n  modelValue: {\n    type: definePropType<string | number | null | undefined>([\n      String,\n      Number,\n      Object,\n    ]),\n    default: '',\n  },\n  /**\n   * @description type of input\n   */\n  type: {\n    type: String,\n    default: 'text',\n  },\n  /**\n   * @description control the resizability\n   */\n  resize: {\n    type: String,\n    values: ['none', 'both', 'horizontal', 'vertical'],\n  },\n  /**\n   * @description whether textarea has an adaptive height\n   */\n  autosize: {\n    type: definePropType<InputAutoSize>([Boolean, Object]),\n    default: false,\n  },\n  /**\n   * @description native input autocomplete\n   */\n  autocomplete: {\n    type: String,\n    default: 'off',\n  },\n  /**\n   * @description format content\n   */\n  formatter: {\n    type: Function,\n  },\n  /**\n   * @description parse content\n   */\n  parser: {\n    type: Function,\n  },\n  /**\n   * @description placeholder\n   */\n  placeholder: {\n    type: String,\n  },\n  /**\n   * @description native input form\n   */\n  form: {\n    type: String,\n  },\n  /**\n   * @description native input readonly\n   */\n  readonly: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description native input readonly\n   */\n  clearable: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description toggleable password input\n   */\n  showPassword: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description word count\n   */\n  showWordLimit: {\n    type: Boolean,\n    default: false,\n  },\n  /**\n   * @description suffix icon\n   */\n  suffixIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description prefix icon\n   */\n  prefixIcon: {\n    type: iconPropType,\n  },\n  /**\n   * @description container role, internal properties provided for use by the picker component\n   */\n  containerRole: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description native input aria-label\n   */\n  label: {\n    type: String,\n    default: undefined,\n  },\n  /**\n   * @description input tabindex\n   */\n  tabindex: {\n    type: [String, Number],\n    default: 0,\n  },\n  /**\n   * @description whether to trigger form validation\n   */\n  validateEvent: {\n    type: Boolean,\n    default: true,\n  },\n  /**\n   * @description input or texearea element style\n   */\n  inputStyle: {\n    type: definePropType<StyleValue>([Object, Array, String]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type InputProps = ExtractPropTypes<typeof inputProps>\n\nexport const inputEmits = {\n  [UPDATE_MODEL_EVENT]: (value: string) => isString(value),\n  input: (value: string) => isString(value),\n  change: (value: string) => isString(value),\n  focus: (evt: FocusEvent) => evt instanceof FocusEvent,\n  blur: (evt: FocusEvent) => evt instanceof FocusEvent,\n  clear: () => true,\n  mouseleave: (evt: MouseEvent) => evt instanceof MouseEvent,\n  mouseenter: (evt: MouseEvent) => evt instanceof MouseEvent,\n  // NOTE: when autofill by browser, the keydown event is instanceof Event, not KeyboardEvent\n  // relative bug report https://github.com/element-plus/element-plus/issues/6665\n  keydown: (evt: KeyboardEvent | Event) => evt instanceof Event,\n  compositionstart: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionupdate: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n  compositionend: (evt: CompositionEvent) => evt instanceof CompositionEvent,\n}\nexport type InputEmits = typeof inputEmits\n\nexport type InputInstance = InstanceType<typeof Input>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}